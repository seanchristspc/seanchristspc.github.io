<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sean christ</title>
  <icon>https://www.gravatar.com/avatar/8f82f58f298afd6be845bca97fcac8e3</icon>
  <subtitle>We sat and drank with the sun on our shoulder&#39;s and felt like free men.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-12T15:20:55.336Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>seanchrist</name>
    <email>seanchristspc@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Memento模式</title>
    <link href="http://yoursite.com/2021/01/29/Memento%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Memento模式/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-12T15:20:55.336Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Memento模式"><a href="#Memento模式" class="headerlink" title="Memento模式"></a>Memento模式</h1><p><strong>保存对象状态</strong></p><h2 id="类表"><a href="#类表" class="headerlink" title="类表"></a>类表</h2><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>Memento</td><td>表示Gamer状态的类</td></tr><tr><td>Gamer</td><td>表示游戏主人公的类，他会生成Memento实例</td></tr><tr><td>Main</td><td>进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态</td></tr></tbody></table><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-72a10bf2bf90c458.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Memento"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Memento类"><a href="#Memento类" class="headerlink" title="Memento类"></a>Memento类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.AbstractFactory.listfactory.ListLink;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Memento</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> money;</span><br><span class="line">ArrayList fruits;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line">Memento(<span class="keyword">int</span> money)&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line"><span class="keyword">this</span>.fruits=<span class="keyword">new</span> ArrayList();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addFruit</span><span class="params">(String fruit)</span></span>&#123;</span><br><span class="line">fruits.add(fruit);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">getFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (List) fruits.clone();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Gamer类"><a href="#Gamer类" class="headerlink" title="Gamer类"></a>Gamer类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Memento;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gamer</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> money;</span><br><span class="line"><span class="keyword">private</span> List fruits=<span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">private</span> Random random=<span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String[] fruitsname=&#123;<span class="string">"苹果"</span>,<span class="string">"葡萄"</span>,<span class="string">"香蕉"</span>,<span class="string">"橘子"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Gamer</span><span class="params">(<span class="keyword">int</span> money)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bet</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> dice = random.nextInt(<span class="number">6</span>)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(dice==<span class="number">1</span>)&#123;</span><br><span class="line">money+=<span class="number">100</span>;</span><br><span class="line">System.out.println(<span class="string">"所持金币增加了。"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dice==<span class="number">2</span>) &#123;</span><br><span class="line">money/=<span class="number">2</span>;</span><br><span class="line">System.out.println(<span class="string">"所持金币减半。"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dice==<span class="number">6</span>) &#123;</span><br><span class="line">String f=getFruit();</span><br><span class="line">System.out.println(<span class="string">"获得的水果"</span>+f+<span class="string">")。"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"什么都没发生。"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Memento <span class="title">createMemento</span><span class="params">()</span></span>&#123;</span><br><span class="line">Memento m=<span class="keyword">new</span> Memento(money);</span><br><span class="line">Iterator it=fruits.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">String f=(String)it.next();</span><br><span class="line"><span class="keyword">if</span>(f.startsWith(<span class="string">"好吃的"</span>))&#123;</span><br><span class="line">m.addFruit(f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restoreMemento</span><span class="params">(Memento memento)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line"><span class="keyword">this</span>.fruits=memento.getFruits();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"[money= "</span>+money+<span class="string">",fruits= "</span>+fruits+<span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getFruit</span><span class="params">()</span></span>&#123; </span><br><span class="line">String prefix=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">if</span>(random.nextBoolean())&#123;</span><br><span class="line">prefix=<span class="string">"好吃的"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> prefix+fruitsname[random.nextInt(fruitsname.length)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Memento;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Gamer gamer=<span class="keyword">new</span> Gamer(<span class="number">100</span>);</span><br><span class="line">Memento memento=gamer.createMemento();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">System.out.println(<span class="string">"========"</span>+i);</span><br><span class="line">System.out.println(<span class="string">"当前状态："</span>+gamer);</span><br><span class="line">gamer.bet(); <span class="comment">//进行游戏</span></span><br><span class="line">System.out.println(<span class="string">"所持金钱为"</span>+gamer.getMoney()+<span class="string">"元"</span>);</span><br><span class="line"><span class="keyword">if</span>(gamer.getMoney()&gt;memento.getMoney())&#123;</span><br><span class="line">System.out.println(<span class="string">"（所持金钱增加许多，因此保存游戏当前状态）"</span>);</span><br><span class="line">memento=gamer.createMemento();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (gamer.getMoney()&lt;memento.getMoney()/<span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"（所持金钱减少许多，因此要恢复至以前状态）"</span>);</span><br><span class="line">gamer.restoreMemento(memento);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>该模式就是实现对象状态的恢复，而设置的。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Memento模式&quot;&gt;&lt;a href=&quot;#Memento模式&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Memento" scheme="http://yoursite.com/tags/Memento/"/>
    
  </entry>
  
  <entry>
    <title>Myeclipse2017-ci9破解</title>
    <link href="http://yoursite.com/2021/01/29/Myeclipse2017ci9%E7%A0%B4%E8%A7%A3/"/>
    <id>http://yoursite.com/2021/01/29/Myeclipse2017ci9破解/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-06T10:15:24.333Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Myeclipse2017-ci9破解-windows版"><a href="#Myeclipse2017-ci9破解-windows版" class="headerlink" title="Myeclipse2017-ci9破解 windows版"></a>Myeclipse2017-ci9破解 windows版</h1><h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><p>安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用</p><h2 id="下载myeclipse2017ci9及破解文件"><a href="#下载myeclipse2017ci9及破解文件" class="headerlink" title="下载myeclipse2017ci9及破解文件"></a>下载myeclipse2017ci9及破解文件</h2><p><a href="https://pan.baidu.com/s/1jJ3Em38" target="_blank" rel="noopener">下载地址</a><br>密码: t77b<br>下载完成，进行安装步骤</p><h2 id="安装myeclipse"><a href="#安装myeclipse" class="headerlink" title="安装myeclipse"></a>安装myeclipse</h2><p>1.点击安装文件出现下图 点击next<br><img src="http://upload-images.jianshu.io/upload_images/10517580-c7ad62c591de0a0b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.PNG"></p><ol><li>接受协议 点击next<br><img src="http://upload-images.jianshu.io/upload_images/10517580-0146001eedb0b7ab.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.PNG"><br>3.自己选择安装目录，一定要是空文件夹<br><img src="http://upload-images.jianshu.io/upload_images/10517580-3800fb1c0170e29b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="3.PNG"><br>4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next<br><img src="http://upload-images.jianshu.io/upload_images/10517580-360837ce4310ec0b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4.PNG"><br>5.静静的等待安装<br><img src="http://upload-images.jianshu.io/upload_images/10517580-22bb2e2f71e38448.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5.PNG"><br>6.这一步非常重要 取消启动myeclipse 点击finish<br><img src="http://upload-images.jianshu.io/upload_images/10517580-ed84fc6200f54caf.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6.PNG"><br>安装完成</li></ol><h2 id="破解Myeclipse"><a href="#破解Myeclipse" class="headerlink" title="破解Myeclipse"></a>破解Myeclipse</h2><p>1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中<br><img src="http://upload-images.jianshu.io/upload_images/10517580-9f929aadf336a95c.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="7.PNG"></p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-92a7d01855a46d91.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="8.PNG"></p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-b517413cf4135de9.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9.PNG"></p><p>2.点击crack.bat 启动破解文件<br><img src="http://upload-images.jianshu.io/upload_images/10517580-a121630126a571ef.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="10.PNG"></p><ol><li>在Usercode任意输入 选择blue 双击 SystemId 在点击 active<br>出现下面内容：<br><img src="http://upload-images.jianshu.io/upload_images/10517580-f2b742d41ceb951c.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="12.PNG"></li></ol><p>4.点击Tools 选择 saveproperties<br>ok!</p><p>5.启动Myeclipse<br><img src="http://upload-images.jianshu.io/upload_images/10517580-0278093a63ae78ed.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="13.PNG"></p><h2 id="查看是否激活成功"><a href="#查看是否激活成功" class="headerlink" title="查看是否激活成功"></a>查看是否激活成功</h2><p>1.点击help — SubScription information<br><img src="http://upload-images.jianshu.io/upload_images/10517580-a45bf6fe19b47d13.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="14.PNG"></p><h3 id="破解完成，请勿用于商业用途。喜欢请支持正版！！！！！"><a href="#破解完成，请勿用于商业用途。喜欢请支持正版！！！！！" class="headerlink" title="破解完成，请勿用于商业用途。喜欢请支持正版！！！！！"></a>破解完成，请勿用于商业用途。喜欢请支持正版！！！！！</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Myeclipse2017-ci9破解-windows版&quot;&gt;&lt;a href=&quot;#Myeclipse2017-ci9
      
    
    </summary>
    
      <category term="soft" scheme="http://yoursite.com/categories/soft/"/>
    
    
      <category term="crack" scheme="http://yoursite.com/tags/crack/"/>
    
      <category term="Myeclipse" scheme="http://yoursite.com/tags/Myeclipse/"/>
    
  </entry>
  
  <entry>
    <title>Observe模式</title>
    <link href="http://yoursite.com/2021/01/29/Observe%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Observe模式/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-12T15:21:50.428Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Observe模式"><a href="#Observe模式" class="headerlink" title="Observe模式"></a>Observe模式</h1><p>在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。</p><hr><h2 id="类和接口的表"><a href="#类和接口的表" class="headerlink" title="类和接口的表"></a>类和接口的表</h2><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>Observer</td><td>表示观察者接口</td></tr><tr><td>NumberGenerator</td><td>表示生成数值的对象的抽象类</td></tr><tr><td>RandomNumberGenerator</td><td>生成随机数的类</td></tr><tr><td>DigitObserver</td><td>表示以数字形式显示数值类</td></tr><tr><td>GraphObserver</td><td>表示以简单的图形显示数值类</td></tr><tr><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h2 id="程序类图"><a href="#程序类图" class="headerlink" title="程序类图"></a>程序类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-3f13d582ba405b5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Observer"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Observer接口-定义抽象方法"><a href="#Observer接口-定义抽象方法" class="headerlink" title="Observer接口(定义抽象方法)"></a>Observer接口(定义抽象方法)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NumberGenerator抽象类"><a href="#NumberGenerator抽象类" class="headerlink" title="NumberGenerator抽象类"></a>NumberGenerator抽象类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberGenerator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ArrayList observers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addObserver</span><span class="params">(Observer observer)</span></span>&#123;</span><br><span class="line">observers.add(observer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteObserver</span><span class="params">(Observer observer)</span></span>&#123;</span><br><span class="line">observers.remove(observer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">()</span></span>&#123;</span><br><span class="line">Iterator it=observers.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Observer o=(Observer) it.next();</span><br><span class="line">o.update(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">exeute</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DigitObserver具体的观察者"><a href="#DigitObserver具体的观察者" class="headerlink" title="DigitObserver具体的观察者"></a>DigitObserver具体的观察者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DigitObserver</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"DigitObserver："</span>+generator.getNumber());</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GraphObserver具体的观察者"><a href="#GraphObserver具体的观察者" class="headerlink" title="GraphObserver具体的观察者"></a>GraphObserver具体的观察者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphObserver</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"GraphObserver:"</span>);</span><br><span class="line"><span class="keyword">int</span> count = generator.getNumber();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RandomNumberGenerator具体的被观察对象"><a href="#RandomNumberGenerator具体的被观察对象" class="headerlink" title="RandomNumberGenerator具体的被观察对象"></a>RandomNumberGenerator具体的被观察对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomNumberGenerator</span> <span class="keyword">extends</span> <span class="title">NumberGenerator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Random random= <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exeute</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">number=random.nextInt(<span class="number">50</span>);</span><br><span class="line">notifyObservers();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ackage com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">NumberGenerator generator=<span class="keyword">new</span> RandomNumberGenerator();</span><br><span class="line">Observer observer1=<span class="keyword">new</span> DigitObserver();</span><br><span class="line">Observer observer2=<span class="keyword">new</span> GraphObserver();</span><br><span class="line">generator.addObserver(observer1);</span><br><span class="line">generator.addObserver(observer2);</span><br><span class="line">generator.exeute();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>Observer角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Observe模式&quot;&gt;&lt;a href=&quot;#Observe模式&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Observe" scheme="http://yoursite.com/tags/Observe/"/>
    
  </entry>
  
  <entry>
    <title>Proxy模式</title>
    <link href="http://yoursite.com/2021/01/29/Proxy%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Proxy模式/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-12T15:17:53.243Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Proxy模式"><a href="#Proxy模式" class="headerlink" title="Proxy模式"></a>Proxy模式</h1><p><strong>只在必要时生成实例</strong></p><hr><h2 id="类表"><a href="#类表" class="headerlink" title="类表"></a>类表</h2><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>Printer</td><td>表示带名字的打印机类(本人)</td></tr><tr><td>Printable</td><td>Printer和PrinterProxy的共同接口</td></tr><tr><td>PrinterProxy</td><td>表示带名字的打印机类(代理人)</td></tr><tr><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-c987ab242b9238ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Proxy"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Printable接口"><a href="#Printable接口" class="headerlink" title="Printable接口"></a>Printable接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getPrintName</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Printer"><a href="#Printer" class="headerlink" title="Printer"></a>Printer</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Printer</span> <span class="keyword">implements</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Printer</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Printer</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">heavyJob(<span class="string">"正在生成Printer实例（"</span>+name+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPrintName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"===="</span>+name+<span class="string">"===="</span>);</span><br><span class="line">System.out.println(string);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">heavyJob</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">System.out.print(msg);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">"."</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"结束。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PrinterProxy"><a href="#PrinterProxy" class="headerlink" title="PrinterProxy"></a>PrinterProxy</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrinterProxy</span> <span class="keyword">implements</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Printer real;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrinterProxy</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrinterProxy</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(real!=<span class="keyword">null</span>)&#123;</span><br><span class="line">real.setPrinterName(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPrintName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span> </span>&#123;</span><br><span class="line">realize();</span><br><span class="line">real.print(string);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">realize</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(real==<span class="keyword">null</span>)&#123;</span><br><span class="line">real=<span class="keyword">new</span> Printer(name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Printable p=<span class="keyword">new</span> PrinterProxy(<span class="string">"Alice"</span>);</span><br><span class="line">System.out.println(<span class="string">"现在的名字是"</span>+p.getPrintName()+<span class="string">"。"</span>);</span><br><span class="line">p.setPrinterName(<span class="string">"Bob"</span>);</span><br><span class="line">System.out.println(<span class="string">"现在的名字是"</span>+p.getPrintName()+<span class="string">"。"</span>);</span><br><span class="line">p.print(<span class="string">"Hello,world!"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Proxy模式&quot;&gt;&lt;a href=&quot;#Proxy模式&quot; class=&quot;headerlink&quot; title=&quot;Pro
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Proxy" scheme="http://yoursite.com/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>《Spring boot in action》笔记</title>
    <link href="http://yoursite.com/2021/01/29/springBootInActionNote/"/>
    <id>http://yoursite.com/2021/01/29/springBootInActionNote/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-16T03:27:40.975Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="《spring-boot-in-action》-读书笔记"><a href="#《spring-boot-in-action》-读书笔记" class="headerlink" title="《spring boot in action》 读书笔记"></a>《spring boot in action》 读书笔记</h1><h2 id="spring条件化配置"><a href="#spring条件化配置" class="headerlink" title="spring条件化配置"></a>spring条件化配置</h2><p>这是spring4.0引入的新特性。条件化配置允许配置存在于程序中，但在满足某些特定条件之前都忽略这个配置。<br>在spring中编写自己的条件，需要实现<strong>Condition</strong>接口，覆盖它的<strong>matches()</strong>方法</p><h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><h3 id="覆盖自定义配置"><a href="#覆盖自定义配置" class="headerlink" title="覆盖自定义配置"></a>覆盖自定义配置</h3><p>案例：在使用 <strong>org.springframework.boot:spring-boot-starter-security</strong> 并且是使用spring-boot自动配置<br>你每次启动web程序，都会有个身份验证，用户名为user 密码为日字里面的<br><code>Using default security password: 92669112-9709-45d2-91f7-daff89accbb3</code><br>我个人觉得这个比较麻烦！所以我们需要覆盖进行自定义配置。</p><h2 id="测试web应用程序"><a href="#测试web应用程序" class="headerlink" title="测试web应用程序"></a>测试web应用程序</h2><p>要恰当地测试一个web应用程序，需要投入一些实际的HTTP请求，确认它能正确地处理那些请求。<br>spring boot提供了两个可选的方案<br><strong>Spring Mock MVC :</strong> 能在一个<strong>近似真实</strong>的模拟Servlet容器里测试控制器，而不用实际启动应用服务器<br><strong>Web集成测试 :</strong> 在嵌入式Servlet容器（比如tomcat或Jetty）里启动应用程序，在真正的应用服务器里执行测试。</p><p>两种方法各有利弊，第一种方法启动要快，而第二种方法更接近真实的生产环境。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;《spring-boot-in-action》-读书笔记&quot;&gt;&lt;a href=&quot;#《spring-boot-in-a
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>state模式</title>
    <link href="http://yoursite.com/2021/01/29/state%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/state模式/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-12T15:20:08.191Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="state模式"><a href="#state模式" class="headerlink" title="state模式"></a>state模式</h1><p>用类表示状态</p><hr><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p>有点复杂！但只有部分是自己写的，其他是java类库内的类。</p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-f93bb493ac3ec792.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="State"></p><p>粗略简单一点的类图<br><img src="http://upload-images.jianshu.io/upload_images/10517580-86ff3997699c8d6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="State"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="State"><a href="#State" class="headerlink" title="State"></a>State</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context,<span class="keyword">int</span> hour)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NightState-具体的状态"><a href="#NightState-具体的状态" class="headerlink" title="NightState(具体的状态)"></a>NightState(具体的状态)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NightState</span> <span class="keyword">implements</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> NightState singleton = <span class="keyword">new</span> NightState();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">NightState</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> State <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context, <span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">9</span>&lt;=hour || hour&lt;<span class="number">17</span>)&#123;</span><br><span class="line">context.changeState(DayState.getInstance());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">context.callSecurityCenter(<span class="string">"紧急！晚上使用金库！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">"按下警铃（晚上）"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">"晚上通话录音"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"[晚上]"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DayState-具体的状态"><a href="#DayState-具体的状态" class="headerlink" title="DayState(具体的状态)"></a>DayState(具体的状态)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DayState</span> <span class="keyword">implements</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DayState singleton = <span class="keyword">new</span> DayState();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">DayState</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> State <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context, <span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(hour&lt;<span class="number">9</span> || <span class="number">17</span>&lt;=hour)&#123;</span><br><span class="line">context.changeState(NightState.getInstance());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.recordLog(<span class="string">"使用金库（白天）"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">"按下警铃（白天）"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">"正常通话（白天）"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"[白天]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setClock</span><span class="params">(<span class="keyword">int</span> hour)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> State <span class="title">changeState</span><span class="params">(State state)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">callSecurityCenter</span><span class="params">(String msg)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">recordLog</span><span class="params">(String msg)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SafeFrame"><a href="#SafeFrame" class="headerlink" title="SafeFrame"></a>SafeFrame</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.Panel;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextArea;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextField;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SafeFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>, <span class="title">Context</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> TextField textClock = <span class="keyword">new</span> TextField(<span class="number">60</span>);</span><br><span class="line"><span class="keyword">private</span> TextArea textScreen=<span class="keyword">new</span> TextArea(<span class="number">10</span>,<span class="number">60</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonUse=<span class="keyword">new</span> Button(<span class="string">"使用金库"</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonAlarm=<span class="keyword">new</span> Button(<span class="string">"按下警铃"</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonPhone=<span class="keyword">new</span> Button(<span class="string">"正常通话"</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonExit=<span class="keyword">new</span> Button(<span class="string">"结束"</span>);</span><br><span class="line"><span class="keyword">private</span> State state=DayState.getInstance();</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SafeFrame</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line">setBackground(Color.lightGray);</span><br><span class="line">setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line"><span class="comment">//配置textClock</span></span><br><span class="line">add(textClock,BorderLayout.NORTH);</span><br><span class="line">textClock.setEditable(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//配置textScreen</span></span><br><span class="line">add(textScreen,BorderLayout.CENTER);</span><br><span class="line">textScreen.setEditable(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//为界面添加按钮</span></span><br><span class="line">Panel panel=<span class="keyword">new</span> Panel();</span><br><span class="line">panel.add(buttonUse);</span><br><span class="line">panel.add(buttonAlarm);</span><br><span class="line">panel.add(buttonPhone);</span><br><span class="line">panel.add(buttonExit);</span><br><span class="line"><span class="comment">//配置界面</span></span><br><span class="line">add(panel,BorderLayout.SOUTH);</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line"><span class="comment">//设置监听器</span></span><br><span class="line">buttonUse.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonAlarm.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonPhone.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonExit.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setClock</span><span class="params">(<span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line">String clockstring=<span class="string">"现在时间是:"</span>;</span><br><span class="line"><span class="keyword">if</span>(hour&lt;<span class="number">10</span>)&#123;</span><br><span class="line">clockstring+=<span class="string">"0"</span>+hour+<span class="string">":00"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">clockstring+=hour+<span class="string">":00"</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(clockstring);</span><br><span class="line">textClock.setText(clockstring);</span><br><span class="line">state.doClock(<span class="keyword">this</span>, hour);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">changeState</span><span class="params">(State state)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"从"</span>+<span class="keyword">this</span>.state+<span class="string">"状态变为了"</span>+state+<span class="string">"状态"</span>);</span><br><span class="line"><span class="keyword">this</span>.state=state;</span><br><span class="line"><span class="keyword">return</span> state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">callSecurityCenter</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">textScreen.append(<span class="string">"Call!"</span>+msg+<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recordLog</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">textScreen.append(<span class="string">"record ... "</span>+msg+<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">System.out.println(e.toString());</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==buttonUse)&#123;</span><br><span class="line">state.doUse(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()==buttonAlarm) &#123;</span><br><span class="line">state.doAlarm(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()==buttonPhone) &#123;</span><br><span class="line">state.doPhone(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()== buttonExit) &#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"?"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SafeFrame frame=<span class="keyword">new</span> SafeFrame(<span class="string">"state module"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> hour=<span class="number">0</span>;hour&lt;<span class="number">24</span>;hour++)&#123;</span><br><span class="line">frame.setClock(hour);<span class="comment">//设置时间</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>采用分而治之方针。<br><strong>定义接口，声明抽象方法</strong><br><strong>定义多个类，实现具体的方法</strong></p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;state模式&quot;&gt;&lt;a href=&quot;#state模式&quot; class=&quot;headerlink&quot; title=&quot;sta
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="state" scheme="http://yoursite.com/tags/state/"/>
    
  </entry>
  
  <entry>
    <title>搭建hexo和github遇到问题</title>
    <link href="http://yoursite.com/2021/01/29/%E6%90%AD%E5%BB%BAhexo%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2021/01/29/搭建hexo问题/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-11T06:50:59.933Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="搭建hexo和github遇到问题"><a href="#搭建hexo和github遇到问题" class="headerlink" title="搭建hexo和github遇到问题"></a>搭建hexo和github遇到问题</h1><p>学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！</p><hr><h2 id="安装hexo问题"><a href="#安装hexo问题" class="headerlink" title="安装hexo问题"></a>安装hexo问题</h2><p>安装hexo我是在网上找教程安装的：<br>1.安装node.js(去官网下载windows版的安装包) <a href="https://nodejs.org" target="_blank" rel="noopener">node.js官网</a><br>2.安装git <a href="https://git-scm.com/downloads/" target="_blank" rel="noopener">git下载地址</a><br>3.申请github账号 <a href="https://github.com/" target="_blank" rel="noopener">github</a> 这里自己注册<br>设置user.name user.email<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">$ git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure><p></p><p>4.生成ssh密匙<br>输入<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br><span class="line">```          </span><br><span class="line">一路回车就OK了！</span><br><span class="line">此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。</span><br><span class="line">上传公匙添加到github上 </span><br><span class="line">***记住是id_rsa.pub内容复制到github上***</span><br><span class="line"></span><br><span class="line">5.安装hexo </span><br><span class="line">``` bash</span><br><span class="line">$ npm install hexo-cli g</span><br><span class="line"><span class="comment"># 建立一个文件夹hexo</span></span><br><span class="line">$ mkdir hexo </span><br><span class="line"><span class="comment"># 初始化hexo文件夹</span></span><br><span class="line">$ hexo init hexo</span><br><span class="line"><span class="comment"># 安装hexo插件(都安装吧!)</span></span><br><span class="line">$ npm install hexo-server --save</span><br><span class="line">$ npm install hexo-admin --save</span><br><span class="line">$ npm install hexo-generator-archive --save</span><br><span class="line">$ npm install hexo-generator-feed --save</span><br><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line">$ npm install hexo-generator-tag --save</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ npm install hexo-generator-sitemap --save</span><br><span class="line">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure><p></p><p>6.本地使用hexo<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成静态页面</span></span><br><span class="line">$ hexo generate</span><br><span class="line"><span class="comment"># 开启本地服务器(可以使用全名 hexo server)</span></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p></p><p>在浏览器输入 <strong><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></strong> 就可以在本地访问blog<br>7.hexo部署到github上</p><p>先在github上创建一个仓库 名字： github用户名.github.io<br>这个创库的命名规则不能弄错了！！！！！！</p><p>修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment 注释</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库</span><br><span class="line">  repo: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p></p><p>记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)<br>还有一种方式是把repo 修改为下面<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo: https://github.com/用户名/用户名.github.io</span><br></pre></td></tr></table></figure><p></p><p>由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github</p><p>输入下面的命令将hexo博客部署到github中：<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清空静态页面</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态页面</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 部署 </span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p></p><p>这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。</p><hr><h2 id="hexo替换主题"><a href="#hexo替换主题" class="headerlink" title="hexo替换主题"></a>hexo替换主题</h2><p>我使用的next主题<br>1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自己切换自己的博客目录</span></span><br><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line"><span class="comment"># 执行下面命令</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p></p><p>2.修改博客配置文件 /hexo/_config.yml 如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">## Themes: http://hexo.io/themes/</span><br><span class="line">#以前的选项为     theme: landscape</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p></p><p>3.修改主题配置文件 /hexo/themes/next/_config.yml</p><h2 id="menu修改"><a href="#menu修改" class="headerlink" title="menu修改"></a>menu修改</h2><p>找到下面内容<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  #archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><p></p><p>去掉 # 就可以多一个菜单栏 比如去掉<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  #about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  #archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure><p></p><p>虽然在首页能看见这个菜单，但是是不能使用<br>点击菜单 categories 会返回 can’t get /categories/ 错误信息<br>首先要安装categories对应插件<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure><p></p><p>再在gitbash输入（hexo目录下）<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p></p><p>在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-1-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p></p><p>在/hexo/source/_post 目录建立 test.md 内容如下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: test</span><br><span class="line">categories:</span><br><span class="line">  - Testing</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p></p><p>注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！</p><hr><h2 id="赞赏功能问题"><a href="#赞赏功能问题" class="headerlink" title="赞赏功能问题"></a>赞赏功能问题</h2><p>在添加赞赏功能是替换了图片不能出现赞赏功能<br>next赞赏功能启用<br>在主题配置文件 找到如下内容 并修改如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line">reward_comment: Donate</span><br><span class="line">wechatpay: /images/wechatpay.png</span><br><span class="line">alipay: /images/alipay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.png</span><br><span class="line">```  </span><br><span class="line">自己图片位置在 Hexo/themes/next/source image文件内</span><br><span class="line">修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p></p><p>修改如下:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p></p><p>在执行<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo generate &amp;&amp;  hexo s</span><br></pre></td></tr></table></figure><p></p><p>这下应该可以！</p><hr><h2 id="本地搜索配置"><a href="#本地搜索配置" class="headerlink" title="本地搜索配置"></a>本地搜索配置</h2><p>1.hexo配置文件(/hexo/_config.yml)添加<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p></p><p>2.安装插件<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p></p><p>3.修改 主题配置文件(/hexo/themes/next/_config.yml)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: false</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><p></p><p>修改为<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><p></p><h2 id="集成gitment评论问题"><a href="#集成gitment评论问题" class="headerlink" title="集成gitment评论问题"></a>集成gitment评论问题</h2><p>自己按照网上教程安装的几次，但出现的问题是 “未开发评论” 点击login出现404错误<br>经过一天的努力终于知道原因的，需要发布到git上去，再用自己的git账号登录一下就OK了！<br>由于没有清除浏览器缓存，出现发布了但未更新。评论还是以前那样。记得清除浏览器缓存，或者换一个浏览器。<br>集成步骤：<br>1.注册OAuth Application 点击 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a><br>2.修改 themes/next/_config.yml<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line"># You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;</span><br><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  mint: false </span><br><span class="line">  # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true </span><br><span class="line">  # Show comments count in post meta area</span><br><span class="line">  lazy: false </span><br><span class="line">  # 需要懒加载的 修改为true</span><br><span class="line">  # Comments lazy loading with a button</span><br><span class="line">  cleanly: true </span><br><span class="line">  # Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class="line">  language: </span><br><span class="line">  # Force language, or auto switch by theme</span><br><span class="line">  github_user: 你的github用户名</span><br><span class="line">  github_repo: 用户名.github.io</span><br><span class="line">  client_id: 创建OAuth Application时用户id</span><br><span class="line">  client_secret: 填写你自己的client_secret</span><br><span class="line">  #proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  #redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure><p></p><p>其他的就不用修改了。默认就OK了！等以后玩熟了再自定义配置！</p><hr><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next参考文档</a><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo参考文档</a></p><p>没事就多看看官方文档，应该能解决问题的！加油！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;搭建hexo和github遇到问题&quot;&gt;&lt;a href=&quot;#搭建hexo和github遇到问题&quot; class=&quot;he
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>通过vpn登录学校内网</title>
    <link href="http://yoursite.com/2021/01/29/%E5%AD%A6%E6%A0%A1vpn/"/>
    <id>http://yoursite.com/2021/01/29/学校vpn/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-24T08:49:29.178Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="在家使用vpn访问学校内网-教务系统，图书馆等"><a href="#在家使用vpn访问学校内网-教务系统，图书馆等" class="headerlink" title="在家使用vpn访问学校内网(教务系统，图书馆等)"></a>在家使用vpn访问学校内网(教务系统，图书馆等)</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>1.一台能上网的电脑<br>2.windows系统<br>3.系统安装了IE</p><h2 id="首先登录学校官网"><a href="#首先登录学校官网" class="headerlink" title="首先登录学校官网"></a>首先登录学校官网</h2><p>点击下面<br><a href="http://www.dlmu.edu.cn/" target="_blank" rel="noopener">大连海事大学</a></p><h2 id="点击vpn"><a href="#点击vpn" class="headerlink" title="点击vpn"></a>点击vpn</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-4e943fe1bb9892e6.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>进入界面是这样，请点击 <strong>详细信息</strong><br><img src="http://upload-images.jianshu.io/upload_images/10517580-aa60e87944b0639e.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>然后是这样的界面</p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-1d6f9211ba3a8a9c.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>点击 <strong>继续转到网页</strong></p><p>出现<br><img src="http://upload-images.jianshu.io/upload_images/10517580-7c782ab5b04eee1b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>如果是第一次使用此软件请点击<strong>下载Easy Connect</strong></p><p>下载完成后记得安装<br>图如下<br><img src="http://upload-images.jianshu.io/upload_images/10517580-0aa9009381d5d48b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-604c1f8ceef84a08.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-b41f86305e803966.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>安装完成记得重启电脑。</p><p>电脑桌面上应该多了两个快捷方式</p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-dc4dee52bcfba3b8.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>回到这个界面，请点击 <strong>运行Easy Connect</strong><br><img src="http://upload-images.jianshu.io/upload_images/10517580-c688068230240057.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>选择 <strong>是</strong><br><img src="http://upload-images.jianshu.io/upload_images/10517580-1ea7d6a127a94a4e.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>第一次使用会自动安装组件</p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-592ea11483c9a9a8.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>最后出现</p><p><img src="http://upload-images.jianshu.io/upload_images/10517580-d78fb3909ed03200.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>用户名是学号<br>密码是登录教务系统密码</p><p>登录成功<br>如下<br><img src="http://upload-images.jianshu.io/upload_images/10517580-66fc63c30a86a107.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="大连海事大学"></p><p>即可访问学校内网!</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;在家使用vpn访问学校内网-教务系统，图书馆等&quot;&gt;&lt;a href=&quot;#在家使用vpn访问学校内网-教务系统，图书馆
      
    
    </summary>
    
      <category term="school" scheme="http://yoursite.com/categories/school/"/>
    
    
      <category term="problem" scheme="http://yoursite.com/tags/problem/"/>
    
  </entry>
  
  <entry>
    <title>TemplateMethod模式</title>
    <link href="http://yoursite.com/2021/01/29/TemplateMethod%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/TemplateMethod模式/</id>
    <published>2021-01-29T14:39:58.667Z</published>
    <updated>2018-02-13T15:38:19.780Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="TemplateMethod模式"><a href="#TemplateMethod模式" class="headerlink" title="TemplateMethod模式"></a>TemplateMethod模式</h1><p>将具体处理交给子类<br>带有模板功能的模式。<br>在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。<br>在抽象类阶段确定处理的流程非常重要。</p><hr><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-bad17bc1bfc2056f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TemplateMethod"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="AbstractDisplay"><a href="#AbstractDisplay" class="headerlink" title="AbstractDisplay"></a>AbstractDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象类中可有具体的方法实现</span></span><br><span class="line"><span class="comment"> * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sean</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="comment">//修改修饰符可以改变抽象类方法的访问权限问题</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">open();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">print();</span><br><span class="line">&#125;</span><br><span class="line">close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CharDisplay"><a href="#CharDisplay" class="headerlink" title="CharDisplay"></a>CharDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharDisplay</span> <span class="keyword">extends</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CharDisplay</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.ch=ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.print(<span class="string">"&lt;&lt;"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.print(ch);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"&gt;&gt;"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="StringDisplay"><a href="#StringDisplay" class="headerlink" title="StringDisplay"></a>StringDisplay</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDisplay</span> <span class="keyword">extends</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> width;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringDisplay</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line"><span class="keyword">this</span>.width=string.getBytes().length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">printLine();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"|"</span>+string+<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">printLine();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printLine</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.print(<span class="string">"+"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width;i++)&#123;</span><br><span class="line">System.out.print(<span class="string">"-"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"+"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">AbstractDisplay d1=<span class="keyword">new</span> CharDisplay(<span class="string">'H'</span>);</span><br><span class="line">AbstractDisplay d2=<span class="keyword">new</span> StringDisplay(<span class="string">"Hello,world"</span>);</span><br><span class="line">d1.display();</span><br><span class="line">d2.display();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>Template Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;TemplateMethod模式&quot;&gt;&lt;a href=&quot;#TemplateMethod模式&quot; class=&quot;head
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="TemplateMethod" scheme="http://yoursite.com/tags/TemplateMethod/"/>
    
  </entry>
  
  <entry>
    <title>Mediator模式</title>
    <link href="http://yoursite.com/2021/01/29/Mediator/"/>
    <id>http://yoursite.com/2021/01/29/Mediator/</id>
    <published>2021-01-29T14:39:58.663Z</published>
    <updated>2018-02-08T10:58:02.071Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Mediator模式"><a href="#Mediator模式" class="headerlink" title="Mediator模式"></a>Mediator模式</h1><p>只有一个仲裁者<br>&ensp; 要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。</p><hr><h2 id="类和接口表"><a href="#类和接口表" class="headerlink" title="类和接口表"></a>类和接口表</h2><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>Mediator</td><td>定义 “仲裁者” 的接口(API)的接口</td></tr><tr><td>Colleague</td><td>定义”组员”的接口(API)的接口</td></tr><tr><td>ColleagueButton</td><td>表示按钮的类。它实现Colleague接口</td></tr><tr><td>ColleagueTextField</td><td>表示文本输入框的类。它实现了Colleague接口</td></tr><tr><td>ColleagueCheckbox</td><td>表示勾选框的类。实现了Colleague接口</td></tr><tr><td>LoginFrame</td><td>表示登录对话框类。实现了Mediator接口</td></tr><tr><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h2 id="程序的类图"><a href="#程序的类图" class="headerlink" title="程序的类图"></a>程序的类图</h2><p>有点复杂喔！ 不急。慢慢看！！<br><img src="http://upload-images.jianshu.io/upload_images/10517580-80bc00fa0e7f86b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Mediator模式"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Colleague接口-组员接口"><a href="#Colleague接口-组员接口" class="headerlink" title="Colleague接口(组员接口)"></a>Colleague接口(组员接口)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Mediator接口-仲裁者接口"><a href="#Mediator接口-仲裁者接口" class="headerlink" title="Mediator接口(仲裁者接口)"></a>Mediator接口(仲裁者接口)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Mediator</span> </span>&#123;</span><br><span class="line"><span class="comment">//生成Mediator要管理的组员.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">createColleagues</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//被各个Colleague组员调用，让组员向仲裁者进行报告</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">colleagueChanged</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ColleagueButton-具体的组员"><a href="#ColleagueButton-具体的组员" class="headerlink" title="ColleagueButton(具体的组员)"></a>ColleagueButton(具体的组员)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.HeadlessException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueButton</span> <span class="keyword">extends</span> <span class="title">Button</span> <span class="keyword">implements</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueButton</span><span class="params">(String caption)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(caption);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="comment">//保存Mediator</span></span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line"><span class="comment">//Mediator下达启用禁用的指示</span></span><br><span class="line">setEnabled(enabled);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ColleagueCheckbox-具体的组员"><a href="#ColleagueCheckbox-具体的组员" class="headerlink" title="ColleagueCheckbox(具体的组员)"></a>ColleagueCheckbox(具体的组员)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Checkbox;</span><br><span class="line"><span class="keyword">import</span> java.awt.CheckboxGroup;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueCheckbox</span> <span class="keyword">extends</span> <span class="title">Checkbox</span> <span class="keyword">implements</span> <span class="title">Colleague</span>,</span></span><br><span class="line"><span class="class"><span class="title">ItemListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueCheckbox</span><span class="params">(String caption,CheckboxGroup group,<span class="keyword">boolean</span> state)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(caption,group,state);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">itemStateChanged</span><span class="params">(ItemEvent e)</span> </span>&#123;</span><br><span class="line">mediator.colleagueChanged();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">setEnabled(enabled);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ColleagueTextField-具体的组员"><a href="#ColleagueTextField-具体的组员" class="headerlink" title="ColleagueTextField(具体的组员)"></a>ColleagueTextField(具体的组员)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextField;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.TextEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.TextListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueTextField</span> <span class="keyword">extends</span> <span class="title">TextField</span> <span class="keyword">implements</span> <span class="title">Colleague</span>,</span></span><br><span class="line"><span class="class"><span class="title">TextListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueTextField</span><span class="params">(String text,<span class="keyword">int</span> columns)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(text,columns);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">textValueChanged</span><span class="params">(TextEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">//文字发生变化时通知Mediator</span></span><br><span class="line">mediator.colleagueChanged();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">setEnabled(enabled);</span><br><span class="line">setBackground(enabled ? Color.white : Color.lightGray);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LoginFrame-具体的仲裁者"><a href="#LoginFrame-具体的仲裁者" class="headerlink" title="LoginFrame(具体的仲裁者)"></a>LoginFrame(具体的仲裁者)</h3><p>代码有点多加油看看！<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.CheckboxGroup;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.GridLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Label;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>, <span class="title">Mediator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ColleagueCheckbox checkGuest;</span><br><span class="line"><span class="keyword">private</span> ColleagueCheckbox checkLogin;</span><br><span class="line"><span class="keyword">private</span> ColleagueTextField textUser;</span><br><span class="line"><span class="keyword">private</span> ColleagueTextField textPass;</span><br><span class="line"><span class="keyword">private</span> ColleagueButton buttonOK;</span><br><span class="line"><span class="keyword">private</span> ColleagueButton buttonCancle;</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="comment">//生成并配置各个Colleague后，显示对话框</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginFrame</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line">setBackground(Color.lightGray);</span><br><span class="line"><span class="comment">//使用布局管理器生成4×2窗格</span></span><br><span class="line">setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>,<span class="number">2</span>));</span><br><span class="line"><span class="comment">//生成各个Colleague</span></span><br><span class="line">createColleagues();</span><br><span class="line">add(checkGuest);</span><br><span class="line">add(checkLogin);</span><br><span class="line">add(<span class="keyword">new</span> Label(<span class="string">"username"</span>));</span><br><span class="line">add(textUser);</span><br><span class="line">add(<span class="keyword">new</span> Label(<span class="string">"Password"</span>));</span><br><span class="line">add(textPass);</span><br><span class="line">add(buttonOK);</span><br><span class="line">add(buttonCancle);</span><br><span class="line"><span class="comment">//设置初始的启用/禁用状态</span></span><br><span class="line">colleagueChanged();</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createColleagues</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//生成各个Colleague</span></span><br><span class="line">CheckboxGroup g= <span class="keyword">new</span> CheckboxGroup();</span><br><span class="line">checkGuest = <span class="keyword">new</span> ColleagueCheckbox(<span class="string">"Guest"</span>,g,<span class="keyword">true</span>);</span><br><span class="line">checkLogin = <span class="keyword">new</span> ColleagueCheckbox(<span class="string">"Login"</span>,g,<span class="keyword">false</span>);</span><br><span class="line">textUser = <span class="keyword">new</span> ColleagueTextField(<span class="string">""</span>,<span class="number">10</span>);</span><br><span class="line">textPass = <span class="keyword">new</span> ColleagueTextField(<span class="string">""</span>,<span class="number">10</span>);</span><br><span class="line">textPass.setEchoChar(<span class="string">'*'</span>);</span><br><span class="line">buttonOK = <span class="keyword">new</span> ColleagueButton(<span class="string">"OK"</span>);</span><br><span class="line">buttonCancle = <span class="keyword">new</span> ColleagueButton(<span class="string">"Cancle"</span>);</span><br><span class="line"><span class="comment">//设置Mediator</span></span><br><span class="line">checkGuest.setMediator(<span class="keyword">this</span>);</span><br><span class="line">checkLogin.setMediator(<span class="keyword">this</span>);</span><br><span class="line">textUser.setMediator(<span class="keyword">this</span>);</span><br><span class="line">textPass.setMediator(<span class="keyword">this</span>);</span><br><span class="line">buttonOK.setMediator(<span class="keyword">this</span>);</span><br><span class="line">buttonCancle.setMediator(<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//设置Listener</span></span><br><span class="line">checkGuest.addItemListener(checkGuest);</span><br><span class="line">checkLogin.addItemListener(checkLogin);</span><br><span class="line">textUser.addTextListener(textUser);</span><br><span class="line">textPass.addTextListener(textPass);</span><br><span class="line">buttonOK.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonCancle.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">colleagueChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(checkGuest.getState())&#123;</span><br><span class="line">textUser.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">textUser.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">userpassChanged();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">userpassChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(textUser.getText().length()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>(textPass.getText().length()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">System.out.println(e.toString());</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="主函数-调用者-客户"><a href="#主函数-调用者-客户" class="headerlink" title="主函数 调用者 客户"></a>主函数 调用者 客户</h3><p>代码比较少！放松！放松！放松！<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">LoginFrame lf=<span class="keyword">new</span> LoginFrame(<span class="string">"Mediator Sample"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>Mediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>图解设计模式</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Mediator模式&quot;&gt;&lt;a href=&quot;#Mediator模式&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Mediator" scheme="http://yoursite.com/tags/Mediator/"/>
    
  </entry>
  
  <entry>
    <title>linux简单介绍</title>
    <link href="http://yoursite.com/2021/01/29/linux%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2021/01/29/linux简介/</id>
    <published>2021-01-29T14:39:58.663Z</published>
    <updated>2018-03-18T13:26:09.994Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><p>Linux是一套免费使用和自由传播的<a href="https://baike.baidu.com/item/%E7%B1%BBUnix" target="_blank" rel="noopener">类Unix</a><a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192" target="_blank" rel="noopener">操作系统</a>，是一个基于<a href="https://baike.baidu.com/item/POSIX" target="_blank" rel="noopener">POSIX</a>和<a href="https://baike.baidu.com/item/UNIX" target="_blank" rel="noopener">UNIX</a>的多用户、<a href="https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1" target="_blank" rel="noopener">多任务</a>、支持<a href="https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B" target="_blank" rel="noopener">多线程</a>和多<a href="https://baike.baidu.com/item/CPU" target="_blank" rel="noopener">CPU</a>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持<a href="https://baike.baidu.com/item/32%E4%BD%8D/5812218" target="_blank" rel="noopener">32位</a>和<a href="https://baike.baidu.com/item/64%E4%BD%8D" target="_blank" rel="noopener">64位</a>硬件。Linux继承了<a href="https://baike.baidu.com/item/Unix" target="_blank" rel="noopener">Unix</a>以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><p>Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了<a href="https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8" target="_blank" rel="noopener">Linux内核</a>。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p><hr><h2 id="linux简介"><a href="#linux简介" class="headerlink" title="linux简介"></a>linux简介</h2><p>linux的核心是由<strong>Linus Torvads</strong> 在1991年的时候开发出来的。</p><p>讲linux的必须先讲它的大哥<strong>Unix</strong><br><strong>Unix</strong>是以高阶的C语言在贝尔实验室(AT&amp;T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。<br>后来由于AT&amp;T由于商业的考虑，于是将Unix的版权回收。特别提到 <strong>不可对学生提供源代码</strong>。<br>版权的收回，影响到学校教Unix源代码的教授！<br>Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。</p><p>1984年的GNU计划。（Richard Mathew Stallman 史托曼）<br>软件分享<br>GCC(GNU C Complier )</p><p>后来就是Linus Torvads 在Minix的基础上编写了linux。于1991年发布。</p><p>大概就讲这么多吧！</p><hr><h2 id="linux-发行版本"><a href="#linux-发行版本" class="headerlink" title="linux 发行版本"></a>linux 发行版本</h2><p>自己看图吧！<br><img src="https://upload-images.jianshu.io/upload_images/10517580-29f3419612d9db59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="linux 发行版本"></p><p>如果看的不清楚可以去这个网站 <a href="http://futurist.se/gldt/" target="_blank" rel="noopener">linux发行图</a><br><a href="http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg" target="_blank" rel="noopener">linux发行图</a></p><p>是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。</p><p>友情链接</p><p><a href="https://www.redhat.com" target="_blank" rel="noopener">Redhat</a> <a href="https://www.centos.org/" target="_blank" rel="noopener">Centos</a> <a href="https://www.debian.org/" target="_blank" rel="noopener">Debian</a> <a href="https://www.ubuntu.com" target="_blank" rel="noopener">ubuntu</a> <a href="https://download.suse.com" target="_blank" rel="noopener">SUSE</a> <a href="https://www.opensuse.org/" target="_blank" rel="noopener">openSUE</a><br>自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！</p><hr><h2 id="linux安装"><a href="#linux安装" class="headerlink" title="linux安装"></a>linux安装</h2><p>我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。</p><h3 id="首先去官网下载ubuntu镜像"><a href="#首先去官网下载ubuntu镜像" class="headerlink" title="首先去官网下载ubuntu镜像"></a>首先去官网下载ubuntu镜像</h3><p><a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">Ubuntu下载地址</a><br><a href="https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0" target="_blank" rel="noopener">Ubuntu安装教程</a></p><h3 id="提醒要点"><a href="#提醒要点" class="headerlink" title="提醒要点"></a>提醒要点</h3><p>1.要使用刻录盘刻录镜像。<br>刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.<br>记得自己分一个干净的盘来安装linux系统。<br>2.安装要注意分区表格式。<br>3.系统只能安装在主分区不能安装在逻辑分区。</p><hr><h2 id="linux简单的使用"><a href="#linux简单的使用" class="headerlink" title="linux简单的使用"></a>linux简单的使用</h2><p>linux不同版本的linux命令有一些不同的地方，但是大部分是相同的。<br>下面是Ubuntu系统使用的命令。<br>希望你们在学习linux时<strong>多敲命令</strong>！如同windows上的<strong>cmd</strong></p><h3 id="常见命令使用"><a href="#常见命令使用" class="headerlink" title="常见命令使用"></a>常见命令使用</h3><p>打开终端<br>鼠标右击 -&gt; 选择 <code>Open Terminal</code><br>如下图<br><img src="https://upload-images.jianshu.io/upload_images/10517580-385fc2c8c6a40b2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="终端"></p><p>首先讲一个特别有用的命令 <strong>man</strong><br>这个命令是挺厉害的！<br>比如想知道 <code>ls</code>命令怎么用？可以使用<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><p></p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-b55a71a40bd27d37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="man ls"></p><p>最后回车键 <code>Enter</code>键 执行命令</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-7a9a3c863b742085.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="显示结果"></p><p>按回车或移动鼠标，可以看<code>ls</code>的帮助文档。</p><p>不需要阅读帮助文档，看上面截屏的提示。按 <code>q</code> 建退出帮助文档</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-3c04060581650998.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="出现这样"></p><p>当然还有一种查看帮助文档的命令: <code>command --help</code><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p></p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-f5d07a0cfcfafafd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshot from 2018-03-17 15-30-15.png"></p><p><strong>记住命令之间一定要有空格！大小写也很重要！</strong></p><p>关机命令<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure><p></p><p>重启命令<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p></p><p>切换目录的命令<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/sean/Pictures</span><br></pre></td></tr></table></figure><p></p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-a1220241e742dbaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="切换目录"></p><p>输入 <code>ls</code><br><img src="https://upload-images.jianshu.io/upload_images/10517580-494e3a217cc4a5c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ls"></p><p>如果输入 <code>ls -la</code> 就会显示更多信息<br><img src="https://upload-images.jianshu.io/upload_images/10517580-7da714096dbc2407.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ls -la"></p><p><code>top</code>命令就如同windows上的资源管理器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/10517580-08611bbdc51b8315.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="top"></p><p><code>ctr + z</code>停止这个命令</p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p>各个linux发行版本的安装软件的方法不一样。<br>ubuntu有一个安装软件的app.</p><p>看图<br><img src="https://upload-images.jianshu.io/upload_images/10517580-e2c0a0cada566e0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="show"></p><p>看见了<strong>VLC</strong>视屏播放软件了。这个也挺好用的。上学期我讲过。<br>用软件安装软件是挺方便的，但是这个软件库的版本就太老了。</p><p>还有安装软件的方法，就是使用命令行。<br><code>sudo apt-get install softname</code></p><p>例如安装 <code>vim</code> 文本编辑软件。挺好用的。</p><p>Ubuntu不自带<code>vim</code>,需要额外安装。Centos自带vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/10517580-146d30b9731edb75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sudo apt-get install"></p><p>会叫你输入密码：<br>你输入时不会显示 <code>****</code>,输入完成回车，OK！</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-2a5347a7ba6c9d60.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="OK"></p><p>我的是已经安装了。你们安装时一路回车就安装了。</p><p><strong>vim简单使用</strong><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim vim.txt</span><br></pre></td></tr></table></figure><p></p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-bfd590603e3cfdf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vim"></p><p>回车</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-69a3f05a5eb690c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Enter"></p><p>按 <code>a</code>,就可以写文本了。</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-1aa20b09bf4d554a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-7305dbb1ff5c2247.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>再按 <code>ESC</code>键</p><p><img src="https://upload-images.jianshu.io/upload_images/10517580-8df3b6e708a4eae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>输入 <code>:wq</code><br><img src="https://upload-images.jianshu.io/upload_images/10517580-cabbc499e8442d88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="保存"></p><p>就OK了。<br><img src="https://upload-images.jianshu.io/upload_images/10517580-a1e6708c883b2dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>Ubuntu 是用apt-get 命令<br>而Centos使用yum安装</p><p><strong>源代码安装</strong><br>还有一种安装软件的方法就是源代码编译安装。使用 <code>make</code>命令。这里我就不多说了。应为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！</p><h2 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h2><p><a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noopener">搜狗输入法下载linux</a></p><p>安装教程自己看<a href="http://blog.csdn.net/leijiezhang/article/details/53707181" target="_blank" rel="noopener">博客</a></p><p>当然Ubuntu17.10就自带有中文输入法！(我依稀记得是这样！)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;linux&quot;&gt;&lt;a href=&quot;#linux&quot; class=&quot;headerlink&quot; title=&quot;linux&quot;&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>JSP自定义标签</title>
    <link href="http://yoursite.com/2021/01/29/JSP%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2021/01/29/JSP自定义标签/</id>
    <published>2021-01-29T14:39:58.663Z</published>
    <updated>2018-02-16T03:24:43.717Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="JSP自定义标签"><a href="#JSP自定义标签" class="headerlink" title="JSP自定义标签"></a>JSP自定义标签</h1><p>自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承<strong>SimpleTag</strong> 实现的标签管理器。<br>简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。</p><blockquote><p>初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。</p></blockquote><p><strong>JSP规范的作者在JSP规范的7.15一节写到</strong></p><p><strong>SimpleTag</strong>接口中用于标签触发的方法只有一个<strong>doTag</strong>，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。</p><p><code>javax.servlet.jsp.targext</code>包中包含了一个SimpleTag的基础类<br><strong>SimpleTagSupport</strong>提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。<br><strong>SimpleTagSupport</strong>类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。</p><hr><h2 id="SimpleTag示例"><a href="#SimpleTag示例" class="headerlink" title="SimpleTag示例"></a>SimpleTag示例</h2><h3 id="编写标签处理器"><a href="#编写标签处理器" class="headerlink" title="编写标签处理器"></a>编写标签处理器</h3><h4 id="MyFirstTag类"><a href="#MyFirstTag类" class="headerlink" title="MyFirstTag类"></a>MyFirstTag类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirstTag</span> <span class="keyword">implements</span> <span class="title">SimpleTag</span></span>&#123;</span><br><span class="line">JspContext jspContext;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doTag"</span>);</span><br><span class="line">jspContext.getOut().print(<span class="string">"This is my first tag."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JspTag <span class="title">getParent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"getParent"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJspBody</span><span class="params">(JspFragment body)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"setJspBody"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJspContext</span><span class="params">(JspContext jspContext)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"setJspContext"</span>);</span><br><span class="line"><span class="keyword">this</span>.jspContext=jspContext;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParent</span><span class="params">(JspTag parent)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"setParent"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册标签"><a href="#注册标签" class="headerlink" title="注册标签"></a>注册标签</h3><h4 id="mytags-tld"><a href="#mytags-tld" class="headerlink" title="mytags.tld"></a>mytags.tld</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">Simple tag examples</span><br><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>My First Taglib Example<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>firstTag<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.MyFirstTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><p>name节点用于说明这个标签名称；tag-class则用于指出标签处理器的<strong>完整类名</strong>。<br>当然一个标签库中可以定义多个标签。</p><h3 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"/WEB-INF/mytags.tld"</span> prefix=<span class="string">"easy"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span><br><span class="line">    &lt;title&gt;firstTagTest&lt;/title&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">   Hello!</span><br><span class="line">   &lt;br&gt;</span><br><span class="line">   &lt;easy:firstTag&gt;&lt;/easy:firstTag&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/firstTagTest.jsp</code></p><hr><h2 id="处理属性"><a href="#处理属性" class="headerlink" title="处理属性"></a>处理属性</h2><p>实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。</p><h3 id="DataFrmatterTag"><a href="#DataFrmatterTag" class="headerlink" title="DataFrmatterTag"></a>DataFrmatterTag</h3><p>继承SimpleTagSupport<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataFrmatterTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String header;</span><br><span class="line"><span class="keyword">private</span> String items;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getHeader</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeader</span><span class="params">(String header)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.header = header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getItems</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> items;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(String items)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.items = items;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> IOException,JspException</span>&#123;</span><br><span class="line">JspContext jspContext=getJspContext();</span><br><span class="line">JspWriter out=jspContext.getOut();</span><br><span class="line"></span><br><span class="line">out.print(<span class="string">"&lt;table style='border:1px solid green'&gt;\n"</span></span><br><span class="line">+<span class="string">"&lt;tr&gt;&lt;td&gt;&lt;span style='font-weight:bold'&gt;"</span></span><br><span class="line">+header+<span class="string">"&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;\n"</span>);</span><br><span class="line">StringTokenizer tokenizer=<span class="keyword">new</span> StringTokenizer(items,<span class="string">","</span>);</span><br><span class="line"><span class="keyword">while</span>(tokenizer.hasMoreTokens())&#123;</span><br><span class="line">String token=tokenizer.nextToken();</span><br><span class="line">out.print(<span class="string">"&lt;tr&gt;&lt;td&gt;"</span>+token+<span class="string">"&lt;/td&gt;&lt;/tr&gt;\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">out.print(<span class="string">"&lt;/table&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p><code>doTag()</code> 首先通过<code>getJspContext()</code>获取通过JSP容器传入的 <code>JspContext</code>对象<br><code>JspContext jspContext=getJspContext();</code><br>接着，通过<code>JspContext</code>实例的<code>getOut()</code>获取<code>JspWriter</code>对象<br><code>JspWriter out=jspContext.getOut();</code><br>然后，<code>doTag()</code>方法使用<code>StringTokenizer</code>解析<code>items</code>属性值。</p><p>###注册DataFrmatter标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dataFormatter<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.DataFrmatterTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>header<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>items<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="dataFormatterTagTest-jsp"><a href="#dataFormatterTagTest-jsp" class="headerlink" title="dataFormatterTagTest.jsp"></a>dataFormatterTagTest.jsp</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"/WEB-INF/mytags.tld"</span> prefix=<span class="string">"easy"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP 'dataFormatterTagTest.jsp' starting page&lt;/title&gt;</span><br><span class="line">&lt;title&gt;Testing DataFormatterTag&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;easy:dataFormatter items=<span class="string">"Alabama,Alaska,Georgia,Florida"</span> header=<span class="string">"states"</span>/&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;easy:dataFormatter header=<span class="string">"Countries"</span>&gt;</span><br><span class="line">    &lt;jsp:attribute name=<span class="string">"items"</span>&gt;</span><br><span class="line">    US,UK,Canada,Korea</span><br><span class="line">    &lt;/jsp:attribute&gt;</span><br><span class="line">    &lt;/easy:dataFormatter&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="访问标签内容"><a href="#访问标签内容" class="headerlink" title="访问标签内容"></a>访问标签内容</h2><h3 id="SelectElementTag类"><a href="#SelectElementTag类" class="headerlink" title="SelectElementTag类"></a>SelectElementTag类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectElementTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String[] countries =&#123;<span class="string">"China"</span>,<span class="string">"Brazil"</span>,<span class="string">"American"</span>,<span class="string">"Japan"</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> IOException,JspException</span>&#123;</span><br><span class="line">JspContext jspContext=getJspContext();</span><br><span class="line">JspWriter out=jspContext.getOut();</span><br><span class="line">out.print(<span class="string">"&lt;select&gt;\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;countries.length;i++)&#123;</span><br><span class="line">getJspContext().setAttribute(<span class="string">"value"</span>, countries[i]);</span><br><span class="line">getJspContext().setAttribute(<span class="string">"text"</span>, countries[i]);</span><br><span class="line">getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">out.print(<span class="string">"&lt;/select&gt;\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册selectElementTag"><a href="#注册selectElementTag" class="headerlink" title="注册selectElementTag"></a>注册selectElementTag</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">       <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>select<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.SelectElementTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="selectElementTagTest-jsp"><a href="#selectElementTagTest-jsp" class="headerlink" title="selectElementTagTest.jsp"></a>selectElementTagTest.jsp</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"/WEB-INF/mytags.tld"</span> prefix=<span class="string">"easy"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span><br><span class="line">    &lt;title&gt;My JSP 'selectElementTagTest.jsp' starting page&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;easy:select&gt;</span><br><span class="line">    &lt;option value="$&#123;value&#125;"&gt;$&#123;text&#125;&lt;/option&gt;</span><br><span class="line">    &lt;/easy:select&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/selectElementTagTest.jsp</code></p><h2 id="编写EL函数"><a href="#编写EL函数" class="headerlink" title="编写EL函数"></a>编写EL函数</h2><p>编写EL函数步骤<br>1.创建一个包含<strong>静态方法</strong>的public类。每个类的静态方法表示一个EL函数。<strong>这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类</strong><br>2.用function节点在标签库描述器注册函数</p><table><thead><tr><th>节点</th><th>说明</th></tr></thead><tbody><tr><td>description</td><td>可选，标签说明</td></tr><tr><td>display-name</td><td>在xml工具中显示缩写名字</td></tr><tr><td>icon</td><td>可选，在xml工具中使用icon节点</td></tr><tr><td>name</td><td>函数的唯一名字</td></tr><tr><td>function-class</td><td>该函数对应实现的java类的全名</td></tr><tr><td>function-signature</td><td>该函数对应实现的java静态方法</td></tr><tr><td>example</td><td>可选，使用该函数的实例说明</td></tr><tr><td>function-extension</td><td>可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节</td></tr></tbody></table><p>使用该函数，须将<code>taglib</code>指令中的<code>uri</code>属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：<br><code>${prefix:functionName(parameterList)}</code></p><h3 id="MyFunction"><a href="#MyFunction" class="headerlink" title="MyFunction"></a>MyFunction</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFunction</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">reverseString</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line"><span class="comment">//字符串的反转</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> StringBuffer(s).reverse().toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="functiontags-tld"><a href="#functiontags-tld" class="headerlink" title="functiontags.tld"></a>functiontags.tld</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Function tag example<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://example.com/taglib/function<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Reverse a String<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>reverseString<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function-class</span>&gt;</span>com.sean.function.MyFunction<span class="tag">&lt;/<span class="name">function-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function-signature</span>&gt;</span>java.lang.String reverseString(java.lang.String)<span class="tag">&lt;/<span class="name">function-signature</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用El"><a href="#使用El" class="headerlink" title="使用El"></a>使用El</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://example.com/taglib/function"</span> prefix=<span class="string">"f"</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;    </span><br><span class="line">    &lt;title&gt;My JSP 'functionTagTest.jsp' starting page&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">   $&#123;f:reverseString(<span class="string">"Hello, World"</span>) &#125;</span><br><span class="line">   &lt;br&gt;</span><br><span class="line">   $&#123;f:reverseString(<span class="string">"Welcome"</span>)&#125;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="发布自定义标签"><a href="#发布自定义标签" class="headerlink" title="发布自定义标签"></a>发布自定义标签</h2><p>在functiontags.tld增加<code>uri</code>节点<br><code>&lt;uri&gt;http://example.com/taglib/function&lt;/uri&gt;</code></p><p>在jsp页面添加<br><code>&lt;%@ taglib uri=&quot;http://example.com/taglib/function&quot; prefix=&quot;f&quot; %&gt;</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;JSP自定义标签&quot;&gt;&lt;a href=&quot;#JSP自定义标签&quot; class=&quot;headerlink&quot; title=&quot;J
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="JSP" scheme="http://yoursite.com/categories/Java/JSP/"/>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数类型</title>
    <link href="http://yoursite.com/2021/01/29/matlab%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2021/01/29/matlab函数类型/</id>
    <published>2021-01-29T14:39:58.663Z</published>
    <updated>2018-02-25T13:16:00.864Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="matlab-函数类型"><a href="#matlab-函数类型" class="headerlink" title="matlab 函数类型"></a>matlab 函数类型</h1><h2 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h2><p>主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。</p><h2 id="子函数"><a href="#子函数" class="headerlink" title="子函数"></a>子函数</h2><p>主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也<br>采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函<br>数的先后顺序和调用的先后顺序无关。<br>在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，<br>可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。</p><h2 id="嵌套函数"><a href="#嵌套函数" class="headerlink" title="嵌套函数"></a>嵌套函数</h2><p>在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。<br>每个用function定义的函数都必须用end语句结束。<br>嵌套函数也有自己的工作区。注意变量作用范围。</p><h2 id="私有函数"><a href="#私有函数" class="headerlink" title="私有函数"></a>私有函数</h2><p>私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。<br>函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。<br><strong>私有函数只能被其父目录内的脚本或函数调用。</strong></p><h2 id="重载函数"><a href="#重载函数" class="headerlink" title="重载函数"></a>重载函数</h2><p>在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。</p><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。<br>创建匿名函数的标准格式</p><blockquote><p>fhandle=@(arglist) expression</p></blockquote><p>其中，<code>expression</code>通常为一个简单的MATLAB变量表达式实现函数功能。<br><code>arglist</code> 为此匿名函数的输入参数列表。</p><h2 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h2><p>内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。<br>调用格式：</p><blockquote><p>funName=inline(expr)</p></blockquote><p><code>funName</code>为所定义的内联函数名称<br><code>expr</code>为表达式对应的字符串。</p><h2 id="函数句柄"><a href="#函数句柄" class="headerlink" title="函数句柄"></a>函数句柄</h2><p>函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 <strong>functions()</strong>来获取信息。<br>创建函数句柄使用 <code>@</code> ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;matlab-函数类型&quot;&gt;&lt;a href=&quot;#matlab-函数类型&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="matlab" scheme="http://yoursite.com/categories/matlab/"/>
    
    
      <category term="function" scheme="http://yoursite.com/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>FactoryMethod模式</title>
    <link href="http://yoursite.com/2021/01/29/FactoryMethod%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/FactoryMethod模式/</id>
    <published>2021-01-29T14:39:58.655Z</published>
    <updated>2018-02-13T15:39:11.957Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="FactoryMethod模式"><a href="#FactoryMethod模式" class="headerlink" title="FactoryMethod模式"></a>FactoryMethod模式</h1><p>将实例的生成交给子类</p><p>用TemplateMethod模式来构建<strong>生成的实例的工厂</strong>，就是FactoryMethod模式。</p><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-df4f0bc9c5a2293e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Factory"></p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><h3 id="Factory"><a href="#Factory" class="headerlink" title="Factory"></a>Factory</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.framework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> Product <span class="title">create</span><span class="params">(String owner)</span></span>&#123;</span><br><span class="line">Product product=createProduct(owner);</span><br><span class="line">registerProduct(product);</span><br><span class="line"><span class="keyword">return</span> product;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> Product <span class="title">createProduct</span><span class="params">(String owner)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">registerProduct</span><span class="params">(Product product)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.framework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">use</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IDCard"><a href="#IDCard" class="headerlink" title="IDCard"></a>IDCard</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.idcard;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDCard</span> <span class="keyword">extends</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String owner;</span><br><span class="line">IDCard(String owner)&#123;</span><br><span class="line">System.out.println(<span class="string">"制作"</span>+owner+<span class="string">"的ID卡。"</span>);</span><br><span class="line"><span class="keyword">this</span>.owner=owner;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">use</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"使用"</span>+owner+<span class="string">"的ID卡。"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOwner</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> owner;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IDCardFactory"><a href="#IDCardFactory" class="headerlink" title="IDCardFactory"></a>IDCardFactory</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.idcard;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDCardFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> List owners = <span class="keyword">new</span> ArrayList(); </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> Product <span class="title">createProduct</span><span class="params">(String owner)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> IDCard(owner);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">registerProduct</span><span class="params">(Product product)</span> </span>&#123;</span><br><span class="line">owners.add(((IDCard)product).getOwner());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getOwners</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> owners;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.idcard.IDCardFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Factory factory=<span class="keyword">new</span> IDCardFactory();</span><br><span class="line">Product card1= factory.create(<span class="string">"小明"</span>);</span><br><span class="line">Product card2=factory.create(<span class="string">"小红"</span>);</span><br><span class="line">Product card3=factory.create(<span class="string">"小刚"</span>);</span><br><span class="line">card1.use();</span><br><span class="line">card2.use();</span><br><span class="line">card3.use();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>工厂产生产品<br>具体的工厂产生具体的产品<br>这两者形成一一对应的关系。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;FactoryMethod模式&quot;&gt;&lt;a href=&quot;#FactoryMethod模式&quot; class=&quot;header
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="FactoryMethod" scheme="http://yoursite.com/tags/FactoryMethod/"/>
    
  </entry>
  
  <entry>
    <title>Flyweight模式</title>
    <link href="http://yoursite.com/2021/01/29/Flyweight%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Flyweight模式/</id>
    <published>2021-01-29T14:39:58.655Z</published>
    <updated>2018-02-12T15:19:03.276Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Flyweight-模式"><a href="#Flyweight-模式" class="headerlink" title="Flyweight 模式"></a>Flyweight 模式</h1><p><strong>共享</strong>对象，避免浪费。</p><hr><h2 id="类表"><a href="#类表" class="headerlink" title="类表"></a>类表</h2><table><thead><tr><th>名字</th><th>说明</th></tr></thead><tbody><tr><td>BigChar</td><td>表示”大型字符”类</td></tr><tr><td>BigCharFactory</td><td>表示生成和共用BigChar类的实例的类</td></tr><tr><td>BigString</td><td>表示多个BigChar组成的 “大型字符串” 的类</td></tr><tr><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h2 id="程序类图"><a href="#程序类图" class="headerlink" title="程序类图"></a>程序类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-487977fcd22c6d1f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Flyweight"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="BigChar类"><a href="#BigChar类" class="headerlink" title="BigChar类"></a>BigChar类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigChar</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span> charname;</span><br><span class="line"><span class="keyword">private</span> String fontdata;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigChar</span><span class="params">(<span class="keyword">char</span> charname)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.charname=charname;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BufferedReader reader=<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"/home/sean/Documents/"</span>+<span class="string">"big"</span>+charname+<span class="string">".txt"</span>));</span><br><span class="line">String line;</span><br><span class="line">StringBuffer buf=<span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">while</span>((line=reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">buf.append(line);</span><br><span class="line">buf.append(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">reader.close();</span><br><span class="line"><span class="keyword">this</span>.fontdata=buf.toString();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="keyword">this</span>.fontdata=charname+<span class="string">"?"</span>;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.print(fontdata);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BigCharFactory类"><a href="#BigCharFactory类" class="headerlink" title="BigCharFactory类"></a>BigCharFactory类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigCharFactory</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> HashMap pool=<span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="comment">//Singleton模式</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BigCharFactory singleton=<span class="keyword">new</span> BigCharFactory();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">BigCharFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取唯一实例</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigCharFactory <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成（共享)BigChar类实例</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> BigChar <span class="title">getBigChar</span><span class="params">(<span class="keyword">char</span> charname)</span></span>&#123;</span><br><span class="line">BigChar bc=(BigChar) pool.get(<span class="string">""</span>+charname);</span><br><span class="line"><span class="keyword">if</span>(bc==<span class="keyword">null</span>)&#123;</span><br><span class="line">bc=<span class="keyword">new</span> BigChar(charname);</span><br><span class="line">pool.put(<span class="string">""</span>+charname, bc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BigString类"><a href="#BigString类" class="headerlink" title="BigString类"></a>BigString类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigString</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> BigChar[] bigChars;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigString</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line">bigChars=<span class="keyword">new</span> BigChar[string.length()];</span><br><span class="line">BigCharFactory factory=BigCharFactory.getInstance();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class="line">bigChars[i]=factory.getBigChar(string.charAt(i));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class="line">bigChars[i].print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main类"><a href="#Main类" class="headerlink" title="Main类"></a>Main类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">BigString bs=<span class="keyword">new</span> BigString(<span class="string">"10101"</span>);</span><br><span class="line">bs.print();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>Flyweight模式会对<strong>多个地方产生影响</strong>。</p><p><strong>Intrinsic:</strong> 应当被共享的信息<br><strong>Extrinsic:</strong> 不应当被共享的信息</p><table><thead><tr><th>名字</th><th>解释</th></tr></thead><tbody><tr><td>Instrinsic信息</td><td>不依赖位置状况，可以共享</td></tr><tr><td>Extrinsic信息</td><td>依赖位置与状况，不能共享</td></tr></tbody></table><p><strong>不要让被共享的实例被垃圾回收机器回收</strong><br>Flyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Flyweight-模式&quot;&gt;&lt;a href=&quot;#Flyweight-模式&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Flyweight" scheme="http://yoursite.com/tags/Flyweight/"/>
    
  </entry>
  
  <entry>
    <title>Iterator模式</title>
    <link href="http://yoursite.com/2021/01/29/Iterator%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Iterator模式/</id>
    <published>2021-01-29T14:39:58.655Z</published>
    <updated>2018-02-13T15:36:11.636Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Iterator模式"><a href="#Iterator模式" class="headerlink" title="Iterator模式"></a>Iterator模式</h1><p>一个一个遍历 <strong>迭代器</strong></p><hr><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-0e0117da6c659344.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Iterator"></p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><h3 id="Aggregate"><a href="#Aggregate" class="headerlink" title="Aggregate"></a>Aggregate</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Aggregate</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Iterator <span class="title">iterator</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Object <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Book"><a href="#Book" class="headerlink" title="Book"></a>Book</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BookShelf"><a href="#BookShelf" class="headerlink" title="BookShelf"></a>BookShelf</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookShelf</span> <span class="keyword">implements</span> <span class="title">Aggregate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//private Book[] books;</span></span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;Book&gt; bookList = <span class="keyword">new</span> ArrayList&lt;Book&gt;();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> last=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//public BookShelf(int maxsize)&#123;</span></span><br><span class="line"><span class="comment">//this.books = new Book[maxsize];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Book <span class="title">getBookAt</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> bookList.get(index);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">appendBook</span><span class="params">(Book book)</span></span>&#123;</span><br><span class="line">bookList.add(book);</span><br><span class="line">last++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> last;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Iterator <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">new</span> BookShelfIterator(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BookShelfIterator"><a href="#BookShelfIterator" class="headerlink" title="BookShelfIterator"></a>BookShelfIterator</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookShelfIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> BookShelf bookShelf;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="title">BookShelfIterator</span><span class="params">(BookShelf bookShelf)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.bookShelf = bookShelf;</span><br><span class="line"><span class="keyword">this</span>.index=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(index &lt; bookShelf.getLength())&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Book book = bookShelf.getBookAt(index);</span><br><span class="line">index++;</span><br><span class="line"><span class="keyword">return</span> book;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//BookShelf bookShelf = new BookShelf(4);</span></span><br><span class="line">BookShelf bookShelf = <span class="keyword">new</span> BookShelf();</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">"Around the World in 80 Days"</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">"Bible"</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">"Cinderella"</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">"Dady-Long-Legs"</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">"Gone with the wind!"</span>));</span><br><span class="line">Iterator it = bookShelf.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Book book = (Book) it.next();</span><br><span class="line">System.out.println(book.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Iterator模式&quot;&gt;&lt;a href=&quot;#Iterator模式&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Iterator" scheme="http://yoursite.com/tags/Iterator/"/>
    
  </entry>
  
  <entry>
    <title>Hello! Hexo</title>
    <link href="http://yoursite.com/2021/01/29/hello-world/"/>
    <id>http://yoursite.com/2021/01/29/hello-world/</id>
    <published>2021-01-29T14:39:58.655Z</published>
    <updated>2018-02-06T04:14:26.013Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="officeWord" scheme="http://yoursite.com/tags/officeWord/"/>
    
  </entry>
  
  <entry>
    <title>Adapter模式</title>
    <link href="http://yoursite.com/2021/01/29/Adapter%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Adapter模式/</id>
    <published>2021-01-29T14:39:58.651Z</published>
    <updated>2018-02-13T15:37:11.147Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Adapter模式"><a href="#Adapter模式" class="headerlink" title="Adapter模式"></a>Adapter模式</h1><p>加个 “适配器” 以便复用<br>Adapter模式也被称为Wrapper(包装器)模式。</p><p>Adapter模式<br>类适配器模式(使用继承的适配器)<br>对象适配器模式(使用委托的适配器)</p><hr><h2 id="类适配器模式-使用继承的适配器"><a href="#类适配器模式-使用继承的适配器" class="headerlink" title="类适配器模式(使用继承的适配器)"></a>类适配器模式(使用继承的适配器)</h2><h3 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h3><p><img src="http://upload-images.jianshu.io/upload_images/10517580-eb65b71911c647ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Adapter"></p><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><h4 id="Print"><a href="#Print" class="headerlink" title="Print"></a>Print</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Banner"><a href="#Banner" class="headerlink" title="Banner"></a>Banner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Banner</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Banner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithParen</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"("</span>+string+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithAster</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"*"</span>+string+<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PrintBanner"><a href="#PrintBanner" class="headerlink" title="PrintBanner"></a>PrintBanner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintBanner</span> <span class="keyword">extends</span> <span class="title">Banner</span> <span class="keyword">implements</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrintBanner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">showWithParen();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span> </span>&#123;</span><br><span class="line">showWithAster();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Print print =  <span class="keyword">new</span> PrintBanner(<span class="string">"Hello"</span>);</span><br><span class="line">print.printWeak();</span><br><span class="line">print.printStrong();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象适配器模式-使用委托的适配器"><a href="#对象适配器模式-使用委托的适配器" class="headerlink" title="对象适配器模式(使用委托的适配器)"></a>对象适配器模式(使用委托的适配器)</h2><h3 id="类图-1"><a href="#类图-1" class="headerlink" title="类图"></a>类图</h3><p><img src="http://upload-images.jianshu.io/upload_images/10517580-c1623aa3118f823b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Adapter.png"></p><h3 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h3><h4 id="Banner-1"><a href="#Banner-1" class="headerlink" title="Banner"></a>Banner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Banner</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Banner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithParen</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"("</span>+string+<span class="string">")"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithAster</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"*"</span>+string+<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Print-1"><a href="#Print-1" class="headerlink" title="Print"></a>Print</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PrintBanner-1"><a href="#PrintBanner-1" class="headerlink" title="PrintBanner"></a>PrintBanner</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintBanner</span> <span class="keyword">extends</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Banner banner;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrintBanner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.banner = <span class="keyword">new</span> Banner(string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">banner.showWithParen();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">banner.showWithAster();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>Adapter模式会对现有的类进行适配，生成行的类。<br>版本的升级与兼容需要用到Adapter模式。<br>适配！适配！就是给需要的类配对一个合适的插口。</p><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Adapter模式&quot;&gt;&lt;a href=&quot;#Adapter模式&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Adapter" scheme="http://yoursite.com/tags/Adapter/"/>
    
  </entry>
  
  <entry>
    <title>Command模式</title>
    <link href="http://yoursite.com/2021/01/29/Command%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Command模式/</id>
    <published>2021-01-29T14:39:58.651Z</published>
    <updated>2018-02-12T15:16:50.719Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><h1 id="Command模式"><a href="#Command模式" class="headerlink" title="Command模式"></a>Command模式</h1><p>命令也是类</p><hr><h2 id="类表"><a href="#类表" class="headerlink" title="类表"></a>类表</h2><table><thead><tr><th>包</th><th>类名</th><th>说明</th></tr></thead><tbody><tr><td>command</td><td>Command</td><td>表示<strong>命令</strong>的接口</td></tr><tr><td>command</td><td>MacroCommand</td><td>表示 <strong>由多条命令整合成的命令</strong> 的类</td></tr><tr><td>drawer</td><td>DrawCommand</td><td>表示 <strong>绘制一个点的命令</strong> 的类</td></tr><tr><td>drawer</td><td>Drawable</td><td>表示 <strong>绘制对象</strong> 的接口</td></tr><tr><td>drawer</td><td>DrawCanvas</td><td>实现 <strong>绘制对象</strong> 的类</td></tr><tr><td>无名</td><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h2 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h2><p>粗略一点的<br><img src="http://upload-images.jianshu.io/upload_images/10517580-adeaab2037439545.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Command"></p><p>详细一点<br><img src="http://upload-images.jianshu.io/upload_images/10517580-a88a91969d2ad8e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Command"></p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MacroCommand"><a href="#MacroCommand" class="headerlink" title="MacroCommand"></a>MacroCommand</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacroCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Stack commands = <span class="keyword">new</span> Stack();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Iterator it=commands.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">((Command)it.next()).execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">append</span><span class="params">(Command command)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(command != <span class="keyword">this</span>)&#123;</span><br><span class="line">commands.push(command);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除最后一条命令</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">undo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!commands.empty())&#123;</span><br><span class="line">commands.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除所有命令</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">commands.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Drawable"><a href="#Drawable" class="headerlink" title="Drawable"></a>Drawable</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Drawable</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DrawCanvas"><a href="#DrawCanvas" class="headerlink" title="DrawCanvas"></a>DrawCanvas</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Canvas;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.MacroCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DrawCanvas</span> <span class="keyword">extends</span> <span class="title">Canvas</span> <span class="keyword">implements</span> <span class="title">Drawable</span> </span>&#123;</span><br><span class="line"><span class="comment">//颜色</span></span><br><span class="line"><span class="keyword">private</span> Color color =Color.red;</span><br><span class="line"><span class="comment">//绘制圆点半径</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> radius=<span class="number">6</span>;</span><br><span class="line"><span class="comment">//命令的历史记录</span></span><br><span class="line"><span class="keyword">private</span> MacroCommand history;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DrawCanvas</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> height,MacroCommand history)</span></span>&#123;</span><br><span class="line">setSize(width, height);</span><br><span class="line">setBackground(Color.WHITE);</span><br><span class="line"><span class="keyword">this</span>.history=history;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重新全部绘制</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">history.execute();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">Graphics g=getGraphics();</span><br><span class="line">g.setColor(color);</span><br><span class="line">g.fillOval(x-radius, y-radius, radius*<span class="number">2</span>, radius*<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DrawCommand"><a href="#DrawCommand" class="headerlink" title="DrawCommand"></a>DrawCommand</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Point;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.Command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DrawCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制对象</span></span><br><span class="line"><span class="keyword">protected</span> Drawable drawable;</span><br><span class="line"><span class="comment">//绘制位置</span></span><br><span class="line"><span class="keyword">private</span> Point position;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DrawCommand</span><span class="params">(Drawable drawable,Point position )</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.drawable=drawable;</span><br><span class="line"><span class="keyword">this</span>.position=position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">drawable.draw(position.x, position.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseMotionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.Box;</span><br><span class="line"><span class="keyword">import</span> javax.swing.BoxLayout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.MacroCommand;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.drawer.DrawCanvas;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.drawer.DrawCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>,</span></span><br><span class="line"><span class="class"><span class="title">MouseMotionListener</span>, <span class="title">WindowListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制的历史记录</span></span><br><span class="line"><span class="keyword">private</span> MacroCommand history=<span class="keyword">new</span> MacroCommand();</span><br><span class="line"><span class="comment">//绘制区域</span></span><br><span class="line"><span class="keyword">private</span> DrawCanvas canvas=<span class="keyword">new</span> DrawCanvas(<span class="number">400</span>,<span class="number">400</span>,history);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除按钮</span></span><br><span class="line"><span class="keyword">private</span> JButton clearButton=<span class="keyword">new</span> JButton(<span class="string">"clear"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Main</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.addWindowListener(<span class="keyword">this</span>);</span><br><span class="line">canvas.addMouseMotionListener(<span class="keyword">this</span>);</span><br><span class="line">clearButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">Box buttonBox=<span class="keyword">new</span> Box(BoxLayout.X_AXIS);</span><br><span class="line">buttonBox.add(clearButton);</span><br><span class="line">Box mainBox=<span class="keyword">new</span> Box(BoxLayout.Y_AXIS);</span><br><span class="line"></span><br><span class="line">mainBox.add(buttonBox);</span><br><span class="line">mainBox.add(canvas);</span><br><span class="line">getContentPane().add(mainBox);</span><br><span class="line"></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">Command command=<span class="keyword">new</span> DrawCommand(canvas,e.getPoint());</span><br><span class="line">history.append(command);</span><br><span class="line">command.execute();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==clearButton)&#123;</span><br><span class="line">history.clear();</span><br><span class="line">canvas.repaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">new</span> Main(<span class="string">"Command Pattern"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参照"><a href="#参照" class="headerlink" title="参照"></a>参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;h1 id=&quot;Command模式&quot;&gt;&lt;a href=&quot;#Command模式&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Command" scheme="http://yoursite.com/tags/Command/"/>
    
  </entry>
  
  <entry>
    <title>Facade模式</title>
    <link href="http://yoursite.com/2021/01/29/Facade%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2021/01/29/Facade模式/</id>
    <published>2021-01-29T14:39:58.651Z</published>
    <updated>2018-02-14T09:07:41.881Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --><p>#Facade模式<br>简单窗口<br>&ensp; 使用Facode模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。</p><hr><h2 id="演示程序类图"><a href="#演示程序类图" class="headerlink" title="演示程序类图"></a>演示程序类图</h2><p><img src="http://upload-images.jianshu.io/upload_images/10517580-01d4d900b5f55994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Facade模式"></p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Database类"><a href="#Database类" class="headerlink" title="Database类"></a>Database类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Database</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Database</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//防止外部new出Database对象，所以声明为private</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Properties <span class="title">getProperties</span><span class="params">(String dbname)</span></span>&#123;</span><br><span class="line">String filename=dbname+<span class="string">".txt"</span>;</span><br><span class="line">Properties prop=<span class="keyword">new</span> Properties();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">prop.load(<span class="keyword">new</span> FileInputStream(<span class="string">"/home/sean/Documents/"</span>+filename));</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line"></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> prop;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HtmlWriter类"><a href="#HtmlWriter类" class="headerlink" title="HtmlWriter类"></a>HtmlWriter类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HtmlWriter</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Writer writer;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HtmlWriter</span><span class="params">(Writer writer)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.writer=writer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">title</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出标题</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">"&lt;html&gt;"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;head&gt;"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;title&gt;"</span>+title+<span class="string">"&lt;/title&gt;"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;/head&gt;"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;body&gt;\n"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;h1&gt;"</span>+title+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paragraph</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出段落</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">"&lt;p&gt;"</span>+msg+<span class="string">"&lt;/p&gt;"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">link</span><span class="params">(String href,String caption)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出超链接</span></span><br><span class="line">paragraph(<span class="string">"&lt;a href=\""</span> +href +<span class="string">"\"&gt;"</span>+caption+<span class="string">"&lt;/a&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailto</span><span class="params">(String mailaddr,String username)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出邮件地址</span></span><br><span class="line">link(<span class="string">"mailto:"</span>+mailaddr,username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//结束输出html</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">"&lt;/body&gt;"</span>);</span><br><span class="line">writer.write(<span class="string">"&lt;/html&gt;\n"</span>);</span><br><span class="line">writer.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PageMaker类"><a href="#PageMaker类" class="headerlink" title="PageMaker类"></a>PageMaker类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageMaker</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">PageMaker</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//防止外部new出PageMaker实例，所以声明为private方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">makeWelcomePage</span><span class="params">(String mailaddr,String filename)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Properties mailprop=Database.getProperties(<span class="string">"maildata"</span>);</span><br><span class="line">String username=mailprop.getProperty(mailaddr);</span><br><span class="line">HtmlWriter writer=<span class="keyword">new</span> HtmlWriter(<span class="keyword">new</span> FileWriter(<span class="string">"/home/sean/Documents/"</span>+filename));</span><br><span class="line">writer.title(<span class="string">"Welcome to "</span>+username+<span class="string">"'s page!"</span>);</span><br><span class="line">writer.paragraph(username+<span class="string">"欢迎到来"</span>+username+<span class="string">"的主页。"</span>);</span><br><span class="line">writer.paragraph(<span class="string">"等你的邮件喔！"</span>);</span><br><span class="line">writer.mailto(mailaddr, username);</span><br><span class="line">writer.close();</span><br><span class="line">System.out.println(filename+<span class="string">"is created for "</span>+mailaddr +<span class="string">" ("</span>+username+<span class="string">")"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main类"><a href="#Main类" class="headerlink" title="Main类"></a>Main类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Facade.pagemaker.PageMaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">PageMaker.makeWelcomePage(<span class="string">"seanchristspc@gmail.com"</span>, <span class="string">"welcome.html"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><h3 id="Facade-窗口"><a href="#Facade-窗口" class="headerlink" title="Facade(窗口)"></a>Facade(窗口)</h3><p>Facade角色向系统外部提供高层接口。在实例程序中由<strong>PageMaker</strong>扮演此角色。</p><h3 id="构成系统的许多其他角色"><a href="#构成系统的许多其他角色" class="headerlink" title="构成系统的许多其他角色"></a>构成系统的许多其他角色</h3><p>这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 <strong>Database</strong>和<strong>HtmlWriter</strong>扮演其他角色。</p><h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><p>Client角色负责调用Facade角色</p><hr><h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>Facade模式就是把复杂的系统变<strong>看起来</strong>简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。<br>该模式还是挺好理解的，代码也不复杂。</p><p>参照</p><blockquote><p>图解设计模式</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Jan 30 2021 17:35:13 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;#Facade模式&lt;br&gt;简单窗口&lt;br&gt;&amp;ensp; 使用Facode模式可以为相互关联在一起的错中复杂的类整理出高层的接
      
    
    </summary>
    
      <category term="DesignPattern" scheme="http://yoursite.com/categories/DesignPattern/"/>
    
    
      <category term="Facade" scheme="http://yoursite.com/tags/Facade/"/>
    
  </entry>
  
</feed>
