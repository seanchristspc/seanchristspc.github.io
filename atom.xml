<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>seanchrist</title>
  <icon>https://www.gravatar.com/avatar/8f82f58f298afd6be845bca97fcac8e3</icon>
  <subtitle>We sat and drank with the sun on our shoulder&#39;s and felt like free men.</subtitle>
  <link href="https://seanchristspc.github.io/atom.xml" rel="self"/>
  
  <link href="https://seanchristspc.github.io/"/>
  <updated>2021-07-23T09:08:25.000Z</updated>
  <id>https://seanchristspc.github.io/</id>
  
  <author>
    <name>seanchrist</name>
    <email>seanchristspc@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Recommend Softwares</title>
    <link href="https://seanchristspc.github.io/2021/07/23/Recommend-Softwares/"/>
    <id>https://seanchristspc.github.io/2021/07/23/Recommend-Softwares/</id>
    <published>2021-07-23T09:08:25.000Z</published>
    <updated>2021-07-23T09:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="recommend-software">Recommend Software</h1><p>为什么要写这篇博文？今天比较闲，闲来没事干，突发奇想，使用电脑也有一段时间了，要不写个blog记录一下自己喜欢 使用的软件。文章会持续更新。</p><p>计算机行业经过这几十年的发展，已产出成千上万的软件，其中不乏一些优秀实用的软件。当前，软件还是要区分平台的， 有些软件依托于windows，有些软件依托于linux,有些软件依托于mac。我会以平台来分类推荐不同的软件。由于，从未使用 过mac,故主要分为两大板块windows和linux来推荐软件，都是自己使用过的，感觉比较nice的。对于自己从未使用的，但是 比较优秀的软件并没有加入推荐列表。收录主要标准，其一自己使用过，其二优秀的软件。实际这两个标准是比较主观的。</p><h3 id="视频播放软件">视频播放软件</h3><p><a href="https://www.videolan.org/vlc/">VLC</a>: VLC还是一个不错的视频播放器，基本市面上的视频格式都支持，同时还可以视频格式转换， 更强大的是VLC还支持剪切视频。哈哈哈！完全不专注自己的播放器主页，搞一些视频处理的业务。该视频播放器完全没有广告或弹窗。 如下图所示，为VLC网站的官网截图，也说了自己的优点。全平台视频播放器，无论是linux,windows,mac 还是ios,andriod他都有客户端。 良心的视频播放软件。 <img data-src="/2021/07/23/Recommend-Softwares/VLC.png" alt="VLC"></p><p>至于下载开源软件，国内的同学可以去<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华镜像</a>下载，速度还是比较快的。 <img data-src="/2021/07/23/Recommend-Softwares/tsinghuaMirror.png" alt="Tsinghua Mirror"></p><p>linux平台上的视频播放软件太多了，也有比较纯粹简洁的视频播放软件。例如Gnome桌面的<strong>totem</strong>视频播放器。 <a href="https://mpv.io/"><strong>mpv</strong></a>播放器也是挺nice的，简洁的。</p><h3 id="pdf软件">Pdf软件</h3><p><a href="https://wiki.gnome.org/Apps/Evince">Evince</a>: Evince是Gnome桌面环境自动安装的pdf阅读器，也是相当的简洁，有简单的批注功能。 如果你喜欢像手机一样具有黑夜模式，Evince依旧可以满足你。 <img data-src="/2021/07/23/Recommend-Softwares/evince.png" alt="Evince"></p><p><a href="https://pwmt.org/projects/zathura/">zathura</a>: zathura是比Evince更简洁的软件，但是没有批注功能，纯粹的pdf阅读器，高效、轻量。 如下图所示，一个菜单选项都没有。当然有快捷建调出它的其他功能。试试按 <code>Tab</code>键，看看会发生什么？当然这个也支持黑夜模式，快捷键 <code>Ctrl+R</code>。 <img data-src="/2021/07/23/Recommend-Softwares/zathura.png" alt="zathura"></p><p><a href="https://okular.kde.org/">okluar</a>: okluar比前两者都要复杂，功能也更多。对于需要注解，各种标注的同学，可以使用okluar。</p><figure><img data-src="/2021/07/23/Recommend-Softwares/okular.png" alt="okluar"><figcaption>okluar</figcaption></figure><p>你可能会好奇，为啥不推荐Adobe Acrobat Reader。哈哈Adobe Acrobat Reader确实不错，不过我很少使用它，功能很强大，但是感觉操作不 是特别方便。</p><h3 id="浏览器软件">浏览器软件</h3><p><a href="https://www.mozilla.org/en-US/">Firefox</a>: linux平台基本都默认安装了<strong>Firefox</strong>,linux浏览器界的王者。尽管Firefox或多或少有些缺点， 但是不阻碍我使用它。Firefox的插件，值得推荐。最近Firefox的Andriod平台的浏览器，感觉使用不错，进化啦！至于Firefox 拦截广告的插件 使用，可以参考 <a href="https://seanchristspc.github.io/2021/04/20/uBlock-Orgin-Tutor/">ublock origin 教程</a>。 <img data-src="/2021/07/23/Recommend-Softwares/firefox.png" alt="Firefox Home"></p><p>对于有些网站必须使用Chromium内核，可以使用 <a href="https://brave.com/">Brave</a>，简单说就是快。有可能你无法访问brave官方网站，可能你需要VPN啦！</p><h3 id="截图软件">截图软件</h3><p><a href="https://flameshot.org/">Flameshot</a>: 除了系统自带的截图快捷键，最值得推荐的linux截图软件就是<strong>Flameshot</strong>。看了一下官网，现在已经支持 windows，Linux，MacOS啦！ <img data-src="/2021/07/23/Recommend-Softwares/Flameshot.gif" alt="Flamshot Usage"></p><h3 id="画图软件">画图软件</h3><p><a href="http://https://inkscape.org">Inkscape</a>: 当前<strong>Inkscape</strong>已经更新到1.1版本。有许多新的特点。同样支持 Linux，Windows,macOS。 我主要用 <strong>Inkscape</strong> 来画论文中的图,对于论文中标注的公式或符号可以使用inkscape的 <strong>Latex</strong>功能，可以很方便的输入公式。功能 还有许多，自己探索吧！ <img data-src="/2021/07/23/Recommend-Softwares/inkscape.png" alt="Inkscape"></p><h3 id="修图软件">修图软件</h3><p><a href="http://https://www.gimp.org">Gimp</a>: 修图可以用PS（Photoshop），当然可以用GIMP,今天访问 <strong>GIMP</strong> 官网，发现GIMP已经经历了25年啦！ 同样支持 Linux,Windows,macOS。只要你用的熟练，依旧可以与PS相媲美。 <img data-src="/2021/07/23/Recommend-Softwares/Gimp.png" alt="Gimp"></p><h3 id="视频处理软件">视频处理软件</h3><p><a href="https://handbrake.fr/">Handshake</a>: 主要用于视频的格式转换，视频的压缩，由于是图形界面，使用还是挺简单的。依旧是全平台软件。 <img data-src="/2021/07/23/Recommend-Softwares/handshake.png" alt="Handshake"></p><p><a href="http://https://ffmpeg.org">ffmpeg</a>: 无论是视频转换格式，还是剪切视频，还是合并视频，提取声音，合并声音和视频，基本上所有的关于 视频额操作都可以使用 <strong>ffmpeg</strong>。其他的一些视频处理软件，基本都使用了ffmpeg。需要使用命令行使用ffmpeg,有点麻烦。不过ffmpeg依旧 优秀。当然你也可以用他截图或录屏。功能十分强大。你也可以使用它的配套命令<code>ffplay</code>,播放视频;查看视频文件信息，可以使用<code>ffprobe</code>命令。 <img data-src="/2021/07/23/Recommend-Softwares/ffmpeg.png" alt="ffmpeg"></p><h3 id="相册管理软件">相册管理软件</h3><p><a href="http://https://www.darktable.org">darktable</a>:darktable是一个不错的图片管理软件。该图片管理软件主要针对你用相机拍摄图片的管理， 可以简单的修改，加滤镜，修改元信息等。界面也较为美观。该软件也是全平台软件（Linux,Windows,macOS）。 <img data-src="/2021/07/23/Recommend-Softwares/darktable.png" alt="darktable"></p><h3 id="录屏软件">录屏软件</h3><p><a href="https://www.maartenbaert.be/simplescreenrecorder/">SSR</a>: simplescreenrecorder 开着参数特别多，但是使用还是特别方便的。 <img data-src="/2021/07/23/Recommend-Softwares/ssr.png" alt="Simpe screen recorder"></p><p><a href="https://obsproject.com/">OBS</a>: 当然录屏软件，怎么能少了 <strong>OBS Studio</strong> 呢？,可以录屏，也可以用于直播，不错的软件。 <img data-src="/2021/07/23/Recommend-Softwares/obs.png" alt="OBS Studio"></p><h3 id="文献管理软件">文献管理软件</h3><p><a href="http://https://www.zotero.org">Zotero</a>: Zotero文献管理软件依旧强大。没使用过其他的参考文献管理软件，不做评论。我可以说的 是Zotero配合浏览器Zotero插件,可以快捷方便的下载文献，自己导入到Zotero中。 可以配合MS word 的zotero的插件，相当方便的插入 <strong>参考文献</strong>,参考文献的索引号会自动更新，解放你参考文献的烦恼。简单方便，同时可以安装Zotero插件，来增强Zotero功能。例如安装 <a href="https://github.com/eschnett/zotero-citationcounts">zotero-citationcounts</a>，可以快速更新文献的被引用数。 <img data-src="/2021/07/23/Recommend-Softwares/zotero.png" alt="Zotero"></p><p><a href="https://www.docear.org">Docear</a>: <strong>Docear</strong>(The Academic Literature Suite),也是文献管理软件，同时也可以做思维导图。不仅可以 插入图片，还可以插入 <strong>latex 公式</strong>,简直太舒服了。还可以设置文件超链接。简直就是文献管理全家桶。不过该项目已经太久没更新，维护了。 且该软件依托于 <strong>jdk8</strong>,其他更高版本的jdk无法使用。对于要写文献综述，该文献管理软件可以提升你的效率。有个缺点，界面有点复古， 不够现代化！哈哈哈！ <img data-src="/2021/07/23/Recommend-Softwares/docear.png" alt="Docear"></p><p>上述两款文献管理软件可以结合使用，都是全平台软件。</p><h3 id="文本编辑软件">文本编辑软件</h3><p><a href="http://https://www.vim.org">Vim</a>: Vim文本编辑器，依旧强大。有学习门槛和学习成本。现在的我文本编辑基本都使用vim，我姑且称为 超级记事本。学习教程可以参考 <a href="https://seanchristspc.github.io/2018/03/19/Linux_Introduction/">Linux简单教程</a>中的 <strong>vim</strong>部分。 Vim中尤其爱使用<strong>snippet</strong>功能,可以试试。 <img data-src="/2021/07/23/Recommend-Softwares/vim.png" alt="VIM"></p><p><a href="https://www.sublimetext.com/">Sublime</a>: Sublime Text 也是不错的超级记事本。这个和Vim相比，学习成本较低，基本开箱即用。依旧是优秀 的文本编辑器。写一些脚本，或一些简单的程序，依旧可以使用它。这个是需要付费的，如果不购买，偶尔会提醒你需要订阅该软件，提醒频率 不高，有闲钱就买一个，没闲钱，提醒时，把提醒框关掉就行了。 <img data-src="/2021/07/23/Recommend-Softwares/sublime.png" alt="Sublime text 4"></p><p><strong>两款文本编辑软件也是全平台软件。</strong> 至于VSCode,目前没使用过，不做评论。</p><h3 id="磁盘分析软件">磁盘分析软件</h3><p><a href="https://help.gnome.org/users/baobab/3.24/">Disk Usage Analyzer</a>: 该磁盘分析软件是相当不错的。对于我这种希望手动删除不需要的文件， 手动分析各文件在磁盘的占有率，使用该软件是一个不错的选择。 <img data-src="/2021/07/23/Recommend-Softwares/diskAnalyzer.png" alt="Disk Analyzer"></p><h3 id="下载文件软件">下载文件软件</h3><p><a href="https://www.freedownloadmanager.org">FreeDownLoad</a>: 该软件作为自己的默认下载器，可以开启多线程下载，提升自己的下载速度。全平台软件。 <img data-src="/2021/07/23/Recommend-Softwares/freeDownload.png" alt="free Download manager"></p><h3 id="字典软件">字典软件</h3><p><a href="http://goldendict.org/">Goldendict</a>: 字典查询软件。需要自己添加符合格式的字典库文件。该字典查询软件既可以使用自己的字典库查询， 也可以使用在线查询，需要添加在线查询网址，想当与浏览器查询字典。该字典查询软件有个快捷使用方式。你先用鼠标选中你需要查询的单词， 然后连续两次<code>Ctrl+C</code>，可以弹出一个查询结果对话框。快捷查询单词，但是无法翻译文章，仅仅用于作为字典，还是相当有用的。 <img data-src="/2021/07/23/Recommend-Softwares/goldendict.png" alt="goldendict"></p><h3 id="终端扩展软件">终端扩展软件</h3><p><a href="https://www.zsh.org/">Zsh</a>: zsh是一个shell。Linux常规默认的shell是Bash。为了更高效的使用的Terminal，可以使用zsh，可以提高你的效率， 输入命令的速度。对一一个已经使用Linux多年的菜鸟，最近发现自己使用 <strong>Terminal</strong>的频率比较频繁。闲下来想想，是时候提升自己使用Terminal 的效率了。回想起以前听过的<code>zsh</code>，就试试它吧！至于安装 <code>sudo apt install zsh</code>,还是挺方便的。如果不配置，直接这样使用zsh,是感觉不出差 别的。和zsh配套的配置框架有许多。我使用了网上介绍最多的 <a href="https://ohmyz.sh/">Oh My zsh</a>,这个折腾比较简单，方便。安装zsh并配置后，使用 终端的效率大幅提升。</p><p>但是，对于Oh My zsh配置框架,当使用的插件较多时，速度就会变慢许多，使用越多的zsh插件，速度越慢。为了解决插件多，zsh速度变慢的问题，可以 使用原生的zsh和 <a href="https://github.com/zdharma/zinit">zinit</a>。zinit相当与zsh的插件管理软件。这样速度提升了。使用大量zsh插件，也不会卡盾。</p><p><strong>zsh</strong>也是最近才发现的，感觉相见恨晚。这么优秀的shell,真该早点使用。不过，在你使用一段时间的bash后，再使用zsh,确实感觉舒服多了，好像 任督二脉被打通了一样。</p><h2 id="排版软件">排版软件</h2><p><a href="http://tug.org/texlive/">TexLive</a>: 排版软件是相当不错的，很好的支持数学公式。和word相比，word是所见即所得的排版软件，但是Tex不是，需要先 编写代码，再编译，然后生成Pdf文件。这样说起来，比Word复杂多了。是这样的，但是随着你文档的内容的不断增加，在文档内容较多的时候，使用word的 很消耗时间，word排版的时间和你的内容量基本成超线性关系，但是使用Tex排版，内容量和排版时间基本线性关系。如果你是一篇小文档，用word或WPS都挺 OK的，但是如果文档内容过多，推荐使用Tex。对于交叉引用特别多的文档，使用Tex不失为一种较好的旋转。你可以去<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华镜像源</a> 下载 <strong>TexLive</strong>安装文件。 <img data-src="/2021/07/23/Recommend-Softwares/tex.png" alt="Tex"></p><hr><h2 id="windows-平台">Windows 平台</h2><p>Windows平台，目前PC生态系统最完善的平台，能使用的软件也颇多。基本软件厂商都会适配Windows系统，毕竟Windows在这个地球村上，使用的人数的目前排第一。 软件厂商不可能抛弃这么大的用户群体。由于我在windows上使用时间不多，所以没有Linux推荐的软件那么多，基本会和Linux推荐的软件重复。</p><hr><h3 id="视频播放软件-1">视频播放软件</h3><p>我依旧推荐 <strong>VLC</strong>播放器。当然也可以使用 <a href="https://potplayer.daum.net/"><strong>potplayer</strong></a>。</p><h3 id="pdf软件-1">pdf软件</h3><p>首推 <strong>Adobe Acrobat Pro DC</strong>,无论是阅读还是修改pdf文件，该款Adobe的Pdf处理软件都能从容应对。</p><p>也推荐 <a href="https://www.tracker-software.com/"><strong>PDF—XChange Views</strong></a>也是一款不错的pdf软件。可以自己定义自己界面的配色，同时标注类型特别丰富。 使用顺滑，使用配合自定义快捷键，可以快速的使用该PDF阅读器。 <img data-src="/2021/07/23/Recommend-Softwares/PdfXChange.png" alt="PDF-XChange Views"></p><h3 id="浏览器软件-1">浏览器软件</h3><p>浏览器软件和Linux推荐的浏览器软件相同 <strong>Firefox或Brave</strong>，请参考前面Linux浏览器软件部分。</p><h3 id="截图软件-1">截图软件</h3><p>除了Linux推荐的 <strong>Flameshot</strong>，也可以使用 <strong>Snipaste</strong>。可以去微软应用商店搜索 <strong>snipaste</strong>。</p><h3 id="画图软件-1">画图软件</h3><p>画图软件依旧推荐<strong>Inkscape</strong>，当然你也可以使用微软的<strong>Visio</strong>。不过个人更喜欢使用 <strong>Inkscape</strong>。 当然，配合Word使用，还是Visio更方便。</p><h3 id="修图软件-1">修图软件</h3><p>修图软件依旧和Linux推荐的应用程序一样，25岁的 <strong>GIMP</strong>。</p><h3 id="视频处理软件-1">视频处理软件</h3><p>依旧推荐 <strong>Handshake</strong>和 <strong>ffmpeg</strong>。</p><h3 id="相册管理软件-1">相册管理软件</h3><p>相册管理软件依旧 <strong>darktable</strong>。</p><h3 id="录屏软件-1">录屏软件</h3><p>windows录屏软件就使用 <strong>OBS Studio</strong>吧！</p><h3 id="文献管理软件-1">文献管理软件</h3><p>既然Zotero和Docear是全平台软件，但是和Linux一样。 <strong>Zotero和Docear</strong></p><h3 id="文本编辑软件-1">文本编辑软件</h3><p>Windows平台就使用 <strong>Sublime Text</strong>软件。</p><h3 id="磁盘分析软件-1">磁盘分析软件</h3><p><a href="http://www.uderzo.it/main_products/space_sniffer/">SpaceSniffer</a>: 磁盘分析软件是一款轻量小巧的软件。大概只有3M大小。 <img data-src="/2021/07/23/Recommend-Softwares/spaceSniffer.png" alt="SpaceSniffer"></p><h3 id="下载文件软件-1">下载文件软件</h3><p>windows下载软件依旧推荐 <strong>FreeDownloadManager</strong>。</p><h3 id="排版软件-1">排版软件</h3><p><strong>Word 、TexLive、WPS</strong>。</p><hr><h2 id="备注">备注</h2><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p>]]></content>
    
    
    <summary type="html">本文主要记录自己爱使用的软件，会持续不断的更新。</summary>
    
    
    
    <category term="-software" scheme="https://seanchristspc.github.io/categories/software/"/>
    
    
    <category term="tools" scheme="https://seanchristspc.github.io/tags/tools/"/>
    
    <category term="software" scheme="https://seanchristspc.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>matlab mex tutorial</title>
    <link href="https://seanchristspc.github.io/2021/06/17/matlab-mex-tutorial/"/>
    <id>https://seanchristspc.github.io/2021/06/17/matlab-mex-tutorial/</id>
    <published>2021-06-16T21:42:16.000Z</published>
    <updated>2021-06-27T22:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要使用-matlab-mex">为什么要使用 matlab mex</h1><p>我来聊聊怎么和 <strong>matlab mex</strong> 相遇的吧！哈哈哈！也可以说是我有求于 <strong>matlab mex</strong>,需要它的帮助！</p><p><em>Matlab Mex brother! help me! help me!</em></p><p>自己在用C语言写低通滤波器，但是在实际的硬件调试电路中，发现滤波器输出的结果 <strong>inf</strong>(无穷大)， 到底是怎么一回事？我应该去哪里debug呢？</p><p>放下硬件调试电路，去周围溜达溜达，出去透透气，呼吸呼吸人间烟火。休息回来后，思考思考，滤波器为什 么不正常工作？ 难道我滤波器参数设置不对吗？还是C语言代码出了问题？还是其他原因？为了debug,还是把 这部分滤波器代码分离出来，看看是否正确？</p><p>在得到输入的信号数据和输出信号数据，需要对他们进行分析？由于有成千上万个数据点，不可能自己手输入到 matlab数组里面，那么有两种方案，解决数据分析问题，第一种还是用C语言分析数据和画图(C语言代码偏向底层， 不适合分析数据，python倒是可以，但是我的DSP中的程序是C语言，为了保持DSP中的代码和我测试代码一致性， python不适合当前操作。去github上找C语言的图形库函数或数据分析包，这是一个不错的解决方案，但我主观上 不像学习其他库函数，学习成本比较大),第二种使用matlab和C语言的函数接口，即今天的主要内容 matlab mex, 实现C语言数据和matlab数据之间的沟通。</p><hr><h1 id="操作环境">操作环境</h1><ul><li>OS：Linux</li><li>matlab version: matlab 2017b</li><li>gcc verison: 8.3.0 (5.3官方推荐)</li></ul><hr><h1 id="低通滤波器离散设计">低通滤波器离散设计</h1><p>使用matlab的filterDesiner工具来设计低通滤波器，该工具主要用于滤波器的设计，可以设计多种滤波器。</p><h2 id="fiterdesiner-quick-overview">fiterDesiner quick Overview</h2><p>在matlab command窗口输入 <strong>filterDesigner</strong> ,启动滤波器设计工具。如下图所示，为filterDesigner启动 后的界面。</p><p><strong>各个功能块做如下说明</strong>：</p><ol type="1"><li>显示当前的设计滤波器的信息。其中 <strong>Order</strong>指的是滤波器的阶数</li><li>设计滤波器的的类型，是低通滤波器还是高通滤波器还是带通滤波器或是其他的</li><li>滤波器的设计方法，首先分为两大类(针对离散化滤波器设计)，IIR和FIR, 然后其中可以选择 butterworth或 chebyshev I或 chebyshev II滤波方法</li><li>指定是滤波器的阶数，可以设置确定的阶数，也可以使用自动优化后的最小阶数，一般来说，最小阶数的方法 优化的滤波器结果更好，但是阶数一般都大于2阶以上，对于需要二阶或以下的滤波器，需要具体指定阶数。</li><li>频率参数的设计，首先是<strong>Unit</strong>指定单位，然后 <strong>Fs</strong>为采样频率， 至于 <strong>Fpass</strong> <strong>Fstop</strong>可以查看中 的参数，可以明确知道， <strong>Fpass</strong>为截至频率, <strong>Fstop</strong>和 <strong>Astop</strong>配合， <strong>Astop</strong>指定具体的衰减分贝， 对应的频率为 <strong>Fstop</strong>.</li><li><p>幅度参数设置，和频率参数的设计结合使用， <strong>Apass</strong>就是我们所说的通带衰减分贝和截至频率 <strong>Fpass</strong>相 对应，一般来说<strong>Apass=3dB</strong>, <strong>Astop</strong>和 <strong>Fstop</strong>对应，一般是每20dB对应衰减幅度<span class="math inline">\(\frac{1}{10}\)</span>. 分贝 公式如下: <span class="math display">\[ dB = -20 \lg A \]</span> A为增益倍数。</p></li><li><p>参数设计的参考图</p></li></ol><p><img data-src="/2021/06/17/matlab-mex-tutorial/filterDesignerOverview.png" alt="filterDesigner overview"> 针对<strong>5,6</strong>的设置多看看 <strong>7</strong>就明白了。</p><h1 id="filterdesigner-example">filterDesigner Example</h1><p>设计二阶低通滤波器，采用IIR butterworth 滤波器，截至频率<span class="math inline">\(fc=600Hz\)</span>,采样频率<span class="math inline">\(fs=10000Hz\)</span>, 具体操作，请看如下动图。</p><figure><img data-src="/2021/06/17/matlab-mex-tutorial/filterDesignerUseExample.gif" alt="filterDesigner Example"><figcaption>filterDesigner Example</figcaption></figure><p>设计后的具体参数如下： <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--------------------------                </span><br><span class="line">Section #1                                </span><br><span class="line">--------------------------                </span><br><span class="line">Numerator:                                </span><br><span class="line">1                                         </span><br><span class="line">2                                         </span><br><span class="line">1                                         </span><br><span class="line">Denominator:                              </span><br><span class="line"> 1                                        </span><br><span class="line">-1.475480443592646073724949928873684257269</span><br><span class="line"> 0.586919508061190309256005548377288505435</span><br><span class="line">Gain:                                     </span><br><span class="line">0.027859766117136031127188289246987551451 </span><br><span class="line">--------------------------                </span><br><span class="line">Output Gain:                              </span><br><span class="line">1        </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>该参数是z变换下的常数，参数对应的公式如下： <span class="math display">\[H(z)=0.027856\frac{1+2z^{-1}+z^{-2}}{1-1.17548z^{-1}+0.58692z^{-2}}\]</span> 转换成离散表达式： <span class="math display">\[Y(n)=0.027856[X(n)+2X(n-1)+X(n-2)]+1.47548Y(n-1)-0.58693Y(n-2)\]</span> 输入为X,输出为Y。通过上述离散表达式书写C语言数字滤波器。</p><h1 id="低通滤波器c语言代码">低通滤波器C语言代码</h1><h2 id="二阶数字滤波器宏定义">二阶数字滤波器宏定义</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// IIR Butterworth second order sections</span></span><br><span class="line"><span class="comment">// fs=10kHz,fc=600Hz</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_k1      0.02786<span class="comment">//gain</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_a11     -1.47548<span class="comment">//denominator</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_a12     0.58692</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_b10     1*LPF2_k1<span class="comment">//numerator</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_b11     2*LPF2_k1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LPF2_b12     1*LPF2_k1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14159</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">filterValues</span> &#123;</span></span><br><span class="line"><span class="keyword">float</span> x[<span class="number">3</span>];<span class="comment">/* input values: x(n):x[0], x(n-1):x[1], x(n-2)=x[2]  */</span></span><br><span class="line"><span class="keyword">float</span> y[<span class="number">3</span>];<span class="comment">/* output values: y(n):y[0], y(n-1):y[1], y(n-2)=y[2]  */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二阶滤波函数">二阶滤波函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! \brief low pass filter</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * second order low pass filter:</span></span><br><span class="line"><span class="comment"> * fs=10khz(sample frequency), fc=600hz(cutoff frequency)</span></span><br><span class="line"><span class="comment"> * z transfer function:</span></span><br><span class="line"><span class="comment"> *    1+2z^(-1)+z^(-2)</span></span><br><span class="line"><span class="comment"> * h(z)=0.02786  ---------------------------------</span></span><br><span class="line"><span class="comment"> *1-1.47548z^(-1)+0.58692z^(-2)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * \param inputvalue: current input value</span></span><br><span class="line"><span class="comment"> * \param values: pointer to filtervalues</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * \return no return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lowpassfilter</span><span class="params">(<span class="keyword">float</span> inputvalue, struct filtervalues *values)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">values-&gt;x[<span class="number">0</span>]=inputvalue;</span><br><span class="line">values-&gt;y[<span class="number">0</span>] =lpf2_b10*(values-&gt;x[<span class="number">0</span>])+lpf2_b11*(values-&gt;x[<span class="number">1</span>])+lpf2_b12*(values-&gt;x[<span class="number">2</span>])-lpf2_a11*(values-&gt;y[<span class="number">1</span>])-lpf2_a12*(values-&gt;y[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">values-&gt;x[<span class="number">2</span>]=values-&gt;x[<span class="number">1</span>];                                                  <span class="comment">//x存储值更新</span></span><br><span class="line">    values-&gt;x[<span class="number">1</span>]=values-&gt;x[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    values-&gt;y[<span class="number">2</span>]=values-&gt;y[<span class="number">1</span>];                                                <span class="comment">//y存储值更新</span></span><br><span class="line">    values-&gt;y[<span class="number">1</span>]=values-&gt;y[<span class="number">0</span>];                                                <span class="comment">//y[0]为最终滤波输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="需要导入的头文件">需要导入的头文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mex.h&quot;</span></span></span><br></pre></td></tr></table></figure><p><strong>math.h</strong>文件主要用于计算sin的值，用于产生信号。 <strong>mex.h</strong>主要用于C语言和matlab数据交互， 需要使用mex工具。</p><hr><h1 id="matlab-mex">matlab mex</h1><h2 id="matlab-mex-install">matlab mex install</h2><p>matlab mex的安装比较简单，参考<a href="https://ww2.mathworks.cn/matlabcentral/fileexchange/52848-matlab-support-for-mingw-w64-c-c-compiler?s_tid=mwa_osa_a">MinGW-w64 C/C++ Compiler</a> ，登录matlab帐号，下载安装文件即可。用于Window平台，GCC编译器的安装，基本上是点点点就行了。 但是需要外网，网络不好，只有手动安装GCC编译器。安装matlab版本相对应的GCC版本，对于 R2017b and R2018a GCC 5.3。最好安装和matlab版本一致的版本。 对于linux系统，就无需使用该方法安装 GCC编译器。linux一般情况下是自带gcc编译器，如果没有，安装也比windows方便。当前我的gcc版本 和推荐的版本不一致，比matlab匹配的GCC版本高, 在使用mex会有警告，提示版本不一致，可以忽略。 在我当前使用中是没有问题的。</p><figure><img data-src="/2021/06/17/matlab-mex-tutorial/mexFirstUse.png" alt="mex complie C"><figcaption>mex complie C</figcaption></figure><h2 id="matlab-mexfunction">matlab mexFunction</h2><p>C语言的滤波函数和matlab mex已经配置完成。剩下的便是完成C语言和matlab之间的编程接口。 顺便提一下，matlab的mex支持C语言和Fortran语言。在本低通滤波操作使用的是C语言。通过 mex编译C语言的源文件，可以得到matlab可运行的mex文件。而在实现C和matlab之间的数据操 作，需要在C源代码文件中添加 <strong>mexFunction</strong> 函数，可以理解在C语言中的主函数，用于 调用自己写的其他C函数，实现具体的功能。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mex.h&quot;</span><span class="comment">//引入mex头文件</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mexFunction</span><span class="params">(<span class="keyword">int</span> nlhs, mxArray *plhs[], <span class="comment">//输出结果</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> nrhs, <span class="keyword">const</span> mxArray *prhs[])</span><span class="comment">//输入参数</span></span></span><br></pre></td></tr></table></figure><p><strong>mexFunction参数</strong>:</p><ol type="1"><li><strong>nlhs</strong>: Number of expected output mxArrays 输出结果的数量</li><li><strong>plhs</strong>: Array of pointers to the expected output mxArrays 输出结果的指针数组</li><li><strong>nrhs</strong>: Number of input mxArrays 输入参数的数量</li><li><strong>prhs</strong>: Array of pointers to the input mxArrays. Do not modify any prhs values in your MEX file. Changing the data in these read-only mxArrays can produce undesired side effects. 输入参数的指针数组。</li></ol><p>一句话总结一下mexFunction，输出参数的和放回结果的数量和指针数组(存储输入和输出的具体结果)。</p><h2 id="mexfunction中常用函数">mexFunction中常用函数</h2><p>对mexFunction中需要使用的一些常用函数做简要说明。</p><p><code>mwPointer mxCreateDoubleMatrix(m, n, ComplexFlag)</code> 该函数用于创建一个矩阵，m为行，n为列， ComplexFlag用于指定矩阵中元素的数据类型，对于实数：mxREAL, 返回的是该矩阵的指针(地址)。一般是把返回值赋给数组plhs[]中的一个指针。实际使用该函数，主要用于在 内存中为矩阵分配空间。</p><p><code>double *mxGetPr(const mxArray *pm)</code> 该函数用于获取数组的首地址，即第一个元素的地址指针。</p><p><code>int mexPrintf(const char *message, ...)</code> 和C语言中的<code>printf()</code>函数的用法一样。</p><h2 id="mexfunction-具体c代码">mexFunction 具体C代码</h2><p>mexFunction二阶低通滤波器的C源代码。在正弦基波分量的基础上，添加了高频率的毛刺 (也是正弦分量，只是频率比C基本的高很多)。如下为二阶低通滤波和matlab数据交换的具体代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * nlhs 输出结果 数量</span></span><br><span class="line"><span class="comment"> * plhs 输出结果 指针</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * nrhs 输入参数 数量</span></span><br><span class="line"><span class="comment"> * prhs 输入参数 指针</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mexFunction</span><span class="params">(<span class="keyword">int</span> nlhs, mxArray *plhs[],</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">int</span> nrhs, <span class="keyword">const</span> mxArray *prhs[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> N=<span class="number">400</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">10</span>;<span class="comment">//显示周期数</span></span><br><span class="line"><span class="keyword">int</span> f=<span class="number">3000</span>;<span class="comment">//相对频率</span></span><br><span class="line"><span class="keyword">int</span> i,m;</span><br><span class="line"><span class="keyword">float</span> delta=<span class="number">2</span>*PI/N/f;</span><br><span class="line"><span class="keyword">float</span> point=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> *input,*result;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">filterValues</span> <span class="title">fvalues</span>=</span>&#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">plhs[<span class="number">0</span>]= mxCreateDoubleMatrix(<span class="number">1</span>, N*n*f, mxREAL);</span><br><span class="line">plhs[<span class="number">1</span>] = mxCreateDoubleMatrix(<span class="number">1</span>, n*N, mxREAL);</span><br><span class="line"></span><br><span class="line">input  = mxGetPr(plhs[<span class="number">0</span>]);</span><br><span class="line">    result = mxGetPr(plhs[<span class="number">1</span>]);</span><br><span class="line">m=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N*n*f; ++i) &#123;</span><br><span class="line">input[i]=<span class="built_in">sin</span>(point)+<span class="number">0.2</span>*<span class="built_in">sin</span>(point*f);</span><br><span class="line">point+=delta;</span><br><span class="line"><span class="keyword">if</span> (i%(f)==<span class="number">0</span>) &#123;</span><br><span class="line">LowPassFilter(input[i], &amp;fvalues);</span><br><span class="line">       result[m]=fvalues.y[<span class="number">0</span>];</span><br><span class="line">       m++;<span class="comment">//remember increment m!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//mexPrintf(&quot;y[%d]=%f\n&quot;,i,fvalues.y[0]);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="compile-c-source-file-by-mex">compile C source file by mex</h2><p>在matlab命令行中输出如下内容，其中LowPassFilter.c为c语言源代码文件。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mex LowPassFilter.c</span><br></pre></td></tr></table></figure></p><p>编译成功后，可在matlab中直接执行LowPassFilter命令，由于上述有mexFunction 有两个返回值，故在matlab Commander窗口输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[a,b]&#x3D;LowPassFilter;</span><br><span class="line"></span><br><span class="line">% 作图</span><br><span class="line">plot(linspace(0,10*pi,12000000),a)</span><br><span class="line">hold on</span><br><span class="line">plot(linspace(0,10*pi,4000),b)</span><br></pre></td></tr></table></figure><h2 id="lowpass-filer-result">lowpass filer result</h2><p>滤波结果，请见下图，可以发现滤波该滤波参数能较好的进行滤波。至于最初为什么 实际的硬件电路无法完成滤波，还需进一步查找原因，至少能排除参数和滤波器C语言 源代码没有问题。</p><figure><img data-src="/2021/06/17/matlab-mex-tutorial/lowpassResult.svg" alt="low pass filter result"><figcaption>low pass filter result</figcaption></figure><hr><h1 id="滤波器输出inf问题">滤波器输出inf问题</h1><p>在实际的DSP硬件电路中，数字滤波器输出无穷大<strong>inf</strong>问题，即<code>filtervalues.y[0]=inf</code> 需要解决该问题，正如前面排除滤波器C语言代码的问题，回想以下。用实际的示波器测量一 下滤波器未滤波的波形，发现每个周期有多个突变点，问题应该出在输入波形具有突变，输入 值的 <strong>inf</strong>,自然滤波得到的结果为无穷大。故在滤波的前，<strong>输入信号增加一个限幅环节</strong>。 即在调用<code>LowPassFilter(float inputvalue, struct filterDesigner *values)</code>之前，添加一句 限幅代码。限幅代码添加后，硬件滤波波形完好了。在实际硬件应用中，添加一个限幅环节，完美 解决问题。实际的软件仿真模拟中，输入信号比较理想，不存在突变的情况，故可以不加限幅环节。</p><p><strong>限幅！限幅！限幅！</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N*n*f; ++i) &#123;</span><br><span class="line">input[i]=<span class="built_in">sin</span>(point)+<span class="number">0.2</span>*<span class="built_in">sin</span>(point*f);</span><br><span class="line">point+=delta;</span><br><span class="line"><span class="comment">/************添加的限幅代码 start*********************/</span></span><br><span class="line"><span class="comment">//limit input values </span></span><br><span class="line"><span class="keyword">if</span> (input[i]&gt;<span class="number">10</span>) &#123;</span><br><span class="line">input[i]=<span class="number">10</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (input[i]&lt;<span class="number">-10</span>) &#123;</span><br><span class="line">input[i]=<span class="number">-10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*************添加的限幅代码 end********************/</span></span><br><span class="line"><span class="keyword">if</span> (i%(f)==<span class="number">0</span>) &#123;</span><br><span class="line">LowPassFilter(input[i], &amp;fvalues);</span><br><span class="line">result[m]=fvalues.y[<span class="number">0</span>];</span><br><span class="line">m++;<span class="comment">//remember increment m!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//mexPrintf(&quot;y[%d]=%f\n&quot;,i,fvalues.y[0]);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="conclusion">Conclusion</h1><p>最终，终于实现C代码和matlab之间的互通，并且验证自己的数字低通滤波器参数和C语言 代码都没问题。做一天的硬件调试，发现问题出在未加限幅环节。因为实际的信号存在各种 不确定性，添加限幅环节，可以防止突变。</p><p><img data-src="/2021/06/17/matlab-mex-tutorial/experimentFilterWave.BMP" alt="实验低通滤波波形"> 请看上图的实验波形，棕色波形是带有高频信号噪声的正弦波，紫色波形是经过数字滤波后的 的波形。十分赏心悦目,终于实现硬件实验下的数字滤波。</p><h1 id="reference">Reference</h1><p><a href="https://ww2.mathworks.cn/help/">Matlab 帮助文档</a></p><h1 id="备注">备注</h1><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p>]]></content>
    
    
    <summary type="html">在自己使用C语言写的二阶低通滤波器，需要查看自己写的C语言代码是否正确，是否能正确实现数字低通滤波，故需要验证一下。要实现把C语言产生的数据分享给导入matlab中，可以方便使用matlab来分析数据，或者方便画图。同时在设计滤波器参数，使用到了matlab 的 filterDesigner工具。当然C语言也有画图的库，或者在github上能找到，但是不想学习C的库函数，想用熟悉的matlab画图工具！</summary>
    
    
    
    <category term="matlab" scheme="https://seanchristspc.github.io/categories/matlab/"/>
    
    
    <category term="matlab" scheme="https://seanchristspc.github.io/tags/matlab/"/>
    
    <category term="tutorial" scheme="https://seanchristspc.github.io/tags/tutorial/"/>
    
    <category term="mex" scheme="https://seanchristspc.github.io/tags/mex/"/>
    
    <category term="digital low pass filter" scheme="https://seanchristspc.github.io/tags/digital-low-pass-filter/"/>
    
  </entry>
  
  <entry>
    <title>uBlock Origin Tutorial</title>
    <link href="https://seanchristspc.github.io/2021/04/20/uBlock-Orgin-Tutor/"/>
    <id>https://seanchristspc.github.io/2021/04/20/uBlock-Orgin-Tutor/</id>
    <published>2021-04-19T21:47:24.000Z</published>
    <updated>2021-04-19T21:47:24.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="ublock-origin-tutorial">uBlock Origin Tutorial</h1><h2 id="不知为何接触到了-ublock-origin">不知为何接触到了 uBlock Origin</h2><p>什么时候开始接触 <a href="https://ublockorigin.com/">uBlock Origin</a>？在浏览Firefox插件安装商店的排行榜时，发现<strong>uBlock Origin</strong> 插件使用人数挺多的，于是就安装了！当时看见 <strong>uBlock</strong>就默认为是拦截广告的插件，为了避免广告就安装了！实际最初使用拦截广 告的插件是<strong>AdBlocker Ultimate</strong>, AdBlocker也挺不错的，尝试一下新的广告拦截插件，况且uBlock的酒红色我更偏爱就试试它吧！ 以为 <strong>uBlock Origin</strong>和 <strong>AdBlocker Ultimate</strong>一样，安装完无需配置就可以使用！事实上这句话，算正确，也算不正确。如果两者 相同，为什么 <strong>uBlock Origin</strong>作为后来者，增长速度较快于 <strong>AbBlocker Ultimate</strong>? 说明 <strong>uBlock Origin</strong>有它的优势，故我们 要探索探索它的优点。</p><p>喂！喂！喂！朋友该进入正题了，不要说这些废话！</p><p>客官，好的！开胃菜马上呈上。抱歉！</p><hr><h2 id="ublock-origin-introduction">uBlock Origin Introduction</h2><p>去官网<a href="https://ublockorigin.com/">uBlock Origin</a>，发现 uBlock Origin 简介。简单的说就是，免费 开源 的广告拦截器，且低CPU低 Memery 内存消耗,支持各种主流的浏览器。当然少不了去 <strong>Github</strong>查查，Github <a href="https://ublockorigin.com/">uBlock Origin</a>地址， 同样有介绍！uBlock Origin 哲学&quot;uBlock Origin (or uBlock₀) is not an ad blocker; it's a general-purpose blocker. &quot; 翻译成中文 就是 <strong>uBlock Origin 不只是一个广告拦截器，更是一个通用拦截器。</strong> 恰恰是这句话吸引我去研究它。感觉有一定道理。</p><h2 id="ublock-origin-install">uBlock Origin Install</h2><p>对于 <strong>uBlock Origin</strong> 安装，最简单的就是取个浏览器插件应用商店安装，这里给出 <a href="https://addons.mozilla.org/en-US/firefox/">Firefox插件应用商店</a> 地址。官网和Github上也有安装教程，就不做详细介绍了。</p><hr><h2 id="ublock-origin-tricks">uBlock Origin Tricks</h2><p>有一天天气不错，是个好天气好日子。吃完晚饭，闲来无事，那就研究研究搁下已久的 <strong>uBlock Origin</strong>插件。</p><blockquote><p>uBlock Origin (or uBlock₀) is not an ad blocker; it's a general-purpose blocker.</p></blockquote><h3 id="ublock-origin-菜单快速浏览">uBlock Origin 菜单快速浏览</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginMenuQuickLook.gif" alt="click uBlock Origin more and less"><figcaption>click uBlock Origin <em>more</em> and <em>less</em></figcaption></figure><h3 id="ublock-origin-菜单概要">uBlock Origin 菜单概要</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginMenuInfo.png" alt="uBlock Origin 菜单概要"><figcaption>uBlock Origin 菜单概要</figcaption></figure><p>如图所示为 uBlock Origin 的菜单概要，并对各功能块编号。</p><ol type="1"><li><p>访问该网站请求了网址。</p></li><li><p>uBlock 高级使用菜单栏</p></li><li><p>uBlock 快速功能使用菜单</p></li><li><p>uBlock 开关机按钮</p></li><li><p>uBlock 的信息概要</p></li></ol><h3 id="ublock-origin-zapper-mode">uBlock Origin zapper mode</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginzapper.gif" alt="zapper mode"><figcaption>zapper mode</figcaption></figure><p>zapper mode 为快速Block当前网页的内容, 但只适用于当前时刻的网页，重新加载网页，阻塞的功能失效。 主要用于仅访问一次的网页，当前时刻不想看见网页的部分内容，可以使用该功能。</p><h3 id="ublock-origin-picker-mode">uBlock Origin picker mode</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginPicker.gif" alt="picker mode"><figcaption>picker mode</figcaption></figure><p>picker mode主要选取该网页想要永久Block的内容（不显示选取的内容），进行快速的选取。选取后，右下角 会弹出一个对话框，其中 <strong>preview</strong> 为预览概选取的内容，有点类似于 zapper mode。 <strong>quit</strong>放弃本次 选取内容， <strong>create</strong> 确认本次选取内容，相当于确认按钮， <strong>pick</strong>重新选取。该功能的选取还是挺方便 Block 自己不想看的内容。</p><h3 id="ublock-origin-logger">uBlock Origin logger</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginlogger.gif" alt="logger"><figcaption>logger</figcaption></figure><p>uBlock Origin 的日志功能主要查看该网页加载的资源，可以详细的查看，如上述演示，为查看该网站的图片。 更高级的使用技巧，请自己探索探索。</p><h3 id="ublock-origin-dashboard">uBlock Origin dashboard</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginDashboard.gif" alt="dashboard"><figcaption>dashboard</figcaption></figure><p>uBlock Origin dashboard 主要是一些uBlock的设置和自己的过滤规则。可以自己修改过滤的内容。上述演示 内容中，把uBlock网站的Block规则删除，在重新加载网页，恢复原来的面貌了。</p><p>在 dashboard 中点击 <strong>Filter lists</strong>，然后把 <strong>Ad</strong> 中的 <strong>AdGuard Base</strong> 和 <strong>AdGuard Mobile Ads</strong> 勾选了，用于 Block 广告。主要该软件是外国人写的，对国外的网站的广告过滤比较友好，对于国内还是自己定制 自己的过滤规则。 也就是 <strong>My filters</strong>的内容，自己添加修改。如果你学过html和css，那么自己过滤内容就挺 方便，因为有些广告用picker无法准确的筛选内容，会存在过滤不准确。</p><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginFilterlist.png" alt="filter lists"><figcaption>filter lists</figcaption></figure><h3 id="ublock-origin-customs">uBlock Origin Customs</h3><p>如下是我自己的过滤规则表，可以添加到 <strong>My filters</strong>中。只是我目前使用的，随着你使用的越久，定制的内容就 会越多。可供参考，但不完全正确。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.zhihu</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.zhihu</span><span class="selector-class">.com</span>##<span class="selector-class">.Question-sideColumn--sticky</span><span class="selector-class">.Question-sideColumn</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-class">.Sticky</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.nfmovies</span><span class="selector-class">.com</span></span><br><span class="line">||www.nfmovies.com/static/*.jpg$image</span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">http</span>://<span class="selector-tag">www</span><span class="selector-class">.bimiacg</span><span class="selector-class">.com</span></span><br><span class="line">||v.taiqingjiu.com/syjpc/*.gif$image</span><br><span class="line">||v2.taiqingjiu.com/syjpc/*.gif$image</span><br><span class="line">||v.taiqingjiu.com/syjpc/*.gif$image</span><br><span class="line">||ddcdn.jd.com/ddimg/*/*.png$image</span><br><span class="line">||cdn.u1.huluxia.com/g4/*/*.jpg$image</span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-class">.recommend-box</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-class">.recommend-tit-mod</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#asideNewComments</span> &gt; <span class="selector-class">.aside-content</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#asideHotArticle</span> &gt; <span class="selector-class">.aside-content</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">book</span><span class="selector-class">.douban</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">book</span><span class="selector-class">.douban</span><span class="selector-class">.com</span>##<span class="selector-class">.aside</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#asideHotArticle</span> &gt; <span class="selector-class">.aside-content</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-15</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.zhihu</span><span class="selector-class">.com</span></span><br><span class="line">||pic*.zhimg.com/*.jpeg$image</span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.zhihu</span><span class="selector-class">.com</span>##<span class="selector-class">.Footer</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-16</span> <span class="selector-tag">https</span>://<span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-class">.toolbox-list</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#asideHotArticle</span> &gt; <span class="selector-class">.aside-title</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#asideNewComments</span> &gt; <span class="selector-class">.aside-title</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-16</span> <span class="selector-tag">https</span>://<span class="selector-tag">mathworld</span><span class="selector-class">.wolfram</span><span class="selector-class">.com</span></span><br><span class="line">||www.wolframcdn.com/side-images/*$image</span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-16</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##._3<span class="selector-tag">Pnjry</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>#<span class="selector-id">#a</span>._1<span class="selector-tag">OhGeD</span><span class="selector-class">.hM7XFL</span><span class="selector-pseudo">:nth-of-type(2)</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##._13<span class="selector-tag">lIbp</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##<span class="selector-class">.d0hShY</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>#<span class="selector-id">#section</span><span class="selector-class">.ouvJEz</span><span class="selector-pseudo">:nth-of-type(2)</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##._2<span class="selector-tag">xr8G8</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-17</span> <span class="selector-tag">https</span>://<span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-id">#copyright-box</span></span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-class">.template-box</span></span><br><span class="line">||kunpeng-sc.csdnimg.cn/?timestamp=*/$subdocument</span><br><span class="line"><span class="selector-tag">blog</span><span class="selector-class">.csdn</span><span class="selector-class">.net</span>##<span class="selector-class">.toolbar-container</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-17</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##._1<span class="selector-tag">CSgtu</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>##<span class="selector-class">.VYwngI</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.jianshu</span><span class="selector-class">.com</span>#<span class="selector-id">#div</span> &gt; ._3<span class="selector-tag">Z3nHf</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-03-18</span> <span class="selector-tag">https</span>://<span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-class">.RecentCommentBlock</span> &gt; <span class="selector-tag">ul</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#TopViewPostsBlock</span> &gt; <span class="selector-tag">ul</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#TopFeedbackPostsBlock</span> &gt; <span class="selector-tag">ul</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#TopDiggPostsBlock</span> &gt; <span class="selector-tag">ul</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-class">.catList</span> &gt; <span class="selector-class">.catListTitle</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#recent_comments_wrap</span> &gt; <span class="selector-class">.catListTitle</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#topview_posts_wrap</span> &gt; <span class="selector-class">.catListTitle</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-id">#topfeedback_posts_wrap</span> &gt; <span class="selector-class">.catListTitle</span></span><br><span class="line"><span class="selector-tag">www</span><span class="selector-class">.cnblogs</span><span class="selector-class">.com</span>##<span class="selector-class">.catListView</span> &gt; <span class="selector-class">.catListTitle</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-04-16</span> <span class="selector-tag">https</span>://<span class="selector-tag">mail</span>.163<span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">mail</span>.163<span class="selector-class">.com</span>##<span class="selector-class">.nui-closeable</span></span><br><span class="line"><span class="selector-tag">mail</span>.163<span class="selector-class">.com</span>##<span class="selector-class">.js-component-link</span><span class="selector-class">.tL2</span></span><br><span class="line"><span class="selector-tag">mail</span>.163<span class="selector-class">.com</span>##<span class="selector-id">#_mail_component_106_106</span></span><br><span class="line"><span class="selector-tag">mail</span>.163<span class="selector-class">.com</span>##<span class="selector-id">#_mail_tabitem_3_121</span></span><br><span class="line"><span class="selector-tag">mail</span>.163<span class="selector-class">.com</span>##<span class="selector-class">.mailgg</span></span><br><span class="line"></span><br><span class="line">! 2021<span class="selector-tag">-04-16</span> <span class="selector-tag">https</span>://<span class="selector-tag">mail</span>.126<span class="selector-class">.com</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">mail</span>.126<span class="selector-class">.com</span>##<span class="selector-class">.mailgg</span></span><br><span class="line"><span class="selector-tag">mail</span>.126<span class="selector-class">.com</span>##<span class="selector-id">#_mail_tabitem_3_121</span></span><br><span class="line"><span class="selector-tag">mail</span>.126<span class="selector-class">.com</span>##<span class="selector-class">.gWel-bottom</span></span><br><span class="line"><span class="selector-tag">mail</span>.126<span class="selector-class">.com</span>##<span class="selector-id">#_mail_component_106_106</span></span><br><span class="line"><span class="selector-tag">mail</span>.126<span class="selector-class">.com</span>##<span class="selector-id">#_mail_component_113_113</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ublock-origin-快速功能使用">uBlock Origin 快速功能使用</h3><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginMenuQuickuse.gif" alt="Quick function"><figcaption>Quick function</figcaption></figure><figure><img data-src="/2021/04/20/uBlock-Orgin-Tutor/uBlockOriginQuickUse.png" alt="Quick use"><figcaption>Quick use</figcaption></figure><p>快速功能使用各模块解释</p><ol type="1"><li>阻止所有该网站的弹出窗口</li><li>阻止该网站的大的媒体文件元素</li><li>关闭Cosmetic filters的过滤功能</li><li>阻止网站使用远程字体（网页显示的字体可能是远程下载的，也可能是本地加载的）</li><li>禁止网站javascript(对于有些网站，禁止js，会出现显示异常或无法加载网页)</li></ol><p>点击 <strong>锁</strong> 一样的图片，指永久改变该网站的阻塞内容。</p><hr><h2 id="备注">备注</h2><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p><h2 id="参考连接">参考连接</h2><p><a href="https://ublockorigin.com/">uBlock Origini Official site</a></p><p><a href="https://github.com/gorhill/uBlock">uBlock Origin Github</a></p>]]></content>
    
    
    <summary type="html">本文介绍了浏览器拦截广告插件uBlock Orgin的基础使用。Firefox,Chrome,MS Edge 和基于Chromium等浏览器都可以安装该插件！</summary>
    
    
    
    <category term="tools" scheme="https://seanchristspc.github.io/categories/tools/"/>
    
    
    <category term="Add-ons" scheme="https://seanchristspc.github.io/tags/Add-ons/"/>
    
    <category term="uBlock Origin" scheme="https://seanchristspc.github.io/tags/uBlock-Origin/"/>
    
    <category term="tools" scheme="https://seanchristspc.github.io/tags/tools/"/>
    
    <category term="browser" scheme="https://seanchristspc.github.io/tags/browser/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Latex configure and preview math equation</title>
    <link href="https://seanchristspc.github.io/2021/03/30/Latex-Sublime-configure/"/>
    <id>https://seanchristspc.github.io/2021/03/30/Latex-Sublime-configure/</id>
    <published>2021-03-29T20:11:13.000Z</published>
    <updated>2021-03-29T20:11:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sublime-editor-configure">sublime editor configure</h1><h2 id="安装-sublime-editor">安装 sublime editor</h2><p>在讲述 sublime editor 配置之前，说一点无关紧要的话，缓解缓缓烦闷的气氛！ 想必大家都爱用巨硬的<a href="https://code.visualstudio.com/">VS Code</a>吧！不过， 目前我还没有去尝试！主要是没有时间和当前使用的代码编辑器足够我使用就没有 尝试VS code。据我了解，VS Code 的插件 <strong>异常丰富</strong>（插件更新快），开发者 <strong>特别活跃</strong>。如果有时间和精力，以后可能会去尝试吧！</p><p>说了这么多题外话，开始步入正题，sublime editor 安装。安装sublime,对于windows 使用的朋友来说，相当简单，首先去官网 <a href="http://www.sublimetext.com/">Sublime Offical</a> 下载，然后只管点点点！哇晒！安装成功了！你开心就好！对于linux用户，官网上也有安装 <a href="http://www.sublimetext.com/docs/3/linux_repositories.html">教程</a>，对于mac用户， 去官网找找， <a href="https://baidu.com">百度百度</a> <a href="https:bing.com/">bing!bing!</a>或者 <a href="https://google.com">Goole!Google</a>当然可以<a href="https://duckduckgo.com/">DuckDuckGo</a>!</p><p>对于注册码部分，可以去百度！不过好像 sublime 添加了联网检测机制。对于重复多人使用的 注册码会无效！魔高一尺道高一丈，当然是有方法的，可以通过修改 <code>host</code>文件解决问题。 不注册也能用，只是偶尔会提醒你注册，提醒频率极低！如果你有闲钱，欢迎你支持正版。 支持一下，软件开发者！哈哈！好像有打广告嫌疑！</p><h2 id="安装-package-control">安装 Package Control</h2><p>使用 Sublime editor, 不安装 Package Control, 你将会失去Sublime的乐趣和方便性。 方便指的是 使用 <strong>Package Control</strong> 安装 Sublime 的插件十分方便！至于安装教程 可参考 <a href="https://packagecontrol.io/installation">Package Control</a>官方教程。怎么 老是给我推荐官方教程？主要是自己懒，其次官方教程比较可靠！推荐使用官方教程的 第二种方法 <strong>Menu</strong>，直接 <strong>点点点</strong>就OK啦！第一种方法也简单，使用命令板。调出 命令板的快捷键方法<code>ctrl+shit+p</code>，以后你会经常使用它。提前学习了！</p><h2 id="使用-package-control-安装插件">使用 Package Control 安装插件</h2><ol type="1"><li>调出 Sublime 的命令行面板，按下 <strong>快捷键</strong> <code>ctrl+shit+p</code> or <code>cmd+shit+p</code>。 如下图所是,按下快捷键<code>ctrl+shit+p</code></li><li>输入需要安装插件的名字，比如我门需要安装<strong>Latextools</strong>,来配置latex写作环 境。然后等待安装即可！</li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/PackageControlInstallWidget.gif" alt="Package Control 安装插件演示"><figcaption>Package Control 安装插件演示</figcaption></figure><ol start="3" type="1"><li>我常用的插件，请看下图！实际是你需要什么，就安装什么，按需使用！</li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/ownWidgetsList.gif" alt="常用 Sublime 插件"><figcaption>常用 Sublime 插件</figcaption></figure><hr><h1 id="latextools-配置">Latextools 配置</h1><p>Latextools的配置，需要安装其他软件,比如Tex,ImageMagick,Ghostscript.... 怎么需要安装这么多软件？你有捆绑销售的嫌疑！如果不需要公式预览功能，ImageMagick是 不需要安装的，Ghostscprit在安装Tex时，就顺带安装了！最后只剩下孤单的Tex一人，但是 它还有其他伙伴！不然太孤单了，Tex的其他朋友，请继续往下阅读！</p><h2 id="latextools-软件依赖">Latextools 软件依赖</h2><h3 id="tex-安装">Tex 安装</h3><ol type="1"><li><p>下载Tex安装包！国内用户，建议使用清华mirror源下载 <a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/texlive2020-20200406.iso">TexLive</a>, 这是2020版。建议安装TexLive安装最新版本。</p></li><li><p>安装TexLive。因为是iso文件，可能需要限<strong>挂载</strong>，然后去找其中含有 <strong>install</strong>的安装程序。点击安装即可。 同样的是点点点，注意记住自己的安装路径！</p></li></ol><h3 id="imagemagick-安装">ImageMagick 安装</h3><ol type="1"><li><p>下载 ImageMagick 安装包，去官网下载吧！ <a href="https://imagemagick.org/script/download.php">ImageMagick Download</a></p></li><li><p>直接点击安装即可！ <strong>点点点！</strong></p></li><li><p>如果你想在 <strong>Powershell</strong> 命令行使用，需要自己配置环境变量！</p></li></ol><h3 id="ghostscript">GhostScript</h3><p>如果安装的TexLive,是自带有Ghostscript,无需额外安装！</p><h3 id="sumatra-安装">sumatra 安装</h3><p>安装这个是用于,sublime 编译后，可以自动弹出阅览pdf效果。反向搜索目的在于可以从编译后生成的pdf文件， 双击击你需要查看的内容，会自动跳转到sublime对应的编辑位置。</p><ol type="1"><li><p>sumatra <a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer.html">下载地址</a></p></li><li><p>配置反向搜索</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SumatraPDF.exe -inverse-search &quot;\&quot;D:\SoftInstallPlace\Sublime Text <span class="number">3</span>\sublime_text.exe\&quot; \&quot;<span class="variable">%f:%</span>l\&quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li><p>如果上述命令执行不成功，显示无法找到该命令。第一种方法是用于配置 sumatra 环境变量; 第二种方法是用 <strong>Powershell</strong> 切换到 sumatra 安装目录，然后执行上述命令。注意对应的 exe 文件名要和你安装的SumatraPDF程序相对应！</p></li><li><p>结果如下</p></li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/SumatraInverseSearch.jpg" alt="Sumatra 反向搜索配置"><figcaption>Sumatra 反向搜索配置</figcaption></figure><h2 id="latextools-配置开始">Latextools 配置开始</h2><h3 id="打开latextools-配置文件">打开LatexTools 配置文件</h3><ol type="1"><li><p>点击菜单栏的 <code>Preferences</code></p></li><li><p>点击 <code>Package Settings</code></p></li><li><p>点击 <code>Latextools</code></p></li><li><p>点击 <code>Settings-user</code></p></li></ol><p>实际看图片更简单明了！如下为操作的具体过程！如果打开文件为空白(null)，可以把默认 的配置文件复制过来！</p><figure><img data-src="/2021/03/30/Latex-Sublime-configure/openLatextoolsConfig.gif" alt="打开Latextools配置文件"><figcaption>打开Latextools配置文件</figcaption></figure><h3 id="windows-配置项">windows 配置项</h3><p>大概在209行左右，也可以用 <code>Ctrl+F</code>搜索关键词 <strong>windows</strong>,我们以windows平台介绍！</p><figure><img data-src="/2021/03/30/Latex-Sublime-configure/latexToolsWindowsItem.png" alt="windows 配置项预览"><figcaption>windows 配置项预览</figcaption></figure><ol type="1"><li><strong>texpath</strong> 配置。需要添加安装<strong>texlive安装环境</strong>，例如我的是</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">D:\\<span class="title">SoftInstallPlace</span>\\<span class="title">texlive</span>\\2019\\<span class="title">bin</span>\\<span class="title">win32</span>;</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>根据你自己安装路径，修改一下，各环境变量用分号隔开！添加 <strong>ImageMagick安装环境</strong>，例如我的 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">D:\\<span class="title">SoftInstallPlace</span>\\<span class="title">ImageMagick</span>-7\\;</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure> 添加<strong>Ghostscript 安装环境</strong>,texlive 自带，因此为 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">D:\\<span class="title">SoftInstallPlace</span>\\<span class="title">texlive</span>\\2019\\<span class="title">tlpkg</span>\\<span class="title">tlgs</span>\\<span class="title">bin</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure> 2. <strong>distro</strong>配置。因为前面我们安装的是texlive，因此要修改为<code>texlive</code>。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">distro: &quot;<span class="title">texlive</span>&quot;</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li><strong>sumatra</strong>配置。例如我配置项为 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">D:\\<span class="title">SoftInstallPlace</span>\\<span class="title">SumatraPDF</span>\\<span class="title">SumatraPDF.exe</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure></li></ol><h3 id="preview-math-latex-compile-program-配置">preview math latex compile program 配置</h3><p>公式预览编译器的设置，<code>xelatex</code>挺不错的，就改成这个Tex编译引擎。</p><figure><img data-src="/2021/03/30/Latex-Sublime-configure/PreviewMathLatexCompileProgram.png" alt="preview math latex compile program配置"><figcaption>preview math latex compile program配置</figcaption></figure><h1 id="其他问题说明">其他问题说明</h1><h2 id="math-equation-预览功能无法使用">Math Equation 预览功能无法使用</h2><ol type="1"><li>使用 LatexTools:check system 查看 tex宏包是否安装完全，以及环境是否配置正确！</li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/LatexToolsCheckSystem.gif" alt="LatexTools: Check system"><figcaption>LatexTools: Check system</figcaption></figure><p>像 <strong>biber</strong> 和 <strong>convert</strong> 或 <strong>magick</strong> 显示不可用可以忽略！使用check system 有一定的参考价值，实际它是有bug的，因为自己确实安装并配置了环境变量，而他显示未 检测到其他需要软件！具有一定的误导作用！记得以前为了解决未检测其他软件，自己反复 重新安装软件，并配置环境变量，它给我的反馈都一样！最后发现是插件作者写的该检测环 境脚本鲁棒性不够！</p><ol start="2" type="1"><li>Windows 用户的朋友需要添加 环境变量 <code>GS_LIB</code>,环境变量的值为: <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">D:\<span class="title">SoftInstallPlace</span>\<span class="title">texlive</span>\2019\<span class="title">tlpkg</span>\<span class="title">tlgs</span>\<span class="title">Resource</span>\<span class="title">Init</span>;<span class="title">D</span>:\<span class="title">SoftInstallPlace</span>\<span class="title">texlive</span>\2019\<span class="title">tlpkg</span>\<span class="title">tlgs</span>\<span class="title">kanji</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure> 当时安装配置完环境，公式预览无法实现，也自己查了以下 sublime 在实现公式预览生成的临时文件， 发现并未有生成pdf文件，和生成pdf有关的软件为Ghostscript,定位到出问题的大致位置。你可能会问 Imagemagick软件是干嘛的呢？请看软件名，Image，处理图片的。<strong>实际预览的公式为图片文件</strong>。 对应修改自己的安装目录！ <a href="https://www.jianshu.com/p/fee3fa234626">参考网址</a></li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/GS_LIB.jpg" alt="GS LIB"><figcaption>GS LIB</figcaption></figure><h2 id="首次使用-tex-编译文件">首次使用 tex 编译文件</h2><ol type="1"><li>使用 命令板方式</li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/FirstBuidPdf.gif" alt="第一次编译pdf"><figcaption>第一次编译pdf</figcaption></figure><ol start="3" type="1"><li><p>快捷键编译 <code>Ctrl+B</code></p></li><li><p>使用<code>Ctrl+B</code>可能出现问题，如下</p></li></ol><figure><img data-src="/2021/03/30/Latex-Sublime-configure/erroFirstBuidPdf.jpg" alt="You MUST set command in your LaTexTools.sublime-settings file before lauching the script builder"><figcaption>You MUST set command in your LaTexTools.sublime-settings file before lauching the script builder</figcaption></figure><p>解决方案,从提示的错误来解释，便是你使用的是 <strong>script builder</strong>脚本编译文件， 因此你需要添加在脚本编译设置处添加如下内容。</p><figure><img data-src="/2021/03/30/Latex-Sublime-configure/SolutionErroFirstBuidPdf.jpg" alt="解决方法"><figcaption>解决方法</figcaption></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;script_commands&quot;:[</span><br><span class="line">    &quot;pdflatex -synctex=1 -interaction=nonstopmode&quot;,</span><br><span class="line">    &quot;bibtex&quot;,</span><br><span class="line">    &quot;pdflatex -synctex=1 -interaction=nonstopmode&quot;,</span><br><span class="line">    <span class="string">&quot;pdflatex -synctex=1 -interaction=nonstopmode&quot;</span></span><br><span class="line">   ]</span><br></pre></td></tr></table></figure><h1 id="配置后的效果演示">配置后的效果演示</h1><h2 id="latex-简单文件模板">latex 简单文件模板</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">\documentclass[UTF-8]&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line">\usepackage&#123;metalogo,mflogo,amsmath,bm&#125;</span><br><span class="line">\usepackage&#123;array&#125;</span><br><span class="line">\usepackage&#123;graphicx&#125; </span><br><span class="line">\usepackage&#123;fancybox&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">\title&#123;模板文件&#125;</span><br><span class="line">\author&#123;author&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\maketitle</span><br><span class="line"></span><br><span class="line">Template Tex file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="操作演示">操作演示</h2><figure><img data-src="/2021/03/30/Latex-Sublime-configure/Demo.gif" alt="Demo"><figcaption>Demo</figcaption></figure><h1 id="更多技巧">更多技巧</h1><p>更多技巧和定制化的设置，请参考官方教程。</p><h1 id="备注">备注</h1><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p><h1 id="主要参考网址">主要参考网址</h1><p><a href="https://latextools.readthedocs.io/en/latest/install/">LatexTools</a></p><p><a href="http://www.sublimetext.com/">Sublime</a></p><p><a href="http://www.sublimetext.com/">Imagemagick</a></p>]]></content>
    
    
    <summary type="html">文章主要内容 Sublime editor 配置  latex工作环境搭建，具有公式预览功能。事实上实现公式预览功能是多个软件配合使用的结果(新版本的 Sublime 才有该功能)！同时记录自己所遇见的一些坑，和解决的方法！主要针对windows用户，当然linux也行！</summary>
    
    
    
    <category term="-tools" scheme="https://seanchristspc.github.io/categories/tools/"/>
    
    
    <category term="-latex -tools -sublime" scheme="https://seanchristspc.github.io/tags/latex-tools-sublime/"/>
    
  </entry>
  
  <entry>
    <title>How to write an Academic Research Paper</title>
    <link href="https://seanchristspc.github.io/2021/03/12/How-to-write-an-Academic-Research-Paper/"/>
    <id>https://seanchristspc.github.io/2021/03/12/How-to-write-an-Academic-Research-Paper/</id>
    <published>2021-03-12T11:58:32.000Z</published>
    <updated>2021-03-12T11:58:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="how-to-write-an-academic-research-paper">How to write an Academic Research Paper?</h1><h2 id="background">BackGround</h2><p>听该讲座大概已经有接近四个月了，由于本人比较懒，加上今天头脑发热想把罗教授分享的学术经验，写成博客的形式方便自己查阅，也方便其他人浏览。 罗教授求学于剑桥大学，详细介绍请点击 <a href="http://ggglxy.scu.edu.cn/index.php?c=article&amp;id=1269">罗嘉陵</a>。</p><p>讲座时间： 2020年11月27日</p><p>地点：四川大学公共管理学院306</p><p>主题：How to write an Academic Research Paper</p><hr><h2 id="main-notes">Main Notes</h2><h3 id="how-to-write-an-academic-research-papar">How to write an Academic Research Papar?</h3><ol type="1"><li><p>Raise a good question</p><p>argument, central question</p><p>these works provide us with the most basic questions that continue to guide our field. --Steven Smith</p></li><li><p>Critical thinking</p><p>writing is a way to think...</p><p>powerful thought allow one to write readably... (Charles Baudelaire)</p></li><li><p>Reading intensively and extensively</p><p>Most of the good writers are good readers</p><p>families yourself with your research area</p></li><li><p>Being interdisciplinary</p><p>high rate of HIV-AIDS in Sichuan</p></li><li><p>Languages</p><p>multilingual</p></li><li><p>Writing skills</p><p>《The Element of Style》Book</p></li><li><p>Practice, patient,stay motivated</p><p>Phd</p></li><li><p>Some tips</p><p>A. Procrastination and time management</p><pre><code> action emotional and psychological stop being a perfectionist(*)</code></pre><p>B. Creating a productive daily routine</p><pre><code> how many words a day ; reading in the morning &amp; writing in the afternoon; writing/reading no more than 6 hours per day take regular breaks</code></pre><p>C. peer support</p><p>D. change of scene</p><pre><code> writing process can be painful ... resistance, struggle..but rewarding</code></pre></li><li><p>Journal</p><p>Jstor; Wily</p></li></ol><hr><h2 id="final">Final</h2><p>听社会学教授的讲座还是挺不错的！！！</p>]]></content>
    
    
    <summary type="html">记录2020年11月27日在公共管理学院306室，听罗嘉陵教授关于“如何写作学术研究论文”讲座的笔记。由于罗教授过去长期在国外做研究，故该写作方法更适用于英文论文写作。</summary>
    
    
    
    <category term="-lecture" scheme="https://seanchristspc.github.io/categories/lecture/"/>
    
    
    <category term="-paper" scheme="https://seanchristspc.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title>Matlab Live Editor 编辑器简单使用</title>
    <link href="https://seanchristspc.github.io/2021/02/02/Matlab-Live-Editor-Introduction/"/>
    <id>https://seanchristspc.github.io/2021/02/02/Matlab-Live-Editor-Introduction/</id>
    <published>2021-02-02T14:21:13.000Z</published>
    <updated>2021-02-02T14:21:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matlab-live-editor-基本介绍">Matlab Live Editor 基本介绍</h1><p>Matlab <a href="https://www.mathworks.com/products/matlab/live-editor.html">Live Editor</a> 是 matlab R2016a 引入的新matlab实时编辑器，也就是说 <strong>Matlab R2016a</strong>的版本都可以使用live editor。官方给出你可以用 R2014b,R2015a和R2015b打开live script. 使用live editor最好使用高版本的Matlab。我用的R2017b是基本没有问题的。</p><p>下面是matlab官方给的 live script 解释。翻译一下：live script可以把代码和代码运行的结果保存在一个文件，更强大的功能可以处理文本格式，可以插入公式、插入图片添加超链接等。简单的说更像一个笔记本，功能更强大，使用更方便，比以前的m文件方便多了。个人使用也感受到m文件在各个平台存在中文乱码问题，但是live script不存在中文乱码问题。更多live editor技巧和功能请继续阅读下文。</p><blockquote><p>you can create live scripts that show output together with the code that produced it. Add formatted text, equations, images, and hyperlinks to enhance your narrative, and share the live script with others as an interactive document.</p></blockquote><hr><p><span class="math inline">\(E=mc^2\)</span></p><h1 id="matlab-live-editor-基本使用">Matlab Live Editor 基本使用</h1><h2 id="创建-live-script">创建 live script</h2><p>创建live script文件有两种方法，一种是鼠标点点点，另一种当然是键盘敲敲敲。</p><ol type="1"><li>鼠标点点点方法<ul><li>首先点击菜单栏 <strong>HOME</strong>,然后在matlab左上角点击 <strong>New Live Script</strong></li><li>首先点击菜单栏 <strong>HOME</strong>,也可以点击 <strong>New</strong>, 下拉菜单选择 <strong>Live Script</strong>。</li></ul><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif" alt="点点点创建live script"><figcaption>点点点创建live script</figcaption></figure></li><li><p>键盘敲敲敲方法 在matlab的Command窗口输入命令<code>edit filename.mlx</code></p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif" alt="键盘敲敲敲方法"><figcaption>键盘敲敲敲方法</figcaption></figure></li></ol><h2 id="live-editor-简单使用">Live Editor 简单使用</h2><ol type="1"><li><p>live Editor使用演示, 请看gif图，编程使用和m文件基本相同，主要有自动补全功能，可以防止自己输入代码出错。</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif" alt="Live Editor 演示"><figcaption>Live Editor 演示</figcaption></figure></li><li><p>两种显示代码运行结果的方式</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/show_result_live_editor.gif" alt="显示运行结果"><figcaption>显示运行结果</figcaption></figure></li><li><p>运行代码 可以点击 <strong>Run All</strong> 该mlx 文件的代码全部运行。也可以仅仅运行当前节的代码，点击 <strong>Run Section</strong>,运行当前节的代码，可以点击单击live editor左侧边栏。</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/run_code_live_editor.gif" alt="运行代码"><figcaption>运行代码</figcaption></figure></li><li><p>代码分节 上面讲了代码的分节运行，那么怎么分节呢？ 可以点击Live editor <strong>Section Break</strong>, 或者快捷键<code>Ctrl+Alt+Enter</code>,解放你的鼠标！</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/break_section_live_editor.gif" alt="分节操作"><figcaption>分节操作</figcaption></figure></li><li><p>运行图片放大</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif" alt="放大作图"><figcaption>放大作图</figcaption></figure></li><li><p>插入文本 live editor可以插入文本，并有一定的格式化功能，可以把matlab代码写成文档的形式。首先你要切换到文本模式，当然可以鼠标点点点，也可以快捷键<code>Alt+Enter</code>,可以再按一次快捷键切换到code模式。</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif" alt="切换到文本模式"><figcaption>切换到文本模式</figcaption></figure><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/change_code_live_editor.gif" alt="切换到code模式"><figcaption>切换到code模式</figcaption></figure></li><li><p>文本格式化 live editor文泵格式化的功能是有限的，不像 MS word 功能强大，但是基本满足需求。还是值得使用的。可以用鼠标点点点实现格式化，我更偏爱用快捷键方式，速度更快。只要你把鼠标悬浮在每个功能上面，就会自动显示对应功能快捷键。下图演示基本的文本操作。</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/text_format_live_editor.gif" alt="文本格式化操作演示"><figcaption>文本格式化操作演示</figcaption></figure></li><li><p>插入图片和超链接 Matlab live editor 插入图片和超链接十分方便，简单。 首先在matlab菜单栏选择 <strong>INSERT</strong>, 然后点击 <strong>Image</strong> <strong>Hyperlink</strong></p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif" alt="插入图片和超链接"><figcaption>插入图片和超链接</figcaption></figure></li><li><p>插入公式 插入公式是一个特别方便的功能，尤其是支持Latex公式，且可以实时预览公式。快捷键插入公式可以提高你的编辑效率，比如<code>Ctrl+ALt+G</code>,Latex模式的公式输入。</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif" alt="插入公式"><figcaption>插入公式</figcaption></figure></li><li><p>清除显示结果 有时可能结果出错，想清除live script运行结果。操作如下。 <img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif" alt="清楚结果"></p></li><li><p>保存为其他文件 你可以把mlx文件另存为m文件，也可以保存为pdf文件等等。最舒适的pdf文件，可以分享给其他人。pdf文件基本不存在格式问题，具有较好的格式兼容性。 <img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/save_as_live_editor.gif" alt="保存为其他文件"></p></li></ol><h1 id="更多技巧">更多技巧</h1><p>更多使用技巧可以使用 <code>doc live editor</code>来查找！ 相当有用，以上内容全部通过这个帮助文档学习！</p><figure><img data-src="/2021/02/02/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif" alt="获取更多内容"><figcaption>获取更多内容</figcaption></figure>]]></content>
    
    
    <summary type="html">本文对matlab自带的Live Editor 编辑器使用做简单介绍！ 以及自己的一些使用习惯！</summary>
    
    
    
    <category term="matlab" scheme="https://seanchristspc.github.io/categories/matlab/"/>
    
    
    <category term="matlab live editor" scheme="https://seanchristspc.github.io/tags/matlab-live-editor/"/>
    
  </entry>
  
  <entry>
    <title>linux简单介绍</title>
    <link href="https://seanchristspc.github.io/2018/03/19/Linux_Introduction/"/>
    <id>https://seanchristspc.github.io/2018/03/19/Linux_Introduction/</id>
    <published>2018-03-18T21:40:50.000Z</published>
    <updated>2021-06-30T10:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux">linux</h1><p>Linux是一套免费使用和自由传播的<a href="https://baike.baidu.com/item/%E7%B1%BBUnix">类Unix</a><a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192">操作系统</a>，是一个基于<a href="https://baike.baidu.com/item/POSIX">POSIX</a>和<a href="https://baike.baidu.com/item/UNIX">UNIX</a>的多用户、<a href="https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1">多任务</a>、支持<a href="https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B">多线程</a>和多<a href="https://baike.baidu.com/item/CPU">CPU</a>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持<a href="https://baike.baidu.com/item/32%E4%BD%8D/5812218">32位</a>和<a href="https://baike.baidu.com/item/64%E4%BD%8D">64位</a>硬件。Linux继承了<a href="https://baike.baidu.com/item/Unix">Unix</a>以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><p>Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了<a href="https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8">Linux内核</a>。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p><hr><h2 id="linux简介">linux简介</h2><p>linux的核心是由 <strong>Linus Torvads</strong> 在1991年的时候开发出来的。</p><p>讲linux的必须先讲它的大哥<strong>Unix</strong></p><p><strong>Unix</strong>是以高阶的C语言在贝尔实验室(AT&amp;T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。后来由于AT&amp;T由于商业的考虑，于是将Unix的版权回收。特别提到 <strong>不可对学生提供源代码</strong>。版权的收回，影响到学校教Unix源代码的教授！Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。</p><p>1984年的GNU计划。（Richard Mathew Stallman 史托曼） 软件分享 GCC(GNU C Complier )</p><p>后来就是Linus Torvads 在Minix的基础上编写了linux。于1991年发布。</p><p>大概就讲这么多吧！</p><hr><h2 id="linux-发行版本">linux 发行版本</h2><p>自己看图吧！</p><figure><img data-src="/2018/03/19/Linux_Introduction/Linux_Distribution.jpg" alt="linux 发行版本"><figcaption>linux 发行版本</figcaption></figure><p>如果看的不清楚可以去这个网站 <a href="http://futurist.se/gldt/">linux发行图</a></p><p><a href="http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg">linux发行图</a></p><p>是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。</p><p>友情链接</p><p><a href="https://www.redhat.com">Redhat</a> <a href="https://www.centos.org/">Centos</a> <a href="https://www.debian.org/">Debian</a> <a href="https://www.ubuntu.com">ubuntu</a> <a href="https://download.suse.com">SUSE</a> <a href="https://www.opensuse.org/">openSUE</a></p><p>自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！</p><hr><h2 id="linux安装">linux安装</h2><p>我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。</p><h3 id="首先去官网下载ubuntu镜像">首先去官网下载ubuntu镜像</h3><p><a href="https://www.ubuntu.com/download/desktop">Ubuntu下载地址</a></p><p><a href="https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0">Ubuntu安装教程</a></p><h3 id="提醒要点">提醒要点</h3><p>1.要使用刻录盘刻录镜像。刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.记得自己分一个干净的盘来安装linux系统。 2.安装要注意分区表格式。 3.系统只能安装在主分区不能安装在逻辑分区。</p><hr><h2 id="linux简单的使用">linux简单的使用</h2><p>linux不同版本的linux命令有一些不同的地方，但是大部分是相同的。</p><p>下面是Ubuntu系统使用的命令。</p><p>希望你们在学习linux时<strong>多敲命令</strong>！如同windows上的<strong>cmd</strong></p><h3 id="常见命令使用">常见命令使用</h3><p>打开终端</p><p>鼠标右击 -&gt; 选择 <code>Open Terminal</code></p><p>如下图</p><figure><img data-src="/2018/03/19/Linux_Introduction/terminal.png" alt="Terminal"><figcaption>Terminal</figcaption></figure><p>首先讲一个特别有用的命令 <strong>man</strong>这个命令是挺厉害的！比如想知道 <code>ls</code>命令怎么用？可以使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><figure><img data-src="/2018/03/19/Linux_Introduction/man_ls.gif" alt="man ls"><figcaption>man ls</figcaption></figure><p>最后回车键 <code>Enter</code>键 执行命令</p><p>按回车或移动鼠标，可以看<code>ls</code>的帮助文档。</p><p>不需要阅读帮助文档，看上面截屏的提示。按 <code>q</code> 建退出帮助文档</p><p>当然还有一种查看帮助文档的命令: <code>command --help</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><figure><img data-src="/2018/03/19/Linux_Introduction/ls_help.gif" alt="ls help"><figcaption>ls help</figcaption></figure><p><strong>记住命令之间一定要有空格！大小写也很重要！</strong></p><p>关机命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure><p>重启命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>切换目录的命令 <code>cd</code> 显示当前目录下文件命令 <code>ls</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/sean/</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><figure><img data-src="/2018/03/19/Linux_Introduction/cd_ls.gif" alt="cd ls"><figcaption>cd ls</figcaption></figure><p>如果输入 <code>ls -al</code> 就会显示更多信息</p><figure><img data-src="/2018/03/19/Linux_Introduction/ls_al.gif" alt="ls -la"><figcaption>ls -la</figcaption></figure><p><code>top</code>命令就如同windows上的资源管理器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><figure><img data-src="/2018/03/19/Linux_Introduction/top.gif" alt="top"><figcaption>top</figcaption></figure><p><code>ctr + z</code>停止这个命令</p><h3 id="安装软件">安装软件</h3><p>各个linux发行版本的安装软件的方法不一样。ubuntu有一个应用商店.</p><p>看图 <img data-src="/2018/03/19/Linux_Introduction/softwareStore.png" alt="software Store"></p><p>还有其他安装软件的方法，就是使用命令行。</p><p><code>sudo apt install softname</code></p><p>例如安装 <code>vim</code> 文本编辑软件。挺好用的。</p><p>Ubuntu不自带<code>vim</code>,需要额外安装。Centos自带vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install vim</span><br></pre></td></tr></table></figure><figure><img data-src="/2018/03/19/Linux_Introduction/apt_install_vim.gif" alt="sudo apt install"><figcaption>sudo apt install</figcaption></figure><p>会叫你输入密码：</p><p>你输入时不会显示 <code>*******</code>,输入完成回车，OK！</p><p>我的是已经安装了。你们安装时一路回车就安装了。</p><p><strong>vim简单使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim vim.txt</span><br></pre></td></tr></table></figure><p>按 <code>a</code>,就可以写文本了。 输入 <code>:w</code> 保存 输入 <code>:q</code> 退出</p><figure><img data-src="/2018/03/19/Linux_Introduction/vim_txt.gif" alt="vim"><figcaption>vim</figcaption></figure><p>vim 官方教程，可以在终端输入<code>vimtutor</code> 或者 在终端输入<code>vim</code>,然后输入<code>:h vimtutor</code>。</p><p>vim 其他学习网站 <a href="http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html">viemu</a></p><p>再贴一点vim的使用表，没事可以看看。多用就会了。</p><figure><img data-src="/2018/03/19/Linux_Introduction/vimtutor.gif" alt="vimtutor"><figcaption>vimtutor</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-1.svg" alt="basic vim"><figcaption>basic vim</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-2.svg" alt="operator and repetition"><figcaption>operator and repetition</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-3.svg" alt="yank and past"><figcaption>yank and past</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-4.svg" alt="searching"><figcaption>searching</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-5.svg" alt="marks and macros"><figcaption>marks and macros</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-6.svg" alt="various motions"><figcaption>various motions</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-tutorial/vi-vim-tutorial-7.svg" alt="various commands"><figcaption>various commands</figcaption></figure><figure><img data-src="/2018/03/19/Linux_Introduction/vi-vim-cheat-sheet.gif" alt="vim grahical cheat sheet"><figcaption>vim grahical cheat sheet</figcaption></figure><p>Ubuntu 是用<code>apt</code> 或 <code>apt-get</code> 命令安装软件，而Centos使用<code>yum</code>安装软件。</p><p><strong>源代码安装</strong> 还有一种安装软件的方法就是源代码编译安装。使用 <code>make</code>命令。这里我就不多说了。因为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！可能各个软件版本所需要的库有所不同，同时库之间可能有冲突，一个库依赖另一个库，可能你需要的就不是单纯安装所提示的库，而是一系列库，简单的说就是 <strong>库之间存在依赖</strong>。哈哈！如果爱折腾，倒是可以折腾一下。当然也有一些软件源码安装比较容易，前提是你已具备所需要的库环境。对于需要使用最新版本的软件，尝试新鲜功能，还是需要使用源码安装。</p><h3 id="一些trick命令">一些trick命令</h3><h4 id="终端获取天气">终端获取天气</h4><p>天气的获取当然可以用网页，或天气软件获得天气，在终端依旧可以获得天气。 首先你需要<code>curl</code>命令。通过前面讲的命令<code>sudo apt install curl</code>安装。 然后使用 <code>curl wttr.in/beijing</code>, 你也可以试试 <code>curl wttr.in/chengdu?format=2</code>。</p><figure><img data-src="/2018/03/19/Linux_Introduction/weather.gif" alt="命令行获取天气"><figcaption>命令行获取天气</figcaption></figure><h4 id="获取系统信息">获取系统信息</h4><p>当前我使用的已经不是ubuntu了，所以截取的gif图片显示信息不是ubuntu。 但是ubuntu依旧适用。 安装软件命令 <code>sudo apt install screenfetch</code>, 然后直接运行 <code>screenfetch</code>就可以得到如下信息。</p><figure><img data-src="/2018/03/19/Linux_Introduction/screenfetch.gif" alt="screenfetch"><figcaption>screenfetch</figcaption></figure><h1 id="备注">备注</h1><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p>]]></content>
    
    
    <summary type="html">本文对Linux操作系统进行了简单介绍。简要的讲述了Ubuntu的安装，以及一些常用的linux命令的使用，简述了如何在linux上安装软件，简单使用了vim编辑器。</summary>
    
    
    
    <category term="linux" scheme="https://seanchristspc.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://seanchristspc.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>matlab函数类型</title>
    <link href="https://seanchristspc.github.io/2018/02/26/matlab_function_type/"/>
    <id>https://seanchristspc.github.io/2018/02/26/matlab_function_type/</id>
    <published>2018-02-25T20:47:45.000Z</published>
    <updated>2018-02-25T20:47:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matlab-函数类型"><a href="#matlab-函数类型" class="headerlink" title="matlab 函数类型"></a>matlab 函数类型</h1><h2 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h2><p>主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。</p><h2 id="子函数"><a href="#子函数" class="headerlink" title="子函数"></a>子函数</h2><p>主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也<br>采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函<br>数的先后顺序和调用的先后顺序无关。<br>在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，<br>可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。</p><h2 id="嵌套函数"><a href="#嵌套函数" class="headerlink" title="嵌套函数"></a>嵌套函数</h2><p>在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。<br>每个用function定义的函数都必须用end语句结束。<br>嵌套函数也有自己的工作区。注意变量作用范围。</p><h2 id="私有函数"><a href="#私有函数" class="headerlink" title="私有函数"></a>私有函数</h2><p>私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。<br>函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。<br><strong>私有函数只能被其父目录内的脚本或函数调用。</strong></p><h2 id="重载函数"><a href="#重载函数" class="headerlink" title="重载函数"></a>重载函数</h2><p>在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。</p><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。<br>创建匿名函数的标准格式</p><blockquote><p> fhandle=@(arglist) expression</p></blockquote><p>其中，<code>expression</code>通常为一个简单的MATLAB变量表达式实现函数功能。<br><code>arglist</code> 为此匿名函数的输入参数列表。</p><h2 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h2><p>内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。<br>调用格式：</p><blockquote><p> funName=inline(expr)</p></blockquote><p><code>funName</code>为所定义的内联函数名称<br><code>expr</code>为表达式对应的字符串。</p><h2 id="函数句柄"><a href="#函数句柄" class="headerlink" title="函数句柄"></a>函数句柄</h2><p>函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 **functions()**来获取信息。<br>创建函数句柄使用 <code>@</code> ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。</p>]]></content>
    
    
    <summary type="html">本文主要讲了matlab函数的类型，分别简要讲述了 主函数、子函数、嵌套函数、私有函数、重载函数、匿名函数、内联函数和函数句柄。</summary>
    
    
    
    <category term="matlab" scheme="https://seanchristspc.github.io/categories/matlab/"/>
    
    
    <category term="function" scheme="https://seanchristspc.github.io/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>JSP自定义标签</title>
    <link href="https://seanchristspc.github.io/2018/02/17/JSP%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/"/>
    <id>https://seanchristspc.github.io/2018/02/17/JSP%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE/</id>
    <published>2018-02-16T20:43:51.000Z</published>
    <updated>2018-02-16T20:43:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSP自定义标签"><a href="#JSP自定义标签" class="headerlink" title="JSP自定义标签"></a>JSP自定义标签</h1><p>自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承<strong>SimpleTag</strong> 实现的标签管理器。<br>简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。</p><blockquote><p>初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。                    </p></blockquote><p><strong>JSP规范的作者在JSP规范的7.15一节写到</strong></p><p><strong>SimpleTag</strong>接口中用于标签触发的方法只有一个<strong>doTag</strong>，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。</p><p><code>javax.servlet.jsp.targext</code>包中包含了一个SimpleTag的基础类<br><strong>SimpleTagSupport</strong>提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。<br><strong>SimpleTagSupport</strong>类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。</p><hr><h2 id="SimpleTag示例"><a href="#SimpleTag示例" class="headerlink" title="SimpleTag示例"></a>SimpleTag示例</h2><h3 id="编写标签处理器"><a href="#编写标签处理器" class="headerlink" title="编写标签处理器"></a>编写标签处理器</h3><h4 id="MyFirstTag类"><a href="#MyFirstTag类" class="headerlink" title="MyFirstTag类"></a>MyFirstTag类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFirstTag</span> <span class="keyword">implements</span> <span class="title">SimpleTag</span></span>&#123;</span><br><span class="line">JspContext jspContext;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;doTag&quot;</span>);</span><br><span class="line">jspContext.getOut().print(<span class="string">&quot;This is my first tag.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> JspTag <span class="title">getParent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;getParent&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJspBody</span><span class="params">(JspFragment body)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;setJspBody&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJspContext</span><span class="params">(JspContext jspContext)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;setJspContext&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.jspContext=jspContext;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParent</span><span class="params">(JspTag parent)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;setParent&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="注册标签"><a href="#注册标签" class="headerlink" title="注册标签"></a>注册标签</h3><h4 id="mytags-tld"><a href="#mytags-tld" class="headerlink" title="mytags.tld"></a>mytags.tld</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">&quot;2.1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">Simple tag examples</span><br><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>My First Taglib Example<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>firstTag<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.MyFirstTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>name节点用于说明这个标签名称；tag-class则用于指出标签处理器的<strong>完整类名</strong>。<br>当然一个标签库中可以定义多个标签。</p><h3 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class="string">&quot;easy&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">&quot;://&quot;</span>+request.getServerName()+<span class="string">&quot;:&quot;</span>+request.getServerPort()+path+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;firstTagTest&lt;/title&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">   Hello!</span><br><span class="line">   &lt;br&gt;</span><br><span class="line">   &lt;easy:firstTag&gt;&lt;/easy:firstTag&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/firstTagTest.jsp</code></p><hr><h2 id="处理属性"><a href="#处理属性" class="headerlink" title="处理属性"></a>处理属性</h2><p>实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。</p><h3 id="DataFrmatterTag"><a href="#DataFrmatterTag" class="headerlink" title="DataFrmatterTag"></a>DataFrmatterTag</h3><p>继承SimpleTagSupport</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataFrmatterTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String header;</span><br><span class="line"><span class="keyword">private</span> String items;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getHeader</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeader</span><span class="params">(String header)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.header = header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getItems</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> items;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(String items)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.items = items;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> IOException,JspException</span>&#123;</span><br><span class="line">JspContext jspContext=getJspContext();</span><br><span class="line">JspWriter out=jspContext.getOut();</span><br><span class="line"></span><br><span class="line">out.print(<span class="string">&quot;&lt;table style=&#x27;border:1px solid green&#x27;&gt;\n&quot;</span></span><br><span class="line">+<span class="string">&quot;&lt;tr&gt;&lt;td&gt;&lt;span style=&#x27;font-weight:bold&#x27;&gt;&quot;</span></span><br><span class="line">+header+<span class="string">&quot;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>);</span><br><span class="line">StringTokenizer tokenizer=<span class="keyword">new</span> StringTokenizer(items,<span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(tokenizer.hasMoreTokens())&#123;</span><br><span class="line">String token=tokenizer.nextToken();</span><br><span class="line">out.print(<span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+token+<span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">out.print(<span class="string">&quot;&lt;/table&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>doTag()</code> 首先通过<code>getJspContext()</code>获取通过JSP容器传入的 <code>JspContext</code>对象<br><code>JspContext jspContext=getJspContext();</code><br>接着，通过<code>JspContext</code>实例的<code>getOut()</code>获取<code>JspWriter</code>对象<br><code>JspWriter out=jspContext.getOut();</code><br>然后，<code>doTag()</code>方法使用<code>StringTokenizer</code>解析<code>items</code>属性值。</p><p>###注册DataFrmatter标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dataFormatter<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.DataFrmatterTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>header<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>items<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="dataFormatterTagTest-jsp"><a href="#dataFormatterTagTest-jsp" class="headerlink" title="dataFormatterTagTest.jsp"></a>dataFormatterTagTest.jsp</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class="string">&quot;easy&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">&quot;://&quot;</span>+request.getServerName()+<span class="string">&quot;:&quot;</span>+request.getServerPort()+path+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP &#x27;dataFormatterTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class="line">&lt;title&gt;Testing DataFormatterTag&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;easy:dataFormatter items=<span class="string">&quot;Alabama,Alaska,Georgia,Florida&quot;</span> header=<span class="string">&quot;states&quot;</span>/&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;easy:dataFormatter header=<span class="string">&quot;Countries&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:attribute name=<span class="string">&quot;items&quot;</span>&gt;</span><br><span class="line">    US,UK,Canada,Korea</span><br><span class="line">    &lt;/jsp:attribute&gt;</span><br><span class="line">    &lt;/easy:dataFormatter&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="访问标签内容"><a href="#访问标签内容" class="headerlink" title="访问标签内容"></a>访问标签内容</h2><h3 id="SelectElementTag类"><a href="#SelectElementTag类" class="headerlink" title="SelectElementTag类"></a>SelectElementTag类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectElementTag</span> <span class="keyword">extends</span> <span class="title">SimpleTagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String[] countries =&#123;<span class="string">&quot;China&quot;</span>,<span class="string">&quot;Brazil&quot;</span>,<span class="string">&quot;American&quot;</span>,<span class="string">&quot;Japan&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doTag</span><span class="params">()</span> <span class="keyword">throws</span> IOException,JspException</span>&#123;</span><br><span class="line">JspContext jspContext=getJspContext();</span><br><span class="line">JspWriter out=jspContext.getOut();</span><br><span class="line">out.print(<span class="string">&quot;&lt;select&gt;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;countries.length;i++)&#123;</span><br><span class="line">getJspContext().setAttribute(<span class="string">&quot;value&quot;</span>, countries[i]);</span><br><span class="line">getJspContext().setAttribute(<span class="string">&quot;text&quot;</span>, countries[i]);</span><br><span class="line">getJspBody().invoke(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">out.print(<span class="string">&quot;&lt;/select&gt;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册selectElementTag"><a href="#注册selectElementTag" class="headerlink" title="注册selectElementTag"></a>注册selectElementTag</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">       <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>select<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>com.sean.SelectElementTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>scriptless<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="selectElementTagTest-jsp"><a href="#selectElementTagTest-jsp" class="headerlink" title="selectElementTagTest.jsp"></a>selectElementTagTest.jsp</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class="string">&quot;easy&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">&quot;://&quot;</span>+request.getServerName()+<span class="string">&quot;:&quot;</span>+request.getServerPort()+path+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;My JSP &#x27;selectElementTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;easy:select&gt;</span><br><span class="line">    &lt;option value=&quot;$&#123;value&#125;&quot;&gt;$&#123;text&#125;&lt;/option&gt;</span><br><span class="line">    &lt;/easy:select&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/selectElementTagTest.jsp</code></p><h2 id="编写EL函数"><a href="#编写EL函数" class="headerlink" title="编写EL函数"></a>编写EL函数</h2><p>编写EL函数步骤<br>1.创建一个包含<strong>静态方法</strong>的public类。每个类的静态方法表示一个EL函数。<strong>这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类</strong><br>2.用function节点在标签库描述器注册函数</p><table><thead><tr><th>节点</th><th>说明</th></tr></thead><tbody><tr><td>description</td><td>可选，标签说明</td></tr><tr><td>display-name</td><td>在xml工具中显示缩写名字</td></tr><tr><td>icon</td><td>可选，在xml工具中使用icon节点</td></tr><tr><td>name</td><td>函数的唯一名字</td></tr><tr><td>function-class</td><td>该函数对应实现的java类的全名</td></tr><tr><td>function-signature</td><td>该函数对应实现的java静态方法</td></tr><tr><td>example</td><td>可选，使用该函数的实例说明</td></tr><tr><td>function-extension</td><td>可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节</td></tr></tbody></table><p>使用该函数，须将<code>taglib</code>指令中的<code>uri</code>属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：<br><code>$&#123;prefix:functionName(parameterList)&#125;</code></p><h3 id="MyFunction"><a href="#MyFunction" class="headerlink" title="MyFunction"></a>MyFunction</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFunction</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">reverseString</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line"><span class="comment">//字符串的反转</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> StringBuffer(s).reverse().toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="functiontags-tld"><a href="#functiontags-tld" class="headerlink" title="functiontags.tld"></a>functiontags.tld</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">&quot;2.1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Function tag example<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://example.com/taglib/function<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Reverse a String<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>reverseString<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function-class</span>&gt;</span>com.sean.function.MyFunction<span class="tag">&lt;/<span class="name">function-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">function-signature</span>&gt;</span>java.lang.String reverseString(java.lang.String)<span class="tag">&lt;/<span class="name">function-signature</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用El"><a href="#使用El" class="headerlink" title="使用El"></a>使用El</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://example.com/taglib/function&quot;</span> prefix=<span class="string">&quot;f&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">&quot;://&quot;</span>+request.getServerName()+<span class="string">&quot;:&quot;</span>+request.getServerPort()+path+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;    </span><br><span class="line">    &lt;title&gt;My JSP &#x27;functionTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">   $&#123;f:reverseString(<span class="string">&quot;Hello, World&quot;</span>) &#125;</span><br><span class="line">   &lt;br&gt;</span><br><span class="line">   $&#123;f:reverseString(<span class="string">&quot;Welcome&quot;</span>)&#125;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="发布自定义标签"><a href="#发布自定义标签" class="headerlink" title="发布自定义标签"></a>发布自定义标签</h2><p>在functiontags.tld增加<code>uri</code>节点<br><code>&lt;uri&gt;http://example.com/taglib/function&lt;/uri&gt;</code></p><p>在jsp页面添加<br><code>&lt;%@ taglib uri=&quot;http://example.com/taglib/function&quot; prefix=&quot;f&quot; %&gt;</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。</p>]]></content>
    
    
    <summary type="html">本文简要叙述了JSP自定义标签的实现。</summary>
    
    
    
    <category term="Java" scheme="https://seanchristspc.github.io/categories/Java/"/>
    
    <category term="JSP" scheme="https://seanchristspc.github.io/categories/Java/JSP/"/>
    
    
    <category term="tags" scheme="https://seanchristspc.github.io/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>Design Pattern by Java</title>
    <link href="https://seanchristspc.github.io/2018/02/14/Design-Pattern-Java/"/>
    <id>https://seanchristspc.github.io/2018/02/14/Design-Pattern-Java/</id>
    <published>2018-02-13T20:39:35.000Z</published>
    <updated>2021-07-19T17:14:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式">设计模式</h1><p>本篇的设计模式记录，主要是参考书籍 《图解设计模式》做的学习记录笔记！ 回想一下，那都是多年以前的事了。最开始每个设计模式 用一片博客记录。最近，突然发现这样有点分散，想了一想，干脆直接整合到一篇博文吧。有点长，但是有目录可以快速定位到具体的设计 模式，也算方便。</p><hr><h2 id="facade模式">Facade模式</h2><p>简单窗口  使用Facade模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。</p><hr><h3 id="演示程序类图">演示程序类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Facade_Design_Pattern.png" alt="Facade模式"><figcaption>Facade模式</figcaption></figure><hr><h3 id="代码">代码</h3><h4 id="database类">Database类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Database</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Database</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//防止外部new出Database对象，所以声明为private</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Properties <span class="title">getProperties</span><span class="params">(String dbname)</span></span>&#123;</span><br><span class="line">String filename=dbname+<span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">Properties prop=<span class="keyword">new</span> Properties();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">prop.load(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line"></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> prop;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="htmlwriter类">HtmlWriter类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HtmlWriter</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Writer writer;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HtmlWriter</span><span class="params">(Writer writer)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.writer=writer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">title</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出标题</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">&quot;&lt;html&gt;&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;head&gt;&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;title&gt;&quot;</span>+title+<span class="string">&quot;&lt;/title&gt;&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;body&gt;\n&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;h1&gt;&quot;</span>+title+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paragraph</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出段落</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">&quot;&lt;p&gt;&quot;</span>+msg+<span class="string">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">link</span><span class="params">(String href,String caption)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出超链接</span></span><br><span class="line">paragraph(<span class="string">&quot;&lt;a href=\&quot;&quot;</span> +href +<span class="string">&quot;\&quot;&gt;&quot;</span>+caption+<span class="string">&quot;&lt;/a&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailto</span><span class="params">(String mailaddr,String username)</span></span>&#123;</span><br><span class="line"><span class="comment">//输出邮件地址</span></span><br><span class="line">link(<span class="string">&quot;mailto:&quot;</span>+mailaddr,username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//结束输出html</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">writer.write(<span class="string">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class="line">writer.write(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>);</span><br><span class="line">writer.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="pagemaker类">PageMaker类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade.pagemaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageMaker</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">PageMaker</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//防止外部new出PageMaker实例，所以声明为private方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">makeWelcomePage</span><span class="params">(String mailaddr,String filename)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Properties mailprop=Database.getProperties(<span class="string">&quot;maildata&quot;</span>);</span><br><span class="line">String username=mailprop.getProperty(mailaddr);</span><br><span class="line">HtmlWriter writer=<span class="keyword">new</span> HtmlWriter(<span class="keyword">new</span> FileWriter(<span class="string">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class="line">writer.title(<span class="string">&quot;Welcome to &quot;</span>+username+<span class="string">&quot;&#x27;s page!&quot;</span>);</span><br><span class="line">writer.paragraph(username+<span class="string">&quot;欢迎到来&quot;</span>+username+<span class="string">&quot;的主页。&quot;</span>);</span><br><span class="line">writer.paragraph(<span class="string">&quot;等你的邮件喔！&quot;</span>);</span><br><span class="line">writer.mailto(mailaddr, username);</span><br><span class="line">writer.close();</span><br><span class="line">System.out.println(filename+<span class="string">&quot;is created for &quot;</span>+mailaddr +<span class="string">&quot; (&quot;</span>+username+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main类">Main类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Facade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Facade.pagemaker.PageMaker;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">PageMaker.makeWelcomePage(<span class="string">&quot;seanchristspc@gmail.com&quot;</span>, <span class="string">&quot;welcome.html&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="要点">要点</h3><h4 id="facade窗口">Facade(窗口)</h4><p>Facade角色向系统外部提供高层接口。在实例程序中由<strong>PageMaker</strong>扮演此角色。</p><h4 id="构成系统的许多其他角色">构成系统的许多其他角色</h4><p>这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 <strong>Database</strong>和<strong>HtmlWriter</strong>扮演其他角色。</p><h4 id="client">Client</h4><p>Client角色负责调用Facade角色</p><hr><h3 id="个人理解">个人理解</h3><p>Facade模式就是把复杂的系统变<strong>看起来</strong>简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。 该模式还是挺好理解的，代码也不复杂。</p><hr><h2 id="mediator模式">Mediator模式</h2><p>只有一个仲裁者  要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。</p><hr><h3 id="类和接口表">类和接口表</h3><table><thead><tr class="header"><th>名字</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>Mediator</td><td>定义 &quot;仲裁者&quot; 的接口(API)的接口</td></tr><tr class="even"><td>Colleague</td><td>定义&quot;组员&quot;的接口(API)的接口</td></tr><tr class="odd"><td>ColleagueButton</td><td>表示按钮的类。它实现Colleague接口</td></tr><tr class="even"><td>ColleagueTextField</td><td>表示文本输入框的类。它实现了Colleague接口</td></tr><tr class="odd"><td>ColleagueCheckbox</td><td>表示勾选框的类。实现了Colleague接口</td></tr><tr class="even"><td>LoginFrame</td><td>表示登录对话框类。实现了Mediator接口</td></tr><tr class="odd"><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h3 id="程序的类图">程序的类图</h3><p>有点复杂喔！ 不急。慢慢看！！ <img data-src="/2018/02/14/Design-Pattern-Java/Mediator_Design_Pattern.png" alt="Mediator模式"></p><h3 id="代码-1">代码</h3><h4 id="colleague接口组员接口">Colleague接口(组员接口)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="mediator接口仲裁者接口">Mediator接口(仲裁者接口)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Mediator</span> </span>&#123;</span><br><span class="line"><span class="comment">//生成Mediator要管理的组员.</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">createColleagues</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//被各个Colleague组员调用，让组员向仲裁者进行报告</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">colleagueChanged</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="colleaguebutton具体的组员">ColleagueButton(具体的组员)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.HeadlessException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueButton</span> <span class="keyword">extends</span> <span class="title">Button</span> <span class="keyword">implements</span> <span class="title">Colleague</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueButton</span><span class="params">(String caption)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(caption);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="comment">//保存Mediator</span></span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line"><span class="comment">//Mediator下达启用禁用的指示</span></span><br><span class="line">setEnabled(enabled);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="colleaguecheckbox具体的组员">ColleagueCheckbox(具体的组员)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Checkbox;</span><br><span class="line"><span class="keyword">import</span> java.awt.CheckboxGroup;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ItemListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueCheckbox</span> <span class="keyword">extends</span> <span class="title">Checkbox</span> <span class="keyword">implements</span> <span class="title">Colleague</span>,</span></span><br><span class="line"><span class="class"><span class="title">ItemListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueCheckbox</span><span class="params">(String caption,CheckboxGroup group,<span class="keyword">boolean</span> state)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(caption,group,state);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">itemStateChanged</span><span class="params">(ItemEvent e)</span> </span>&#123;</span><br><span class="line">mediator.colleagueChanged();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">setEnabled(enabled);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="colleaguetextfield具体的组员">ColleagueTextField(具体的组员)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextField;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.TextEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.TextListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColleagueTextField</span> <span class="keyword">extends</span> <span class="title">TextField</span> <span class="keyword">implements</span> <span class="title">Colleague</span>,</span></span><br><span class="line"><span class="class"><span class="title">TextListener</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Mediator mediator;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ColleagueTextField</span><span class="params">(String text,<span class="keyword">int</span> columns)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(text,columns);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">textValueChanged</span><span class="params">(TextEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">//文字发生变化时通知Mediator</span></span><br><span class="line">mediator.colleagueChanged();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMediator</span><span class="params">(Mediator mediator)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.mediator=mediator;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColleagueEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">setEnabled(enabled);</span><br><span class="line">setBackground(enabled ? Color.white : Color.lightGray);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="loginframe具体的仲裁者">LoginFrame(具体的仲裁者)</h4><p>代码有点多加油看看！ <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.CheckboxGroup;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.GridLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Label;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>, <span class="title">Mediator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ColleagueCheckbox checkGuest;</span><br><span class="line"><span class="keyword">private</span> ColleagueCheckbox checkLogin;</span><br><span class="line"><span class="keyword">private</span> ColleagueTextField textUser;</span><br><span class="line"><span class="keyword">private</span> ColleagueTextField textPass;</span><br><span class="line"><span class="keyword">private</span> ColleagueButton buttonOK;</span><br><span class="line"><span class="keyword">private</span> ColleagueButton buttonCancle;</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="comment">//生成并配置各个Colleague后，显示对话框</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginFrame</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line">setBackground(Color.lightGray);</span><br><span class="line"><span class="comment">//使用布局管理器生成4×2窗格</span></span><br><span class="line">setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>,<span class="number">2</span>));</span><br><span class="line"><span class="comment">//生成各个Colleague</span></span><br><span class="line">createColleagues();</span><br><span class="line">add(checkGuest);</span><br><span class="line">add(checkLogin);</span><br><span class="line">add(<span class="keyword">new</span> Label(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">add(textUser);</span><br><span class="line">add(<span class="keyword">new</span> Label(<span class="string">&quot;Password&quot;</span>));</span><br><span class="line">add(textPass);</span><br><span class="line">add(buttonOK);</span><br><span class="line">add(buttonCancle);</span><br><span class="line"><span class="comment">//设置初始的启用/禁用状态</span></span><br><span class="line">colleagueChanged();</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createColleagues</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//生成各个Colleague</span></span><br><span class="line">CheckboxGroup g= <span class="keyword">new</span> CheckboxGroup();</span><br><span class="line">checkGuest = <span class="keyword">new</span> ColleagueCheckbox(<span class="string">&quot;Guest&quot;</span>,g,<span class="keyword">true</span>);</span><br><span class="line">checkLogin = <span class="keyword">new</span> ColleagueCheckbox(<span class="string">&quot;Login&quot;</span>,g,<span class="keyword">false</span>);</span><br><span class="line">textUser = <span class="keyword">new</span> ColleagueTextField(<span class="string">&quot;&quot;</span>,<span class="number">10</span>);</span><br><span class="line">textPass = <span class="keyword">new</span> ColleagueTextField(<span class="string">&quot;&quot;</span>,<span class="number">10</span>);</span><br><span class="line">textPass.setEchoChar(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">buttonOK = <span class="keyword">new</span> ColleagueButton(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">buttonCancle = <span class="keyword">new</span> ColleagueButton(<span class="string">&quot;Cancle&quot;</span>);</span><br><span class="line"><span class="comment">//设置Mediator</span></span><br><span class="line">checkGuest.setMediator(<span class="keyword">this</span>);</span><br><span class="line">checkLogin.setMediator(<span class="keyword">this</span>);</span><br><span class="line">textUser.setMediator(<span class="keyword">this</span>);</span><br><span class="line">textPass.setMediator(<span class="keyword">this</span>);</span><br><span class="line">buttonOK.setMediator(<span class="keyword">this</span>);</span><br><span class="line">buttonCancle.setMediator(<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//设置Listener</span></span><br><span class="line">checkGuest.addItemListener(checkGuest);</span><br><span class="line">checkLogin.addItemListener(checkLogin);</span><br><span class="line">textUser.addTextListener(textUser);</span><br><span class="line">textPass.addTextListener(textPass);</span><br><span class="line">buttonOK.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonCancle.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">colleagueChanged</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(checkGuest.getState())&#123;</span><br><span class="line">textUser.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">textUser.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">userpassChanged();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">userpassChanged</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(textUser.getText().length()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>(textPass.getText().length()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">textPass.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">buttonOK.setColleagueEnabled(<span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">System.out.println(e.toString());</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h4 id="主函数-调用者-客户">主函数 调用者 客户</h4><p>代码比较少！放松！放松！放松！ <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Mediator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">LoginFrame lf=<span class="keyword">new</span> LoginFrame(<span class="string">&quot;Mediator Sample&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="个人理解-1">个人理解</h3><p>Mediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。</p><hr><h2 id="command模式">Command模式</h2><p>命令也是类</p><hr><h3 id="类表">类表</h3><table><thead><tr class="header"><th>包</th><th>类名</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>command</td><td>Command</td><td>表示<strong>命令</strong>的接口</td></tr><tr class="even"><td>command</td><td>MacroCommand</td><td>表示 <strong>由多条命令整合成的命令</strong> 的类</td></tr><tr class="odd"><td>drawer</td><td>DrawCommand</td><td>表示 <strong>绘制一个点的命令</strong> 的类</td></tr><tr class="even"><td>drawer</td><td>Drawable</td><td>表示 <strong>绘制对象</strong> 的接口</td></tr><tr class="odd"><td>drawer</td><td>DrawCanvas</td><td>实现 <strong>绘制对象</strong> 的类</td></tr><tr class="even"><td>无名</td><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h3 id="类图">类图</h3><p>粗略一点的 <img data-src="/2018/02/14/Design-Pattern-Java/Command_Design_Pattern_Simple.png" alt="Command"></p><p>详细一点 <img data-src="/2018/02/14/Design-Pattern-Java/Command_Design_Pattern_Detail.png" alt="Command"></p><h3 id="code">code</h3><h4 id="command">Command</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="macrocommand">MacroCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacroCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Stack commands = <span class="keyword">new</span> Stack();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Iterator it=commands.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">((Command)it.next()).execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">append</span><span class="params">(Command command)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(command != <span class="keyword">this</span>)&#123;</span><br><span class="line">commands.push(command);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除最后一条命令</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">undo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!commands.empty())&#123;</span><br><span class="line">commands.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除所有命令</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">commands.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="drawable">Drawable</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Drawable</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="drawcanvas">DrawCanvas</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Canvas;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.MacroCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DrawCanvas</span> <span class="keyword">extends</span> <span class="title">Canvas</span> <span class="keyword">implements</span> <span class="title">Drawable</span> </span>&#123;</span><br><span class="line"><span class="comment">//颜色</span></span><br><span class="line"><span class="keyword">private</span> Color color =Color.red;</span><br><span class="line"><span class="comment">//绘制圆点半径</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> radius=<span class="number">6</span>;</span><br><span class="line"><span class="comment">//命令的历史记录</span></span><br><span class="line"><span class="keyword">private</span> MacroCommand history;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DrawCanvas</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> height,MacroCommand history)</span></span>&#123;</span><br><span class="line">setSize(width, height);</span><br><span class="line">setBackground(Color.WHITE);</span><br><span class="line"><span class="keyword">this</span>.history=history;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重新全部绘制</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span></span>&#123;</span><br><span class="line">history.execute();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">Graphics g=getGraphics();</span><br><span class="line">g.setColor(color);</span><br><span class="line">g.fillOval(x-radius, y-radius, radius*<span class="number">2</span>, radius*<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="drawcommand">DrawCommand</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command.drawer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Point;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.Command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DrawCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制对象</span></span><br><span class="line"><span class="keyword">protected</span> Drawable drawable;</span><br><span class="line"><span class="comment">//绘制位置</span></span><br><span class="line"><span class="keyword">private</span> Point position;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DrawCommand</span><span class="params">(Drawable drawable,Point position )</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.drawable=drawable;</span><br><span class="line"><span class="keyword">this</span>.position=position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">drawable.draw(position.x, position.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseMotionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.Box;</span><br><span class="line"><span class="keyword">import</span> javax.swing.BoxLayout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.command.MacroCommand;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.drawer.DrawCanvas;</span><br><span class="line"><span class="keyword">import</span> com.sean.Command.drawer.DrawCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>,</span></span><br><span class="line"><span class="class"><span class="title">MouseMotionListener</span>, <span class="title">WindowListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制的历史记录</span></span><br><span class="line"><span class="keyword">private</span> MacroCommand history=<span class="keyword">new</span> MacroCommand();</span><br><span class="line"><span class="comment">//绘制区域</span></span><br><span class="line"><span class="keyword">private</span> DrawCanvas canvas=<span class="keyword">new</span> DrawCanvas(<span class="number">400</span>,<span class="number">400</span>,history);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除按钮</span></span><br><span class="line"><span class="keyword">private</span> JButton clearButton=<span class="keyword">new</span> JButton(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Main</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.addWindowListener(<span class="keyword">this</span>);</span><br><span class="line">canvas.addMouseMotionListener(<span class="keyword">this</span>);</span><br><span class="line">clearButton.addActionListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">Box buttonBox=<span class="keyword">new</span> Box(BoxLayout.X_AXIS);</span><br><span class="line">buttonBox.add(clearButton);</span><br><span class="line">Box mainBox=<span class="keyword">new</span> Box(BoxLayout.Y_AXIS);</span><br><span class="line"></span><br><span class="line">mainBox.add(buttonBox);</span><br><span class="line">mainBox.add(canvas);</span><br><span class="line">getContentPane().add(mainBox);</span><br><span class="line"></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">Command command=<span class="keyword">new</span> DrawCommand(canvas,e.getPoint());</span><br><span class="line">history.append(command);</span><br><span class="line">command.execute();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==clearButton)&#123;</span><br><span class="line">history.clear();</span><br><span class="line">canvas.repaint();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">new</span> Main(<span class="string">&quot;Command Pattern&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="state模式">State模式</h2><p>用类表示状态</p><hr><h3 id="类图-1">类图</h3><p>有点复杂！但只有部分是自己写的，其他是java类库内的类。</p><figure><img data-src="/2018/02/14/Design-Pattern-Java/State_Design_Pattern_complex.png" alt="State"><figcaption>State</figcaption></figure><p>粗略简单一点的类图 <img data-src="/2018/02/14/Design-Pattern-Java/State_Design_Pattern_simple.png" alt="State"></p><h3 id="代码-2">代码</h3><h4 id="state">State</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context,<span class="keyword">int</span> hour)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="nightstate具体的状态">NightState(具体的状态)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NightState</span> <span class="keyword">implements</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> NightState singleton = <span class="keyword">new</span> NightState();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">NightState</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> State <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context, <span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">9</span>&lt;=hour || hour&lt;<span class="number">17</span>)&#123;</span><br><span class="line">context.changeState(DayState.getInstance());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">context.callSecurityCenter(<span class="string">&quot;紧急！晚上使用金库！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">&quot;按下警铃（晚上）&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">&quot;晚上通话录音&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;[晚上]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="daystate具体的状态">DayState(具体的状态)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DayState</span> <span class="keyword">implements</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DayState singleton = <span class="keyword">new</span> DayState();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">DayState</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> State <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doClock</span><span class="params">(Context context, <span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(hour&lt;<span class="number">9</span> || <span class="number">17</span>&lt;=hour)&#123;</span><br><span class="line">context.changeState(NightState.getInstance());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doUse</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.recordLog(<span class="string">&quot;使用金库（白天）&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAlarm</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">&quot;按下警铃（白天）&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPhone</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">context.callSecurityCenter(<span class="string">&quot;正常通话（白天）&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;[白天]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="context">Context</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setClock</span><span class="params">(<span class="keyword">int</span> hour)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> State <span class="title">changeState</span><span class="params">(State state)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">callSecurityCenter</span><span class="params">(String msg)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">recordLog</span><span class="params">(String msg)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="safeframe">SafeFrame</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.Panel;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextArea;</span><br><span class="line"><span class="keyword">import</span> java.awt.TextField;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SafeFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span> <span class="keyword">implements</span> <span class="title">ActionListener</span>, <span class="title">Context</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> TextField textClock = <span class="keyword">new</span> TextField(<span class="number">60</span>);</span><br><span class="line"><span class="keyword">private</span> TextArea textScreen=<span class="keyword">new</span> TextArea(<span class="number">10</span>,<span class="number">60</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonUse=<span class="keyword">new</span> Button(<span class="string">&quot;使用金库&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonAlarm=<span class="keyword">new</span> Button(<span class="string">&quot;按下警铃&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonPhone=<span class="keyword">new</span> Button(<span class="string">&quot;正常通话&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> Button buttonExit=<span class="keyword">new</span> Button(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line"><span class="keyword">private</span> State state=DayState.getInstance();</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SafeFrame</span><span class="params">(String title)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(title);</span><br><span class="line">setBackground(Color.lightGray);</span><br><span class="line">setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line"><span class="comment">//配置textClock</span></span><br><span class="line">add(textClock,BorderLayout.NORTH);</span><br><span class="line">textClock.setEditable(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//配置textScreen</span></span><br><span class="line">add(textScreen,BorderLayout.CENTER);</span><br><span class="line">textScreen.setEditable(<span class="keyword">false</span>);</span><br><span class="line"><span class="comment">//为界面添加按钮</span></span><br><span class="line">Panel panel=<span class="keyword">new</span> Panel();</span><br><span class="line">panel.add(buttonUse);</span><br><span class="line">panel.add(buttonAlarm);</span><br><span class="line">panel.add(buttonPhone);</span><br><span class="line">panel.add(buttonExit);</span><br><span class="line"><span class="comment">//配置界面</span></span><br><span class="line">add(panel,BorderLayout.SOUTH);</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line">pack();</span><br><span class="line">show();</span><br><span class="line"><span class="comment">//设置监听器</span></span><br><span class="line">buttonUse.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonAlarm.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonPhone.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">buttonExit.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setClock</span><span class="params">(<span class="keyword">int</span> hour)</span> </span>&#123;</span><br><span class="line">String clockstring=<span class="string">&quot;现在时间是:&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(hour&lt;<span class="number">10</span>)&#123;</span><br><span class="line">clockstring+=<span class="string">&quot;0&quot;</span>+hour+<span class="string">&quot;:00&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">clockstring+=hour+<span class="string">&quot;:00&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(clockstring);</span><br><span class="line">textClock.setText(clockstring);</span><br><span class="line">state.doClock(<span class="keyword">this</span>, hour);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> State <span class="title">changeState</span><span class="params">(State state)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;从&quot;</span>+<span class="keyword">this</span>.state+<span class="string">&quot;状态变为了&quot;</span>+state+<span class="string">&quot;状态&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.state=state;</span><br><span class="line"><span class="keyword">return</span> state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">callSecurityCenter</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">textScreen.append(<span class="string">&quot;Call!&quot;</span>+msg+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recordLog</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">textScreen.append(<span class="string">&quot;record ... &quot;</span>+msg+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">System.out.println(e.toString());</span><br><span class="line"><span class="keyword">if</span>(e.getSource()==buttonUse)&#123;</span><br><span class="line">state.doUse(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()==buttonAlarm) &#123;</span><br><span class="line">state.doAlarm(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()==buttonPhone) &#123;</span><br><span class="line">state.doPhone(<span class="keyword">this</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.getSource()== buttonExit) &#123;</span><br><span class="line">System.exit(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main-1">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.State;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SafeFrame frame=<span class="keyword">new</span> SafeFrame(<span class="string">&quot;state module&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> hour=<span class="number">0</span>;hour&lt;<span class="number">24</span>;hour++)&#123;</span><br><span class="line">frame.setClock(hour);<span class="comment">//设置时间</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="要点-1">要点</h3><p>采用分而治之方针。 <strong>定义接口，声明抽象方法</strong> <strong>定义多个类，实现具体的方法</strong></p><hr><h2 id="memento模式">Memento模式</h2><p><strong>保存对象状态</strong> ### 类表 | 名字 | 说明 | |--------|--------| | Memento | 表示Gamer状态的类 | | Gamer | 表示游戏主人公的类，他会生成Memento实例 | | Main | 进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态 |</p><h3 id="类图-2">类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Memento_Design_Pattern.png" alt="Memento"><figcaption>Memento</figcaption></figure><h3 id="代码-3">代码</h3><h4 id="memento类">Memento类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.AbstractFactory.listfactory.ListLink;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Memento</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> money;</span><br><span class="line">ArrayList fruits;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line">Memento(<span class="keyword">int</span> money)&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line"><span class="keyword">this</span>.fruits=<span class="keyword">new</span> ArrayList();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addFruit</span><span class="params">(String fruit)</span></span>&#123;</span><br><span class="line">fruits.add(fruit);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">getFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (List) fruits.clone();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="gamer类">Gamer类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Memento;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gamer</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> money;</span><br><span class="line"><span class="keyword">private</span> List fruits=<span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">private</span> Random random=<span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String[] fruitsname=&#123;<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;葡萄&quot;</span>,<span class="string">&quot;香蕉&quot;</span>,<span class="string">&quot;橘子&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Gamer</span><span class="params">(<span class="keyword">int</span> money)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMoney</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bet</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> dice = random.nextInt(<span class="number">6</span>)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(dice==<span class="number">1</span>)&#123;</span><br><span class="line">money+=<span class="number">100</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;所持金币增加了。&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dice==<span class="number">2</span>) &#123;</span><br><span class="line">money/=<span class="number">2</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;所持金币减半。&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (dice==<span class="number">6</span>) &#123;</span><br><span class="line">String f=getFruit();</span><br><span class="line">System.out.println(<span class="string">&quot;获得的水果&quot;</span>+f+<span class="string">&quot;)。&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;什么都没发生。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Memento <span class="title">createMemento</span><span class="params">()</span></span>&#123;</span><br><span class="line">Memento m=<span class="keyword">new</span> Memento(money);</span><br><span class="line">Iterator it=fruits.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">String f=(String)it.next();</span><br><span class="line"><span class="keyword">if</span>(f.startsWith(<span class="string">&quot;好吃的&quot;</span>))&#123;</span><br><span class="line">m.addFruit(f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restoreMemento</span><span class="params">(Memento memento)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money=money;</span><br><span class="line"><span class="keyword">this</span>.fruits=memento.getFruits();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;[money= &quot;</span>+money+<span class="string">&quot;,fruits= &quot;</span>+fruits+<span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getFruit</span><span class="params">()</span></span>&#123; </span><br><span class="line">String prefix=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(random.nextBoolean())&#123;</span><br><span class="line">prefix=<span class="string">&quot;好吃的&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> prefix+fruitsname[random.nextInt(fruitsname.length)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main-2">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Memento;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Gamer gamer=<span class="keyword">new</span> Gamer(<span class="number">100</span>);</span><br><span class="line">Memento memento=gamer.createMemento();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;========&quot;</span>+i);</span><br><span class="line">System.out.println(<span class="string">&quot;当前状态：&quot;</span>+gamer);</span><br><span class="line">gamer.bet(); <span class="comment">//进行游戏</span></span><br><span class="line">System.out.println(<span class="string">&quot;所持金钱为&quot;</span>+gamer.getMoney()+<span class="string">&quot;元&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(gamer.getMoney()&gt;memento.getMoney())&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;（所持金钱增加许多，因此保存游戏当前状态）&quot;</span>);</span><br><span class="line">memento=gamer.createMemento();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (gamer.getMoney()&lt;memento.getMoney()/<span class="number">2</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;（所持金钱减少许多，因此要恢复至以前状态）&quot;</span>);</span><br><span class="line">gamer.restoreMemento(memento);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="个人理解-2">个人理解</h3><p>Memento模式就是实现对象状态的恢复，而设置的。</p><hr><h2 id="observe模式">Observe模式</h2><p>在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。</p><hr><h3 id="类和接口的表">类和接口的表</h3><table><thead><tr class="header"><th>名字</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>Observer</td><td>表示观察者接口</td></tr><tr class="even"><td>NumberGenerator</td><td>表示生成数值的对象的抽象类</td></tr><tr class="odd"><td>RandomNumberGenerator</td><td>生成随机数的类</td></tr><tr class="even"><td>DigitObserver</td><td>表示以数字形式显示数值类</td></tr><tr class="odd"><td>GraphObserver</td><td>表示以简单的图形显示数值类</td></tr><tr class="even"><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h3 id="程序类图">程序类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Observe_Design_Pattern.png" alt="Observer"><figcaption>Observer</figcaption></figure><h3 id="代码-4">代码</h3><h4 id="observer接口定义抽象方法">Observer接口(定义抽象方法)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="numbergenerator抽象类">NumberGenerator抽象类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberGenerator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ArrayList observers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addObserver</span><span class="params">(Observer observer)</span></span>&#123;</span><br><span class="line">observers.add(observer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteObserver</span><span class="params">(Observer observer)</span></span>&#123;</span><br><span class="line">observers.remove(observer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObservers</span><span class="params">()</span></span>&#123;</span><br><span class="line">Iterator it=observers.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Observer o=(Observer) it.next();</span><br><span class="line">o.update(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">exeute</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="digitobserver具体的观察者">DigitObserver具体的观察者</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DigitObserver</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;DigitObserver：&quot;</span>+generator.getNumber());</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="graphobserver具体的观察者">GraphObserver具体的观察者</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GraphObserver</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(NumberGenerator generator)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;GraphObserver:&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> count = generator.getNumber();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">100</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="randomnumbergenerator具体的被观察对象">RandomNumberGenerator具体的被观察对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomNumberGenerator</span> <span class="keyword">extends</span> <span class="title">NumberGenerator</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Random random= <span class="keyword">new</span> Random();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exeute</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">number=random.nextInt(<span class="number">50</span>);</span><br><span class="line">notifyObservers();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="测试方法">测试方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ackage com.sean.Observer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">NumberGenerator generator=<span class="keyword">new</span> RandomNumberGenerator();</span><br><span class="line">Observer observer1=<span class="keyword">new</span> DigitObserver();</span><br><span class="line">Observer observer2=<span class="keyword">new</span> GraphObserver();</span><br><span class="line">generator.addObserver(observer1);</span><br><span class="line">generator.addObserver(observer2);</span><br><span class="line">generator.exeute();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="要点-2">要点</h3><p>Observer角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。</p><hr><h2 id="flyweight-模式">Flyweight 模式</h2><p><strong>共享</strong>对象，避免浪费。</p><hr><h3 id="类表-1">类表</h3><table><thead><tr class="header"><th>名字</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>BigChar</td><td>表示&quot;大型字符&quot;类</td></tr><tr class="even"><td>BigCharFactory</td><td>表示生成和共用BigChar类的实例的类</td></tr><tr class="odd"><td>BigString</td><td>表示多个BigChar组成的 &quot;大型字符串&quot; 的类</td></tr><tr class="even"><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h3 id="程序类图-1">程序类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/flyweight_uml_fig.png" alt="Flyweight"><figcaption>Flyweight</figcaption></figure><h3 id="代码-5">代码</h3><h4 id="bigchar类">BigChar类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigChar</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span> charname;</span><br><span class="line"><span class="keyword">private</span> String fontdata;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigChar</span><span class="params">(<span class="keyword">char</span> charname)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.charname=charname;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">BufferedReader reader=<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;/home/sean/Documents/&quot;</span>+<span class="string">&quot;big&quot;</span>+charname+<span class="string">&quot;.txt&quot;</span>));</span><br><span class="line">String line;</span><br><span class="line">StringBuffer buf=<span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">while</span>((line=reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">buf.append(line);</span><br><span class="line">buf.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">reader.close();</span><br><span class="line"><span class="keyword">this</span>.fontdata=buf.toString();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="keyword">this</span>.fontdata=charname+<span class="string">&quot;?&quot;</span>;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.print(fontdata);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bigcharfactory类">BigCharFactory类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigCharFactory</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> HashMap pool=<span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="comment">//Singleton模式</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BigCharFactory singleton=<span class="keyword">new</span> BigCharFactory();</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">BigCharFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取唯一实例</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BigCharFactory <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> singleton;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成（共享)BigChar类实例</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> BigChar <span class="title">getBigChar</span><span class="params">(<span class="keyword">char</span> charname)</span></span>&#123;</span><br><span class="line">BigChar bc=(BigChar) pool.get(<span class="string">&quot;&quot;</span>+charname);</span><br><span class="line"><span class="keyword">if</span>(bc==<span class="keyword">null</span>)&#123;</span><br><span class="line">bc=<span class="keyword">new</span> BigChar(charname);</span><br><span class="line">pool.put(<span class="string">&quot;&quot;</span>+charname, bc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bigstring类">BigString类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigString</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> BigChar[] bigChars;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigString</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line">bigChars=<span class="keyword">new</span> BigChar[string.length()];</span><br><span class="line">BigCharFactory factory=BigCharFactory.getInstance();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class="line">bigChars[i]=factory.getBigChar(string.charAt(i));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class="line">bigChars[i].print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main类-1">Main类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Flyweight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">BigString bs=<span class="keyword">new</span> BigString(<span class="string">&quot;10101&quot;</span>);</span><br><span class="line">bs.print();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="要点-3">要点</h3><p>Flyweight模式会对<strong>多个地方产生影响</strong>。</p><p><strong>Intrinsic:</strong> 应当被共享的信息<br><strong>Extrinsic:</strong> 不应当被共享的信息</p><table><thead><tr class="header"><th>名字</th><th>解释</th></tr></thead><tbody><tr class="odd"><td>Instrinsic信息</td><td>不依赖位置状况，可以共享</td></tr><tr class="even"><td>Extrinsic信息</td><td>依赖位置与状况，不能共享</td></tr></tbody></table><p><strong>不要让被共享的实例被垃圾回收机器回收</strong> Flyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。</p><hr><h2 id="adapter模式">Adapter模式</h2><p>加个 &quot;适配器&quot; 以便复用 Adapter模式也被称为Wrapper(包装器)模式。</p><p>Adapter模式 类适配器模式(使用继承的适配器) 对象适配器模式(使用委托的适配器)</p><hr><h3 id="类适配器模式使用继承的适配器">类适配器模式(使用继承的适配器)</h3><h4 id="类图-3">类图</h4><figure><img data-src="/2018/02/14/Design-Pattern-Java/Adapter_Design_Pattern.png" alt="Adapter Design Pattern"><figcaption>Adapter Design Pattern</figcaption></figure><h4 id="code-1">code</h4><h5 id="print">Print</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="banner">Banner</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Banner</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Banner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithParen</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;(&quot;</span>+string+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithAster</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;*&quot;</span>+string+<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="printbanner">PrintBanner</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintBanner</span> <span class="keyword">extends</span> <span class="title">Banner</span> <span class="keyword">implements</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrintBanner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span> </span>&#123;</span><br><span class="line">showWithParen();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span> </span>&#123;</span><br><span class="line">showWithAster();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="main-3">Main</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Print print =  <span class="keyword">new</span> PrintBanner(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">print.printWeak();</span><br><span class="line">print.printStrong();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象适配器模式使用委托的适配器">对象适配器模式(使用委托的适配器)</h3><h4 id="类图-4">类图</h4><figure><img data-src="/2018/02/14/Design-Pattern-Java/Adapter_Design_Pattern_proxy.png" alt="Adapter Design Pattern proxy"><figcaption>Adapter Design Pattern proxy</figcaption></figure><h4 id="code-2">code</h4><h5 id="banner-1">Banner</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Banner</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Banner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithParen</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;(&quot;</span>+string+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showWithAster</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;*&quot;</span>+string+<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="print-1">Print</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="printbanner-1">PrintBanner</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Adapter.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintBanner</span> <span class="keyword">extends</span> <span class="title">Print</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Banner banner;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrintBanner</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.banner = <span class="keyword">new</span> Banner(string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printWeak</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">banner.showWithParen();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printStrong</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">banner.showWithAster();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="要点-4">要点</h3><p>Adapter模式会对现有的类进行适配，生成行的类。 版本的升级与兼容需要用到Adapter模式。 适配！适配！就是给需要的类配对一个合适的插口。</p><h2 id="factorymethod模式">FactoryMethod模式</h2><p>将实例的生成交给子类用TemplateMethod模式来构建 <strong>生成的实例的工厂</strong> ， 就是FactoryMethod模式。</p><h3 id="类图-5">类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Facade_Design_Pattern.png" alt="Factory"><figcaption>Factory</figcaption></figure><h3 id="code-3">code</h3><h4 id="factory">Factory</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.framework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> Product <span class="title">create</span><span class="params">(String owner)</span></span>&#123;</span><br><span class="line">Product product=createProduct(owner);</span><br><span class="line">registerProduct(product);</span><br><span class="line"><span class="keyword">return</span> product;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> Product <span class="title">createProduct</span><span class="params">(String owner)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">registerProduct</span><span class="params">(Product product)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="product">Product</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.framework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">use</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="idcard">IDCard</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.idcard;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDCard</span> <span class="keyword">extends</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String owner;</span><br><span class="line">IDCard(String owner)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;制作&quot;</span>+owner+<span class="string">&quot;的ID卡。&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.owner=owner;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">use</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;使用&quot;</span>+owner+<span class="string">&quot;的ID卡。&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOwner</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> owner;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="idcardfactory">IDCardFactory</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod.idcard;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDCardFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> List owners = <span class="keyword">new</span> ArrayList(); </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> Product <span class="title">createProduct</span><span class="params">(String owner)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> IDCard(owner);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">registerProduct</span><span class="params">(Product product)</span> </span>&#123;</span><br><span class="line">owners.add(((IDCard)product).getOwner());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getOwners</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> owners;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main-4">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.FactoryMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class="line"><span class="keyword">import</span> com.sean.FactoryMethod.idcard.IDCardFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Factory factory=<span class="keyword">new</span> IDCardFactory();</span><br><span class="line">Product card1= factory.create(<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">Product card2=factory.create(<span class="string">&quot;小红&quot;</span>);</span><br><span class="line">Product card3=factory.create(<span class="string">&quot;小刚&quot;</span>);</span><br><span class="line">card1.use();</span><br><span class="line">card2.use();</span><br><span class="line">card3.use();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="要点-5">要点</h3><p>工厂产生产品 具体的工厂产生具体的产品 这两者形成一一对应的关系。</p><hr><h2 id="templatemethod模式">TemplateMethod模式</h2><p>将具体处理交给子类 带有模板功能的模式。 在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。 在抽象类阶段确定处理的流程非常重要。</p><hr><h3 id="类图-6">类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/TemplateMethod_Design_Pattern.png" alt="TemplateMethod"><figcaption>TemplateMethod</figcaption></figure><h3 id="代码-6">代码</h3><h4 id="abstractdisplay">AbstractDisplay</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象类中可有具体的方法实现</span></span><br><span class="line"><span class="comment"> * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sean</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="comment">//修改修饰符可以改变抽象类方法的访问权限问题</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">open();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">print();</span><br><span class="line">&#125;</span><br><span class="line">close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="chardisplay">CharDisplay</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CharDisplay</span> <span class="keyword">extends</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span> ch;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CharDisplay</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.ch=ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;&lt;&lt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.print(ch);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;&gt;&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="stringdisplay">StringDisplay</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDisplay</span> <span class="keyword">extends</span> <span class="title">AbstractDisplay</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String string;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> width;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringDisplay</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.string=string;</span><br><span class="line"><span class="keyword">this</span>.width=string.getBytes().length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">printLine();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;|&quot;</span>+string+<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">printLine();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printLine</span><span class="params">()</span></span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;width;i++)&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main-5">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.TemplateMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">AbstractDisplay d1=<span class="keyword">new</span> CharDisplay(<span class="string">&#x27;H&#x27;</span>);</span><br><span class="line">AbstractDisplay d2=<span class="keyword">new</span> StringDisplay(<span class="string">&quot;Hello,world&quot;</span>);</span><br><span class="line">d1.display();</span><br><span class="line">d2.display();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="要点-6">要点</h3><p>Template Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。</p><hr><h2 id="proxy模式">Proxy模式</h2><p><strong>只在必要时生成实例</strong></p><hr><h3 id="类表-2">类表</h3><table><thead><tr class="header"><th>名字</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>Printer</td><td>表示带名字的打印机类(本人)</td></tr><tr class="even"><td>Printable</td><td>Printer和PrinterProxy的共同接口</td></tr><tr class="odd"><td>PrinterProxy</td><td>表示带名字的打印机类(代理人)</td></tr><tr class="even"><td>Main</td><td>测试程序行为的类</td></tr></tbody></table><h3 id="类图-7">类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Proxy_Design_Pattern.png" alt="Proxy"><figcaption>Proxy</figcaption></figure><h3 id="代码-7">代码</h3><h4 id="printable接口">Printable接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getPrintName</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="printer">Printer</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Printer</span> <span class="keyword">implements</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Printer</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Printer</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">heavyJob(<span class="string">&quot;正在生成Printer实例（&quot;</span>+name+<span class="string">&quot;)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPrintName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;====&quot;</span>+name+<span class="string">&quot;====&quot;</span>);</span><br><span class="line">System.out.println(string);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">heavyJob</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">System.out.print(msg);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;结束。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="printerproxy">PrinterProxy</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrinterProxy</span> <span class="keyword">implements</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Printer real;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrinterProxy</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">PrinterProxy</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">setPrinterName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(real!=<span class="keyword">null</span>)&#123;</span><br><span class="line">real.setPrinterName(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPrintName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String string)</span> </span>&#123;</span><br><span class="line">realize();</span><br><span class="line">real.print(string);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">realize</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(real==<span class="keyword">null</span>)&#123;</span><br><span class="line">real=<span class="keyword">new</span> Printer(name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="main-6">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Printable p=<span class="keyword">new</span> PrinterProxy(<span class="string">&quot;Alice&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class="string">&quot;。&quot;</span>);</span><br><span class="line">p.setPrinterName(<span class="string">&quot;Bob&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class="string">&quot;。&quot;</span>);</span><br><span class="line">p.print(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="iterator模式">Iterator模式</h2><p>一个一个遍历 <strong>迭代器</strong></p><hr><h3 id="类图-8">类图</h3><figure><img data-src="/2018/02/14/Design-Pattern-Java/Iterator_Design_Pattern.png" alt="Iterator"><figcaption>Iterator</figcaption></figure><h3 id="code-4">code</h3><h4 id="aggregate">Aggregate</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Aggregate</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Iterator <span class="title">iterator</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="iterator">Iterator</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Object <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="book">Book</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bookshelf">BookShelf</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookShelf</span> <span class="keyword">implements</span> <span class="title">Aggregate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//private Book[] books;</span></span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;Book&gt; bookList = <span class="keyword">new</span> ArrayList&lt;Book&gt;();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> last=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//public BookShelf(int maxsize)&#123;</span></span><br><span class="line"><span class="comment">//this.books = new Book[maxsize];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Book <span class="title">getBookAt</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> bookList.get(index);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">appendBook</span><span class="params">(Book book)</span></span>&#123;</span><br><span class="line">bookList.add(book);</span><br><span class="line">last++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> last;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Iterator <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>  <span class="keyword">new</span> BookShelfIterator(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="bookshelfiterator">BookShelfIterator</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookShelfIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> BookShelf bookShelf;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line"><span class="function"><span class="keyword">public</span>  <span class="title">BookShelfIterator</span><span class="params">(BookShelf bookShelf)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.bookShelf = bookShelf;</span><br><span class="line"><span class="keyword">this</span>.index=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">if</span>(index &lt; bookShelf.getLength())&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Book book = bookShelf.getBookAt(index);</span><br><span class="line">index++;</span><br><span class="line"><span class="keyword">return</span> book;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="main-7">Main</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sean.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//BookShelf bookShelf = new BookShelf(4);</span></span><br><span class="line">BookShelf bookShelf = <span class="keyword">new</span> BookShelf();</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">&quot;Around the World in 80 Days&quot;</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">&quot;Bible&quot;</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">&quot;Cinderella&quot;</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">&quot;Dady-Long-Legs&quot;</span>));</span><br><span class="line">bookShelf.appendBook(<span class="keyword">new</span> Book(<span class="string">&quot;Gone with the wind!&quot;</span>));</span><br><span class="line">Iterator it = bookShelf.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Book book = (Book) it.next();</span><br><span class="line">System.out.println(book.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="参照">参照</h2><blockquote><p>《图解设计模式》</p></blockquote><p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。 程序类图使用idea 生成的</p><h2 id="备注">备注</h2><p>I would greatly appreciate hearing about any error in this article, even minor ones. I welcome your suggestions for improvements, even tiny one. You can give advice on the following comment area and email to me!. Have fun!</p>]]></content>
    
    
    <summary type="html">本篇博客主要讲述设计模式，以Java语言实现设计模式。文章有点长，主要是代码。可以通过目录来选择阅读各个模式。</summary>
    
    
    
    <category term="DesignPattern" scheme="https://seanchristspc.github.io/categories/DesignPattern/"/>
    
    
    <category term="Java" scheme="https://seanchristspc.github.io/tags/Java/"/>
    
    <category term="DesignPattern" scheme="https://seanchristspc.github.io/tags/DesignPattern/"/>
    
  </entry>
  
  <entry>
    <title>Myeclipse2017-ci9破解</title>
    <link href="https://seanchristspc.github.io/2018/02/07/Myeclipse2017ci9Crack/"/>
    <id>https://seanchristspc.github.io/2018/02/07/Myeclipse2017ci9Crack/</id>
    <published>2018-02-06T20:33:50.000Z</published>
    <updated>2018-02-06T20:33:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Myeclipse2017-ci9破解-windows版"><a href="#Myeclipse2017-ci9破解-windows版" class="headerlink" title="Myeclipse2017-ci9破解 windows版"></a>Myeclipse2017-ci9破解 windows版</h1><h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><p>安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用</p><h2 id="下载myeclipse2017ci9及破解文件"><a href="#下载myeclipse2017ci9及破解文件" class="headerlink" title="下载myeclipse2017ci9及破解文件"></a>下载myeclipse2017ci9及破解文件</h2><p><a href="https://pan.baidu.com/s/17KQFLTirCf1GggMz92Qlug">下载地址</a><br>密码: 3wsu<br>下载完成，进行安装步骤</p><h2 id="安装myeclipse"><a href="#安装myeclipse" class="headerlink" title="安装myeclipse"></a>安装myeclipse</h2><p>1.点击安装文件出现下图 点击next<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG" alt="Step 1"><br>2. 接受协议 点击next<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG" alt="Step 2"><br>3.自己选择安装目录，一定要是空文件夹<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG" alt="Step 3"><br>4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG" alt="Step 4"><br>5.静静的等待安装<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG" alt="Step 5"><br>6.这一步非常重要 取消启动myeclipse 点击finish<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG" alt="Step 6"><br>安装完成</p><h2 id="破解Myeclipse"><a href="#破解Myeclipse" class="headerlink" title="破解Myeclipse"></a>破解Myeclipse</h2><p>1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG" alt="Step 7"><br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG" alt="Step 8"><br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG" alt="Step 9"></p><p>2.点击crack.bat 启动破解文件<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG" alt="Step 10"></p><ol start="3"><li>在Usercode任意输入 选择blue 双击 SystemId  在点击 active<br>出现下面内容：<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG" alt="Step 11"></li></ol><p>4.点击Tools  选择 saveproperties<br>ok!</p><p>5.启动Myeclipse<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG" alt="Step 12"></p><h2 id="查看是否激活成功"><a href="#查看是否激活成功" class="headerlink" title="查看是否激活成功"></a>查看是否激活成功</h2><p>1.点击help — SubScription information<br><img data-src="/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG" alt="Step 13"></p><h3 id="破解完成，请勿用于商业用途。喜欢请支持正版！！！！！"><a href="#破解完成，请勿用于商业用途。喜欢请支持正版！！！！！" class="headerlink" title="破解完成，请勿用于商业用途。喜欢请支持正版！！！！！"></a>破解完成，请勿用于商业用途。喜欢请支持正版！！！！！</h3>]]></content>
    
    
    <summary type="html">简要描述了Myeclipse2017ci9 破解过程。</summary>
    
    
    
    <category term="soft" scheme="https://seanchristspc.github.io/categories/soft/"/>
    
    
    <category term="crack" scheme="https://seanchristspc.github.io/tags/crack/"/>
    
    <category term="Myeclipse" scheme="https://seanchristspc.github.io/tags/Myeclipse/"/>
    
  </entry>
  
  <entry>
    <title>搭建hexo和github遇到问题</title>
    <link href="https://seanchristspc.github.io/2018/02/06/build_hexo_problem/"/>
    <id>https://seanchristspc.github.io/2018/02/06/build_hexo_problem/</id>
    <published>2018-02-06T15:59:44.000Z</published>
    <updated>2018-02-06T15:59:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建hexo和github遇到问题"><a href="#搭建hexo和github遇到问题" class="headerlink" title="搭建hexo和github遇到问题"></a>搭建hexo和github遇到问题</h1><p>学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！</p><hr><h2 id="安装hexo问题"><a href="#安装hexo问题" class="headerlink" title="安装hexo问题"></a>安装hexo问题</h2><p>安装hexo我是在网上找教程安装的：<br>1.安装node.js(去官网下载windows版的安装包) <a href="https://nodejs.org/">node.js官网</a><br>2.安装git  <a href="https://git-scm.com/downloads/">git下载地址</a><br>3.申请github账号 <a href="https://github.com/">github</a> 这里自己注册<br>设置user.name user.email</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>4.生成ssh密匙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>一路回车就OK了！<br>此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。<br>上传公匙添加到github上<br><strong><em>记住是id_rsa.pub内容复制到github上</em></strong></p><p>5.安装hexo </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli g</span><br></pre></td></tr></table></figure><p>建立一个文件夹hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo </span><br></pre></td></tr></table></figure><p>初始化hexo文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure><p>安装hexo插件(都安装吧!)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure><p>6.本地使用hexo</p><p>生成静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>开启本地服务器(可以使用全名 hexo server)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s </span><br></pre></td></tr></table></figure><p>在浏览器输入 <strong><a href="http://localhost:4000/">http://localhost:4000/</a></strong> 就可以在本地访问blog</p><p>7.hexo部署到github上</p><p>先在github上创建一个仓库 名字：   github用户名.github.io<br>这个创库的命名规则不能弄错了！！！！！！</p><p>修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment 注释</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库</span><br><span class="line">  repo: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)<br>还有一种方式是把repo 修改为下面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo: https://github.com/用户名/用户名.github.io</span><br></pre></td></tr></table></figure><p>由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github</p><p>输入下面的命令将hexo博客部署到github中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清空静态页面</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成静态页面</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 部署 </span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。</p><hr><h2 id="hexo替换主题"><a href="#hexo替换主题" class="headerlink" title="hexo替换主题"></a>hexo替换主题</h2><p>我使用的next主题<br>1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自己切换自己的博客目录</span></span><br><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line"><span class="comment"># 执行下面命令</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>2.修改博客配置文件 /hexo/_config.yml 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: http:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">#以前的选项为     theme: landscape</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>3.修改主题配置文件      /hexo/themes/next/_config.yml</p><h2 id="menu修改"><a href="#menu修改" class="headerlink" title="menu修改"></a>menu修改</h2><p>找到下面内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  #categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure><p>去掉 # 就可以多一个菜单栏 比如去掉 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure><p>虽然在首页能看见这个菜单，但是是不能使用<br>点击菜单 categories 会返回 can’t get /categories/ 错误信息<br>首先要安装categories对应插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure><p>再在gitbash输入（hexo目录下）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2018-1-22 12:39:04</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>在/hexo/source/_post 目录建立 test.md 内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: test</span><br><span class="line">categories:</span><br><span class="line">  - Testing</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！</p><hr><h2 id="赞赏功能问题"><a href="#赞赏功能问题" class="headerlink" title="赞赏功能问题"></a>赞赏功能问题</h2><p>在添加赞赏功能是替换了图片不能出现赞赏功能<br>next赞赏功能启用<br>在主题配置文件 找到如下内容  并修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Reward</span><br><span class="line">reward_comment: Donate</span><br><span class="line">wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class="line">alipay: &#x2F;images&#x2F;alipay.jpg</span><br><span class="line">#bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">自己图片位置在 Hexo&#x2F;themes&#x2F;next&#x2F;source image文件内</span><br><span class="line">修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>修改如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>在执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo generate &amp;&amp;  hexo s </span><br></pre></td></tr></table></figure><p>这下应该可以！</p><hr><h2 id="本地搜索配置"><a href="#本地搜索配置" class="headerlink" title="本地搜索配置"></a>本地搜索配置</h2><p>1.hexo配置文件(/hexo/_config.yml)添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>2.安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>3.修改 主题配置文件(/hexo/themes/next/_config.yml)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: false</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://theme-next.iissnan.com/">next参考文档</a><br><a href="https://hexo.io/zh-cn/docs/">hexo参考文档</a></p><p>没事就多看看官方文档，应该能解决问题的！加油！</p>]]></content>
    
    
    <summary type="html">本文描述了自己搭建hexo所遇到的问题。</summary>
    
    
    
    <category term="Hexo" scheme="https://seanchristspc.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://seanchristspc.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello! Hexo</title>
    <link href="https://seanchristspc.github.io/2018/02/06/hello-world/"/>
    <id>https://seanchristspc.github.io/2018/02/06/hello-world/</id>
    <published>2018-02-05T20:45:10.000Z</published>
    <updated>2018-02-05T20:45:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="Hexo" scheme="https://seanchristspc.github.io/categories/Hexo/"/>
    
    
    <category term="officeWord" scheme="https://seanchristspc.github.io/tags/officeWord/"/>
    
  </entry>
  
</feed>
