{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/scroll.png","path":"images/scroll.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/next/source/images/favicon32_32.ico","path":"images/favicon32_32.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon_16_16.ico","path":"images/favicon_16_16.ico","modified":0,"renderable":1}],"Cache":[{"_id":"source/robots.txt","hash":"e23d51e98251477afeb793114fd3ba99c8f1c0f9","modified":1612083693472},{"_id":"source/_posts/Adapter_Design_Pattern.md","hash":"c05c1c85aa8796786ccd407eb5a6eaf4b19e76bb","modified":1612160627956},{"_id":"source/_posts/Command_Design_Pattern.md","hash":"1d67c1512b0491cd753fb4aac77a6848558dd7c4","modified":1612161641893},{"_id":"source/_posts/Facade_Design_Pattern.md","hash":"912642eb4caa8461d1db594b3624eb2c19a38aaf","modified":1612160814305},{"_id":"source/_posts/FactoryMethod_Design_Pattern.md","hash":"56b47b48078eccadab4084bc3a3277e705b099ac","modified":1612161760077},{"_id":"source/_posts/Flyweight_Design_Pattern.md","hash":"a6bcc314e319646ae26c9a93ce2526fa6d005897","modified":1612162198440},{"_id":"source/_posts/Iterator_Design_Pattern.md","hash":"eb520f96e36297b70129e15dd23db3c32475f563","modified":1612161470407},{"_id":"source/_posts/JSP自定义标签.md","hash":"394a1e61e5d02c3538025ae63a2e75799d6af6fc","modified":1612159301281},{"_id":"source/_posts/Linux_Introduction.md","hash":"982f5b05938fb8fbff2f0e5adc73e53af7e3d00f","modified":1612158393523},{"_id":"source/_posts/Mediator_Design_Pattern.md","hash":"8297995894d8b107bf12a49e62fabaaba1bafa0e","modified":1612161862522},{"_id":"source/_posts/Memento_Design_Pattern.md","hash":"b6fdd2de0bcfff02f74b70101e2de2dc1f74c61b","modified":1612160994860},{"_id":"source/_posts/Myeclipse2017ci9Crack.md","hash":"f44ab0fa4d279701b92eca1846d4454a250e727e","modified":1612163398478},{"_id":"source/_posts/Observe_Design_Pattern.md","hash":"d449de1a62e6d0554de018861865afc58b4c3b17","modified":1612161950674},{"_id":"source/_posts/Proxy_Design_Pattern.md","hash":"b3f2f78fbaf214b5796edf97193a288960c9b09c","modified":1612161472163},{"_id":"source/_posts/State_Design_Pattern.md","hash":"7666cf6b94db34628bf82748e7aa26a4f810f527","modified":1612162068155},{"_id":"source/_posts/TemplateMethod_Design_Pattern.md","hash":"6f08332911ac8fab95f67caba3f270a1c637d8d4","modified":1612161306481},{"_id":"source/_posts/build_hexo_problem.md","hash":"d1e1394784c7a06c77a363a37397a97bf2620855","modified":1612164368016},{"_id":"source/_posts/hello-world.md","hash":"c1f7f23e0861e61f92c36b252fde440562ab7133","modified":1612010729965},{"_id":"source/_posts/matlab_function_type.md","hash":"52ad364c2958cb3146c329052781f309e2d1c3d5","modified":1612159095108},{"_id":"source/about/index.md","hash":"8b2a36b81d94ba34f354e2de67277a63288f6023","modified":1612180666541},{"_id":"source/_posts/Adapter_Design_Pattern/Adapter_Design_Pattern.png","hash":"03bbf641ab5bc562e3e10dd896e5261297b6d82f","modified":1612159900051},{"_id":"source/categories/index.md","hash":"b79c0fb79258c5cc61a3d131f87bb7b9d603790c","modified":1517888941171},{"_id":"source/_posts/Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png","hash":"be3a6f41a2c8c1a1df0752792c1cb6327237fba3","modified":1612159959979},{"_id":"source/_posts/Command_Design_Pattern/Command_Design_Pattern_Simple.png","hash":"cd804cf2081188aaa5ed3e83e0b1a0b6545e59aa","modified":1612160201789},{"_id":"source/_posts/Command_Design_Pattern/Command_Design_Pattern_Detail.png","hash":"56ddfc6981a0ffff9de61283c583ee049a968e76","modified":1612160220962},{"_id":"source/_posts/Facade_Design_Pattern/Facade_Design_Pattern.png","hash":"d4cb20d59eee7076054c80a03e4b2ea3ea4408a3","modified":1612160302466},{"_id":"source/_posts/FactoryMethod_Design_Pattern/FactoryMethod_Design_Pattern.png","hash":"87540d4bb0e0bd83f8e61c244479e833cd1f2ffa","modified":1612159870580},{"_id":"source/_posts/Flyweight_Design_Pattern/flyweight_uml_fig.png","hash":"39f35ee538e02f1dc7f86620d5ab3c33681826cb","modified":1612012673525},{"_id":"source/_posts/Linux_Introduction/Linux_Distribution.jpg","hash":"e8c3cb866d7c5da0c0bc4a486dd625c89616e111","modified":1612099929410},{"_id":"source/_posts/Iterator_Design_Pattern/Iterator_Design_Pattern.png","hash":"5b98de31903ee4851fec1aaa07c496416ed1e809","modified":1612159712585},{"_id":"source/_posts/Linux_Introduction/cd_ls.gif","hash":"862df21f7b01352c632e251084e3cb796edeec70","modified":1612104560070},{"_id":"source/_posts/Linux_Introduction/apt_install_vim.gif","hash":"5b846002956eb02ae5a4f3f4a47171269e9f23a9","modified":1612105252487},{"_id":"source/_posts/Linux_Introduction/terminal.png","hash":"30a4417b88ffd2beeba65ea62f8ea26459741970","modified":1612105534550},{"_id":"source/_posts/Memento_Design_Pattern/Memento_Design_Pattern.png","hash":"cd001816383d017768675737e6d3fa6c1f904af1","modified":1612160058422},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG","hash":"3643c1e52c50a424d2f5532098bbff83ced55ffb","modified":1612162670676},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG","hash":"e9d0452f32132b74fb2b78398328b58187d49499","modified":1612162682440},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG","hash":"1de745ed0ac663283a9e794e974d789662370cd9","modified":1612162569011},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG","hash":"37449ecb7f3b93978efc90e4a101958382d938e3","modified":1612162634904},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG","hash":"0b9ef6489733dc1be2b9d181361e675a44d1bbbf","modified":1612162658348},{"_id":"source/_posts/Observe_Design_Pattern/Observe_Design_Pattern.png","hash":"7a03af061bf891d65f65e01ff0d65b8da5c505a2","modified":1612160018107},{"_id":"source/_posts/Proxy_Design_Pattern/Proxy_Design_Pattern.png","hash":"a4aac1bbeedc3b285a1a3941c75f4133baeedd0a","modified":1612159787173},{"_id":"source/_posts/State_Design_Pattern/State_Design_Pattern_simple.png","hash":"876fa4a9ad63b8f26a77bd8c2d6f04e2c782f992","modified":1612160156219},{"_id":"source/_posts/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png","hash":"5211acc6227c77c63c016fa07b445674f45e95d0","modified":1612159830049},{"_id":"source/_posts/Linux_Introduction/vim_txt.gif","hash":"b450313622726025e8bdb7b7523554babb63042b","modified":1612105685089},{"_id":"source/_posts/Mediator_Design_Pattern/Mediator_Design_Pattern.png","hash":"69621549835dc7f18f95dfe028ed66f412445060","modified":1612160260096},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG","hash":"17bd03c23d53cb06c5297f5eada51bdf5739fe06","modified":1612162558303},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG","hash":"4c032e1fd465214eb8775a65693e3fb0c5dc46e9","modified":1612162706688},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG","hash":"4c8514b76cf6ec49c7a172461223f4555943b935","modified":1612162720720},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG","hash":"765262bbb29aa6882c4621e0c44cf45bfc85e8ec","modified":1612162581675},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG","hash":"c91eb0616c64584af42b0e500e6bf64eb80c26a5","modified":1612162594883},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG","hash":"98f2fbadef6bf3dc977de579a45749838e00a09d","modified":1612162610323},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG","hash":"ce209b020bac2e8e3a6148ca6da18f595b457667","modified":1612162624219},{"_id":"source/schedule/index.md","hash":"a51b251d88468e22a27aa3b01e0efc1e0ece2619","modified":1517888953382},{"_id":"source/tags/index.md","hash":"f7f094926a706ffdfd825e848138738086239bad","modified":1517888964312},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG","hash":"98856834f118bea59a1d3a474b429d82b00bb62e","modified":1612162647692},{"_id":"source/_posts/State_Design_Pattern/State_Design_Pattern_complex.png","hash":"15df63c72b4f03c5d255553500e6b219c90ed042","modified":1612160143626},{"_id":"source/_posts/Linux_Introduction/vi-vim-cheat-sheet.gif","hash":"d63852b98ea45f6b4b5a65112a05506d18ccc501","modified":1612158172783},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1612067964950},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1612067964954},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1612067964950},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1612067964954},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1612067964954},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1612067964954},{"_id":"themes/next/_config.yml","hash":"64de2ff1741f238b17aab8cff8b63547bac63032","modified":1612167284028},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1612067964954},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1612067964962},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1612067964954},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1612067964950},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1612067964950},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1612067964950},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1612067964954},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1612067964954},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1612067964954},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1612067964954},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1612067964954},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1612067964954},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1612067964954},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1612067964954},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1612067964954},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1612067964954},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1612067964954},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1612067964954},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1612067964954},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1612067964954},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1612067964954},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1612067964954},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1612067964954},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1612067964958},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1612067964958},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1612067964958},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1612067964958},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1612067964958},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1612067964958},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1612067964958},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1612067964958},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1612067964958},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1612067964958},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1612067964958},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1612067964958},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1612067964958},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1612067964958},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1612067964958},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1612067964958},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1612067964958},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1612067964958},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1612067964958},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1612067964958},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1612067964958},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1612067964958},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1612067964962},{"_id":"themes/next/layout/_layout.swig","hash":"36eb937a9d081889a1cec7711e58645037e73a0b","modified":1612085010844},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1612067964962},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1612067964962},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1612067964962},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1612067964962},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1612067964962},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1612067964962},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1612067964954},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1612067964954},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1612067964954},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1612067964950},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1612067964954},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1612067964954},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1612067964954},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1612067964954},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1612067964954},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1612067964954},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1612067964958},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1612067964958},{"_id":"themes/next/layout/_macro/post.swig","hash":"05cd85a68ed2887f944cdd2e11b598189f75048d","modified":1612084241399},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1612067964958},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1612067964958},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1612067964958},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1612067964958},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1612067964958},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1612067964958},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1612067964958},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1612067964958},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1612067964958},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1612067964954},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1612067964958},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1612067964962},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1612067964962},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1612067964962},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1612067964958},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1612067964962},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1612067964962},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1612067964962},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1612067964962},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1612067964962},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1612067964962},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1612067964962},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1612067964962},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1612067964962},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1612067964962},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1612067964962},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1612067964962},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1612067964962},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1612067964962},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1612067964962},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1612067964962},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1612067964962},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1612067964962},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1612067964962},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1612067964962},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1612067964962},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1612067964962},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1612067964966},{"_id":"themes/next/source/images/avatar.gif","hash":"bd68a0fbb03fdba592eb095b0f6e87023fa0a834","modified":1612165169694},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1612067964966},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1612067964954},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1612067964954},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1612067964966},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1612067964966},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1612067964966},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1612067964966},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"26d5f4a71a507fb682205377072a03a646ba9169","modified":1612165560894},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"55374d6c789826486d0971494b0ed6971a5d2a19","modified":1612165512902},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1612067964966},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1612067964966},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1612067964966},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1612067964966},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1612067964966},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1612067964966},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1612067964966},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1612067964966},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1612067964958},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1612067964958},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1612067964958},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1612067964958},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1612067964958},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1612067964958},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1612067964958},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1612067964958},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1612067964958},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1612067964966},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1612067964958},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1612067964958},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1612067964958},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1612067964958},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1612067964958},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1612067964958},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1612067964958},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1612067964958},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1612067964958},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1612067964958},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1612067964958},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1612067964958},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1612067964958},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1612067964958},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1612067964958},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1612067964958},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1612067964958},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1612067964958},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1612067964962},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1612067964962},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1612067964962},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1612067964962},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1612067964962},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1612067964962},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1612067964962},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1612067964962},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1612067964962},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1612067964962},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1612067964962},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1612067964962},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1612067964962},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1612067964962},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1612067964962},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1612067964962},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1612067964962},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1612067964962},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1612067964962},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1612067964962},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1612067964966},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1612067964962},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1612067964966},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1612067964966},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1612067964966},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1612067964966},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1612067964966},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1612067964966},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1612067964966},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1612067964966},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1612067964962},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1612067964966},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1612067964962},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1612067964962},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1612067964962},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1612067964962},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1612067964962},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1612067964966},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1612067964966},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1612067964966},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1612067964966},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1612067964962},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1612067964962},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1612067964962},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1612067964962},{"_id":"source/_posts/Linux_Introduction/softwareStore.png","hash":"48589951d33c918a8a8233076053efc551ea799e","modified":1612105138107},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1612067964966},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"516dba1ee1d86f9cff4916c49f34efaa874cd814","modified":1612165623598},{"_id":"themes/next/source/images/wechatpay.png","hash":"878af4f212a9ab0969185501a07086d65eb7d94e","modified":1612071087423},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1612067964966},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1612067964966},{"_id":"source/_posts/Linux_Introduction/top.gif","hash":"58c9c64557d60f1298d5070427f9a7a38504fa88","modified":1612105041784},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1612067964962},{"_id":"themes/next/source/images/scroll.png","hash":"443930af0ee54778babad7724291bfed9b431dd5","modified":1612094297418},{"_id":"themes/next/source/images/alipay.jpg","hash":"f1092f7050fe457616f2b6e7655632cc19bfdb5e","modified":1612071028423},{"_id":"source/_posts/Linux_Introduction/man_ls.gif","hash":"8e60b245a433367315c92e30f46302163b0297bc","modified":1612104036206},{"_id":"source/_posts/Linux_Introduction/ls_al.gif","hash":"136066f036e8fb5484a9accd5efd4d42f70652b1","modified":1612104947548},{"_id":"themes/next/source/images/logo.png","hash":"f7d2fc4e5e5d2fd92579dfd4354a94838ef6b0d3","modified":1612165427726},{"_id":"themes/next/source/images/logo.svg","hash":"32eb289a3ea794544539d86772be181d59bdec42","modified":1612165909306},{"_id":"source/_posts/Linux_Introduction/ls_help.gif","hash":"5f152238c5a378abb0f81305f34834d022933cdc","modified":1612104418843},{"_id":"source/_posts/Linux_Introduction/vimtutor.gif","hash":"efdd1fce0b1dc83b56082ce8a85bcac3c01d80b3","modified":1612157754478},{"_id":"public/atom.xml","hash":"b430dca4e16b81160541eaf9ec37646fee1f9116","modified":1612338281414},{"_id":"public/search.xml","hash":"729e4f2e4d9952802185ad53ec09becf362ebfe3","modified":1612338281414},{"_id":"public/sitemap.xml","hash":"10cd1c080be9cc7757223dc008eaee0536f9fdfd","modified":1612330657637},{"_id":"public/about/index.html","hash":"3f8bd9ffa00f161e3e24fd0bd88fd56d57b4c728","modified":1612338956570},{"_id":"public/categories/index.html","hash":"9241e5480ea6a4977e57bdb5773004ac825c1f31","modified":1612338956570},{"_id":"public/tags/index.html","hash":"804b95410037b74246f47c5251455b55d1d0061a","modified":1612338956570},{"_id":"public/archives/2018/03/index.html","hash":"663d58e97769190e88557118f43b3239b68735bd","modified":1612338956570},{"_id":"public/categories/DesignPattern/page/2/index.html","hash":"03334d74206f612ed3abec477605b379449fdfbc","modified":1612338956570},{"_id":"public/categories/Java/index.html","hash":"3a821575b09f72f0eb3d037005f78ca8ec138d34","modified":1612338956570},{"_id":"public/categories/linux/index.html","hash":"fa49173433d28f24eb951e030a81c25cf47c69b8","modified":1612338956570},{"_id":"public/categories/Java/JSP/index.html","hash":"58f30099475094ce95a05c68f9b78ce102179856","modified":1612338956570},{"_id":"public/categories/soft/index.html","hash":"f7151f198a31390e5aae96bf4306e9ba35a6d1a2","modified":1612338956570},{"_id":"public/categories/Hexo/index.html","hash":"91bd91a841bc643fc688459c3e0b7cc2cb23a9cb","modified":1612338956570},{"_id":"public/categories/matlab/index.html","hash":"53d9728d259c66b0afd89a2d70534349cca97f7e","modified":1612338956570},{"_id":"public/tags/Adapter/index.html","hash":"d32c5f203b8d69fa5065e4ac24d99d19f5684148","modified":1612338956570},{"_id":"public/tags/Command/index.html","hash":"ff33060bfa8519672cd5df46f542e288e9f80188","modified":1612338956570},{"_id":"public/tags/Facade/index.html","hash":"3681b1fbbf0e9f539b080ad740c5512bf2363c3b","modified":1612338956570},{"_id":"public/tags/FactoryMethod/index.html","hash":"3bf0f5db14f1b3831e968119fd2948e3fc5ffbdc","modified":1612338956570},{"_id":"public/tags/Flyweight/index.html","hash":"3c6b041da5adc5d4cee386aa8879b8ef23c4fa04","modified":1612338956570},{"_id":"public/tags/Iterator/index.html","hash":"2ea20986b04f262a61834b5e281f6c74ce541d4d","modified":1612338956570},{"_id":"public/tags/tags/index.html","hash":"9cec2ce26011b9934abc0bb7e00a398ff2e689c3","modified":1612338956570},{"_id":"public/tags/linux/index.html","hash":"62a1b13e846eff57c4208474178810f4217c5b87","modified":1612338956570},{"_id":"public/tags/Mediator/index.html","hash":"a7c0de8629a45ccaf58fbbc87a93b2ea9b508248","modified":1612338956570},{"_id":"public/tags/Memento/index.html","hash":"19ecf72584a172e75e5dda7d510300b564c4c5f5","modified":1612338956570},{"_id":"public/tags/crack/index.html","hash":"e4aafbd3e223d41e1d0f918b05423a683d434819","modified":1612338956570},{"_id":"public/tags/Myeclipse/index.html","hash":"b7f13f38dd6d91e99a305188d24c72deca0321e0","modified":1612338956570},{"_id":"public/tags/Observe/index.html","hash":"d967f7969b4a94f2402ecf69a05ce22a7db90920","modified":1612338956570},{"_id":"public/tags/Proxy/index.html","hash":"8bcb5483c7c2e49692d25ca08ce24ea51d0281bc","modified":1612338956570},{"_id":"public/tags/state/index.html","hash":"24ce3a6cbf06f1cba6e69896803b5951d46828b1","modified":1612338956570},{"_id":"public/tags/TemplateMethod/index.html","hash":"de35b0c6210dc2797efe12658f6ad7168808b016","modified":1612338956570},{"_id":"public/tags/Hexo/index.html","hash":"313cf8be51fd8cb3501bf644fe37f06cce9b7b8c","modified":1612338956570},{"_id":"public/tags/officeWord/index.html","hash":"24cb86ea4dc578450826cbeea32edb6024b4a295","modified":1612338956570},{"_id":"public/tags/function/index.html","hash":"91724c8e936e0d6d5b9040e1d0347c7d07ef0753","modified":1612338956570},{"_id":"public/schedule/index.html","hash":"541963a55e4325949e2286cbb2dc97c7e5e45a3b","modified":1612338956570},{"_id":"public/2018/03/19/Linux_Introduction/index.html","hash":"7ad839559ef7b2abd50ab5ce2e4df169939a4dcb","modified":1612338956570},{"_id":"public/2018/02/26/matlab_function_type/index.html","hash":"488dd5647e9bac3f6e4924e6d80cac224f0b1de0","modified":1612338956570},{"_id":"public/2018/02/17/JSP自定义标签/index.html","hash":"4d153d452ef55079eff7f4a681efdb0b66445c47","modified":1612338956570},{"_id":"public/2018/02/14/Iterator_Design_Pattern/index.html","hash":"f57e1d0ea63cb1beb4f979d79c0130882a3f5edf","modified":1612338956570},{"_id":"public/2018/02/14/Proxy_Design_Pattern/index.html","hash":"66f57722725b02398c83184a99fa04083eab4679","modified":1612338956570},{"_id":"public/2018/02/13/TemplateMethod_Design_Pattern/index.html","hash":"313f152c1520dba584ed002e5ce626896573a30d","modified":1612338956570},{"_id":"public/2018/02/13/FactoryMethod_Design_Pattern/index.html","hash":"8dbf2f5bb041b95b1387509cb10ad91e71743ed3","modified":1612338956570},{"_id":"public/2018/02/13/Adapter_Design_Pattern/index.html","hash":"569f5b5e2a4f04b8534cb198847b663404a44c1b","modified":1612338956570},{"_id":"public/2018/02/12/Flyweight_Design_Pattern/index.html","hash":"b47e3aa031839b8de24296ac86b54175c1f34b69","modified":1612338956570},{"_id":"public/2018/02/12/Observe_Design_Pattern/index.html","hash":"5da2d5fa6e7ca68c052e1558f535c470a09cd387","modified":1612338956570},{"_id":"public/2018/02/12/Memento_Design_Pattern/index.html","hash":"155060665734cdc66af61ec1b59a5a5eecafacf7","modified":1612338956570},{"_id":"public/2018/02/12/State_Design_Pattern/index.html","hash":"efbc69bbc9a3a831294c49130777adcf68bb4b50","modified":1612338956570},{"_id":"public/2018/02/10/Command_Design_Pattern/index.html","hash":"2b07b1c620106587c6f63f55c9037b790a62d385","modified":1612338956570},{"_id":"public/2018/02/09/Mediator_Design_Pattern/index.html","hash":"b463c6fa647faa8eed750e3eab24501babd4095a","modified":1612338956570},{"_id":"public/2018/02/09/Facade_Design_Pattern/index.html","hash":"4be30b357ef6ba3ad82a837245122a68309d349e","modified":1612338956570},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/index.html","hash":"59c89cf1764b78fb6503798777d7a172a0ff91c3","modified":1612338956570},{"_id":"public/2018/02/06/build_hexo_problem/index.html","hash":"da4bc6cb29e63dd105243f6322222dca3b6f8929","modified":1612338956570},{"_id":"public/2018/02/06/hello-world/index.html","hash":"9519e22fdf6ce4b6a7de62515e77560d6e5fd4cf","modified":1612338956570},{"_id":"public/archives/index.html","hash":"8eca97cf0cb651203468e719ee92cad0dcbd0614","modified":1612338956570},{"_id":"public/archives/page/2/index.html","hash":"966f9b1bc7bd36e970d8ae8dae1df8bf1ad5106c","modified":1612338956570},{"_id":"public/archives/2018/index.html","hash":"8c756255357518a6c97921d750582d9087537092","modified":1612338956570},{"_id":"public/archives/2018/page/2/index.html","hash":"9d7b0afe3576a1b85f76f1c4f23dedb19590d024","modified":1612338956570},{"_id":"public/archives/2018/02/index.html","hash":"d2bcd5fd28f6be66e5521c9f44f107a458be1bdc","modified":1612338956570},{"_id":"public/archives/2018/02/page/2/index.html","hash":"0e693836853a18c2cbc8418a841aed54107acc32","modified":1612338956570},{"_id":"public/categories/DesignPattern/index.html","hash":"39891ca4dcff224167950b341b1572b912d43094","modified":1612338956570},{"_id":"public/index.html","hash":"0d632ed0a228f87362d7d498590cda3bfa3c4a9f","modified":1612338956570},{"_id":"public/page/2/index.html","hash":"b28c01659ec3654655d0f3e3f8faaecaf2ec6bd8","modified":1612338956570},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1612166085819},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1612166085819},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1612166085819},{"_id":"public/images/avatar.gif","hash":"bd68a0fbb03fdba592eb095b0f6e87023fa0a834","modified":1612166085819},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1612166085819},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1612166085819},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1612166085819},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1612166085819},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1612166085819},{"_id":"public/images/favicon-16x16-next.png","hash":"26d5f4a71a507fb682205377072a03a646ba9169","modified":1612166085819},{"_id":"public/images/favicon-32x32-next.png","hash":"55374d6c789826486d0971494b0ed6971a5d2a19","modified":1612166085819},{"_id":"public/images/scroll.png","hash":"443930af0ee54778babad7724291bfed9b431dd5","modified":1612166085819},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1612166085819},{"_id":"public/robots.txt","hash":"e23d51e98251477afeb793114fd3ba99c8f1c0f9","modified":1612166085819},{"_id":"public/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern.png","hash":"03bbf641ab5bc562e3e10dd896e5261297b6d82f","modified":1612166085819},{"_id":"public/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png","hash":"be3a6f41a2c8c1a1df0752792c1cb6327237fba3","modified":1612166085819},{"_id":"public/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Detail.png","hash":"56ddfc6981a0ffff9de61283c583ee049a968e76","modified":1612166085819},{"_id":"public/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Simple.png","hash":"cd804cf2081188aaa5ed3e83e0b1a0b6545e59aa","modified":1612166085819},{"_id":"public/2018/02/09/Facade_Design_Pattern/Facade_Design_Pattern.png","hash":"d4cb20d59eee7076054c80a03e4b2ea3ea4408a3","modified":1612166085819},{"_id":"public/2018/02/13/FactoryMethod_Design_Pattern/FactoryMethod_Design_Pattern.png","hash":"87540d4bb0e0bd83f8e61c244479e833cd1f2ffa","modified":1612166085819},{"_id":"public/2018/02/12/Flyweight_Design_Pattern/flyweight_uml_fig.png","hash":"39f35ee538e02f1dc7f86620d5ab3c33681826cb","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/Linux_Distribution.jpg","hash":"e8c3cb866d7c5da0c0bc4a486dd625c89616e111","modified":1612166085819},{"_id":"public/2018/02/14/Iterator_Design_Pattern/Iterator_Design_Pattern.png","hash":"5b98de31903ee4851fec1aaa07c496416ed1e809","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/apt_install_vim.gif","hash":"5b846002956eb02ae5a4f3f4a47171269e9f23a9","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/cd_ls.gif","hash":"862df21f7b01352c632e251084e3cb796edeec70","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/terminal.png","hash":"30a4417b88ffd2beeba65ea62f8ea26459741970","modified":1612166085819},{"_id":"public/2018/02/12/Memento_Design_Pattern/Memento_Design_Pattern.png","hash":"cd001816383d017768675737e6d3fa6c1f904af1","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG","hash":"3643c1e52c50a424d2f5532098bbff83ced55ffb","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG","hash":"e9d0452f32132b74fb2b78398328b58187d49499","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG","hash":"1de745ed0ac663283a9e794e974d789662370cd9","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG","hash":"37449ecb7f3b93978efc90e4a101958382d938e3","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG","hash":"0b9ef6489733dc1be2b9d181361e675a44d1bbbf","modified":1612166085819},{"_id":"public/2018/02/12/Observe_Design_Pattern/Observe_Design_Pattern.png","hash":"7a03af061bf891d65f65e01ff0d65b8da5c505a2","modified":1612166085819},{"_id":"public/2018/02/14/Proxy_Design_Pattern/Proxy_Design_Pattern.png","hash":"a4aac1bbeedc3b285a1a3941c75f4133baeedd0a","modified":1612166085819},{"_id":"public/2018/02/12/State_Design_Pattern/State_Design_Pattern_simple.png","hash":"876fa4a9ad63b8f26a77bd8c2d6f04e2c782f992","modified":1612166085819},{"_id":"public/live2dw/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1612166085819},{"_id":"public/2018/02/13/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png","hash":"5211acc6227c77c63c016fa07b445674f45e95d0","modified":1612166085819},{"_id":"public/live2dw/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1612166085819},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1612166085819},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1612166085819},{"_id":"public/images/apple-touch-icon-next.png","hash":"516dba1ee1d86f9cff4916c49f34efaa874cd814","modified":1612166085819},{"_id":"public/images/wechatpay.png","hash":"878af4f212a9ab0969185501a07086d65eb7d94e","modified":1612166085819},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1612166085819},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/vim_txt.gif","hash":"b450313622726025e8bdb7b7523554babb63042b","modified":1612166085819},{"_id":"public/2018/02/09/Mediator_Design_Pattern/Mediator_Design_Pattern.png","hash":"69621549835dc7f18f95dfe028ed66f412445060","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG","hash":"17bd03c23d53cb06c5297f5eada51bdf5739fe06","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG","hash":"4c032e1fd465214eb8775a65693e3fb0c5dc46e9","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG","hash":"4c8514b76cf6ec49c7a172461223f4555943b935","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG","hash":"765262bbb29aa6882c4621e0c44cf45bfc85e8ec","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG","hash":"c91eb0616c64584af42b0e500e6bf64eb80c26a5","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG","hash":"98f2fbadef6bf3dc977de579a45749838e00a09d","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG","hash":"ce209b020bac2e8e3a6148ca6da18f595b457667","modified":1612166085819},{"_id":"public/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG","hash":"98856834f118bea59a1d3a474b429d82b00bb62e","modified":1612166085819},{"_id":"public/2018/02/12/State_Design_Pattern/State_Design_Pattern_complex.png","hash":"15df63c72b4f03c5d255553500e6b219c90ed042","modified":1612166085819},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1612166085819},{"_id":"public/assets/js/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1612166085819},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1612166085819},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1612166085819},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1612166085819},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1612166085819},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1612166085819},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1612166085819},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1612166085819},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1612166085819},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/vi-vim-cheat-sheet.gif","hash":"d63852b98ea45f6b4b5a65112a05506d18ccc501","modified":1612166085819},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1612166085819},{"_id":"public/css/main.css","hash":"7949d89c52505a3111435bbd29341c4d7c1d2eaa","modified":1612166085819},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1612166085819},{"_id":"public/images/alipay.jpg","hash":"f1092f7050fe457616f2b6e7655632cc19bfdb5e","modified":1612166085819},{"_id":"public/live2dw/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1612166085819},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1612166085819},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1612166085819},{"_id":"public/live2dw/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/softwareStore.png","hash":"48589951d33c918a8a8233076053efc551ea799e","modified":1612166085819},{"_id":"public/images/logo.png","hash":"f7d2fc4e5e5d2fd92579dfd4354a94838ef6b0d3","modified":1612166085819},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/top.gif","hash":"58c9c64557d60f1298d5070427f9a7a38504fa88","modified":1612166085819},{"_id":"public/images/logo.svg","hash":"32eb289a3ea794544539d86772be181d59bdec42","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/man_ls.gif","hash":"8e60b245a433367315c92e30f46302163b0297bc","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/ls_al.gif","hash":"136066f036e8fb5484a9accd5efd4d42f70652b1","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/ls_help.gif","hash":"5f152238c5a378abb0f81305f34834d022933cdc","modified":1612166085819},{"_id":"public/2018/03/19/Linux_Introduction/vimtutor.gif","hash":"efdd1fce0b1dc83b56082ce8a85bcac3c01d80b3","modified":1612166085819},{"_id":"themes/next/source/images/favicon32_32.ico","hash":"19fe7a70a38f36e3a77a24304173223507d3083b","modified":1612166790541},{"_id":"themes/next/source/images/favicon_16_16.ico","hash":"b7119fca6413f96b4168673a273a08ebfc110bca","modified":1612166906022},{"_id":"public/images/favicon32_32.ico","hash":"19fe7a70a38f36e3a77a24304173223507d3083b","modified":1612167003407},{"_id":"public/images/favicon_16_16.ico","hash":"b7119fca6413f96b4168673a273a08ebfc110bca","modified":1612167003407},{"_id":"source/_posts/Matlab-Live-Editor-Introduction.md","hash":"edd5a6e891dbf655b5907819bf3eb3524c3e720c","modified":1612338271508},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/break_section_live_editor.gif","hash":"9e10ba6eeded0861a6d81228e72a27a2fc270852","modified":1612254749692},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/change_code_live_editor.gif","hash":"efe0fa1dbbcc137d62b119d6f2168ae4afe834d1","modified":1612255569565},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif","hash":"879baad9234ca1431d4db46dc53ccc3c0ab98a5c","modified":1612255387744},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/run_code_live_editor.gif","hash":"070071289842dd3747158ee0a9d7d327348d0d40","modified":1612254416171},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif","hash":"70f5aaed560faa3473c76b45c25d9d1856954da5","modified":1612250300166},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif","hash":"8ffb005441c646542015042e47327163d34ce322","modified":1612257067553},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif","hash":"e6ec3987fb1756f70467be04261a3ea23c234d00","modified":1612253333311},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/text_format_live_editor.gif","hash":"5abe6678e902f468e70a38a6d569cd03ffd60d2c","modified":1612256155591},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif","hash":"b58b776a792646bd6d714b24f847b98d88c2fff3","modified":1612250130961},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/show_result_live_editor.gif","hash":"2e2ab08720edf061f790e7604049ed45ac9cd041","modified":1612253867033},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif","hash":"bdf6527cd78144c80880c62446a56208658e13b5","modified":1612256882453},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif","hash":"cf2ca58042d99238e89f3457a5a7bdc827e0d4e2","modified":1612257785860},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/save_as_live_editor.gif","hash":"4008d3a0b9c5d46e40a142d73acbccb15a3e6fc5","modified":1612257544622},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif","hash":"61fae55dc7b86f3ddd2f8e46d349005e89ca6e24","modified":1612255078336},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif","hash":"3635edb8be3aa8d84c833ab63592d6c63c2c68c2","modified":1612256447275},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/index.html","hash":"3b5bfb7a6b64c99ad809bfccdfd0aa0f844c9b3d","modified":1612338956570},{"_id":"public/archives/2021/index.html","hash":"f720129e57041609862203a924bc633cd91ecfae","modified":1612338956570},{"_id":"public/archives/2021/02/index.html","hash":"bb6ceda3de8547957e8bb61d9e3f5f5c3e30a995","modified":1612338956570},{"_id":"public/tags/matlab-live-editor/index.html","hash":"eadd48b89bff8940c2a463dbb4ac56fbf529580b","modified":1612338956570},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/change_code_live_editor.gif","hash":"efe0fa1dbbcc137d62b119d6f2168ae4afe834d1","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif","hash":"879baad9234ca1431d4db46dc53ccc3c0ab98a5c","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/run_code_live_editor.gif","hash":"070071289842dd3747158ee0a9d7d327348d0d40","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/break_section_live_editor.gif","hash":"9e10ba6eeded0861a6d81228e72a27a2fc270852","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif","hash":"70f5aaed560faa3473c76b45c25d9d1856954da5","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/show_result_live_editor.gif","hash":"2e2ab08720edf061f790e7604049ed45ac9cd041","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif","hash":"e6ec3987fb1756f70467be04261a3ea23c234d00","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif","hash":"8ffb005441c646542015042e47327163d34ce322","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/text_format_live_editor.gif","hash":"5abe6678e902f468e70a38a6d569cd03ffd60d2c","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif","hash":"b58b776a792646bd6d714b24f847b98d88c2fff3","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif","hash":"bdf6527cd78144c80880c62446a56208658e13b5","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif","hash":"61fae55dc7b86f3ddd2f8e46d349005e89ca6e24","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif","hash":"cf2ca58042d99238e89f3457a5a7bdc827e0d4e2","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif","hash":"3635edb8be3aa8d84c833ab63592d6c63c2c68c2","modified":1612257893670},{"_id":"public/2021/02/02/Matlab-Live-Editor-Introduction/save_as_live_editor.gif","hash":"4008d3a0b9c5d46e40a142d73acbccb15a3e6fc5","modified":1612257893670}],"Category":[{"name":"DesignPattern","_id":"ckkma2a410004ytcvaj196qzy"},{"name":"Java","_id":"ckkma2a4f000oytcvbu1ufbj3"},{"name":"linux","_id":"ckkma2a4l000vytcvg2bl0beh"},{"name":"JSP","parent":"ckkma2a4f000oytcvbu1ufbj3","_id":"ckkma2a4n0012ytcv3ia87nos"},{"name":"soft","_id":"ckkma2a4q0019ytcvgd8u8sin"},{"name":"Hexo","_id":"ckkma2a4w001iytcv42ul1ybw"},{"name":"matlab","_id":"ckkma2a4x001sytcv29eh2ibt"}],"Data":[],"Page":[{"title":"About seanchrist","date":"2018-02-05T16:39:42.000Z","type":"about","comments":0,"_content":"\n# Introduction #\n\nHello !  I am seanchrist !  Now I major in electrical engineering.  I like swimming, reading and movies ! \n\nYou can contact me with GPG encryption email !  The followings is my GPG public key and Key fingerprint! \n\nPlease confirm the Key fingerprint !\n\n---\n\n# GPG Public Key #\n\nEmail: seanchristspc@gmail.com\n\nKey fingerprint:  6B5C 2B69 0CF5 6ECC CE91  2519 0086 1449 5306 9034\n\nExpires Time: 2023-08-08\n\n---\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBF8uSnMBEADfWTkaYo/DNkc7hodBaEtTgoooTZaC3YON8WEBm0lehUIa/qN0\n2cfVUqXwwI0IHduYwr2WJvsvLFTiHskYqmLGaPyHkz1GZnStRwoI8soNaAH32LsN\nXDbImrodjRDYoe7/jpYsaKY08WlhesgLuidaP0iMwoCjttzL3c3me0oJp+flIm6K\nBzCQc8+ZmKfAdEDb+QOH8llS5LiXQVniBLfhqxX3vy8dFKiB6YqD6rfmDN8bHMfu\nzIZ7mzXotFYd9gb1fcptfRIzwD156XhhKgEcA11jtblCqltJFdfeBgbVy4iseoNE\nenxV6IEQZ75oSxJHe9yPnkyaj1Bcf6YOw/gMUgu65hM692bTImsJsYX6Xuww/TWt\npT86eY/2UQLf9JqHiO2uI7hwKPzbmYcGQapBsYRgkNNLys3jxtSOwFiVJXQ7qhV7\nPtddlfVOl+GTzzKcV+vCeKd7/t+6oyMqBkzg4Hj9Jq27bD05qlRUniKccbSmN1n/\nWdpnon4rbmi9rk1acL7rdMpIcsBq0AAlyWt6FSGTrs7u8BGH1xVrRIQwLFnCd+An\niKufs/6pqo3+s22P9i88rfLBQxGMNyfRFwYXrxdkTRxtu2IUpOgXA655oVq2xUGO\nl5MtIU920T/DjuJWjWXt6trnPwg/s8p2KSaHnk0KU/VpRCCaB40NQnzaAQARAQAB\ntD1zZWFuY2hyaXN0IGdtYWlsIChzZWFuY2hyaXN0IGdtYWlsKSA8c2VhbmNocmlz\ndHNwY0BnbWFpbC5jb20+iQJUBBMBCgA+FiEEa1wraQz1bszOkSUZAIYUSVMGkDQF\nAl8uSnMCGwMFCQWjmoAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQAIYUSVMG\nkDRyOhAAreWBpf1P/WrICqmAXGx02efNZ0Jz7libNXNuVCp7k329NrGvblI1o6Od\nudlFNcCEnP2lwZSp+IYY7sfj9HtkKohP36AaSI1ehmoXFeJvMNiYR9Az0JWu0Z7I\nSn/2OAwqzwIw0lUU8Hh2GDihKbJ3Kyj2uQoaXsLtcT6efALXXqVErxx9uCHBaOrU\nt8DzM8Wj3oRIFRsAlzxa/bcUESyrwW5Py7Y3CwVW3ybVGS9RWmMo3zYYji1xm+o8\nBOtEKQwmUoMlvU4XF7fEzjj9RFtIWm2MZwh1IFutVvXwnMpNL74pjXrCOPLWIJAG\nbvh3xEc4CmK8FnfLfj67iq8L/X9waghm9WU4c3fel6Ms3bPNrHFGWgM036xQyS5Q\npRDQBz3QSNVOySNPwyA/LDdko0+aZB7reRl3J4XXU9y8Z8SG9hnehByl+eVts33C\n1LgIJRgZxyRtN72r544qI3nYHIXUBMgaH1GrhPCpeaykdaRugdWZlMK9ZowBgPAa\nZGgH3tnJLwhMbv8PTb+jGZ3Lx6h52NuFZ9P6ulVY48hQDahVmqlg+d+JCkhdDLcb\nLVdYlxiQR+5zWaMKzdlNrZw7KQOhA6aD+qdF1lSQqd7/DvBXfoYg6pnQ3zrL1bHP\nRNo9h4t3CzmzbQ6NRcjcUPtUIVv+aBZQel1glT15D0LpcXmjm025Ag0EXy5KcwEQ\nAO7H4CT4+Ze+nlIa9gXNDE7BhvRxJY0rwCTEbCQ7AGTuCHGk9d6Uh8J6mvVpiujK\nildUL1v5EuwfaqElLuDWGUm/wtK/rErVTAxK+Z8HbwNIszNWTUumiLWT0id8BsSN\ncgRjhHUKtfnuwRnaH95cmuIlwjXv5AmFTOKesJJG6B+1qtr4917QOEkpLW3+Z1Zm\nPZE5IUU65Ae9o5yccNgAkffH/GdmHIW5v2aUa4ZsseElrdIHP+3Sx3mDWbdzflOr\nYkmLDTcEgvK6likkE2USjbp26hSTi8wZAPw3ZPmrH+632zifo9kU2JBfEsPJ8AwB\nIxpaM36XOTO+B35Mp4pquj9R2yi0F3rD6X3DW0PvIsnNBowT3b/4K81cEDOE974e\nlqNXsttYGRaBp/8tv9vksjiIda6bQ4mGJy+5WQE51T6OHXdOW/yUSet7/pjSi5iu\nUHqiuo1pgBoygYsRQa+87bOJR2WJogh26/Tn3PAayzy/CHERuIQP+BWTBvdfe5oA\nBwvewPhms1YSFGsLUrE5Gzrs7FBIRstLqkTPCaHWUAo2QVDdlMMjkXEobOMrBeYG\n1PaYTic5Jx9ZMB89+U90OaktWsTZWCrc5Z1BfIXW3iwTYY+iOk438R2rxhTvXS7F\nymP2KSh2rCvOcgv4Y7Krz2bIA44XLSPL6Y2uCnlOegw3ABEBAAGJAjwEGAEKACYW\nIQRrXCtpDPVuzM6RJRkAhhRJUwaQNAUCXy5KcwIbDAUJBaOagAAKCRAAhhRJUwaQ\nNN3XEADcx5PH7msMLYuY4fTKG1kHKTFvaMShMfrIqlxSoO3qY30jqFJj3KgBVSJO\nsGLBi9WpBMU7vp8RheEetylt+JdsnzuIqTXmaTYqmcJto16nQADMr4Lpz7JsmEKU\nScS38RNTxpvCxlzb7PmyLi1w/2sqiY+oFcyaRpUE1g+2kVtLJ/QmhNOidmfDL6OW\nUgttcnY84eSH08zMoxTJS28bvjkTNeFBmnckEsFg3H702c0KVFGkguvE5v+wCwqM\nSnC/KP6mAbhsVrevuaOGRsWnVABY9HItieToVYhL9bfkGMWUEyNgFvAllj5IdabA\nDpVNvXKvwStkCjBIR0b4AI+64T/MqVWy8vKu0Fig0LqCPBWoeRT+N8cVDLApoYUx\n---\n\n\n \n\n\n\n","source":"about/index.md","raw":"---\ntitle: About seanchrist\ndate: 2018-02-05 16:39:42\ntype: \"about\"\ncomments: false\n\n---\n\n# Introduction #\n\nHello !  I am seanchrist !  Now I major in electrical engineering.  I like swimming, reading and movies ! \n\nYou can contact me with GPG encryption email !  The followings is my GPG public key and Key fingerprint! \n\nPlease confirm the Key fingerprint !\n\n---\n\n# GPG Public Key #\n\nEmail: seanchristspc@gmail.com\n\nKey fingerprint:  6B5C 2B69 0CF5 6ECC CE91  2519 0086 1449 5306 9034\n\nExpires Time: 2023-08-08\n\n---\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBF8uSnMBEADfWTkaYo/DNkc7hodBaEtTgoooTZaC3YON8WEBm0lehUIa/qN0\n2cfVUqXwwI0IHduYwr2WJvsvLFTiHskYqmLGaPyHkz1GZnStRwoI8soNaAH32LsN\nXDbImrodjRDYoe7/jpYsaKY08WlhesgLuidaP0iMwoCjttzL3c3me0oJp+flIm6K\nBzCQc8+ZmKfAdEDb+QOH8llS5LiXQVniBLfhqxX3vy8dFKiB6YqD6rfmDN8bHMfu\nzIZ7mzXotFYd9gb1fcptfRIzwD156XhhKgEcA11jtblCqltJFdfeBgbVy4iseoNE\nenxV6IEQZ75oSxJHe9yPnkyaj1Bcf6YOw/gMUgu65hM692bTImsJsYX6Xuww/TWt\npT86eY/2UQLf9JqHiO2uI7hwKPzbmYcGQapBsYRgkNNLys3jxtSOwFiVJXQ7qhV7\nPtddlfVOl+GTzzKcV+vCeKd7/t+6oyMqBkzg4Hj9Jq27bD05qlRUniKccbSmN1n/\nWdpnon4rbmi9rk1acL7rdMpIcsBq0AAlyWt6FSGTrs7u8BGH1xVrRIQwLFnCd+An\niKufs/6pqo3+s22P9i88rfLBQxGMNyfRFwYXrxdkTRxtu2IUpOgXA655oVq2xUGO\nl5MtIU920T/DjuJWjWXt6trnPwg/s8p2KSaHnk0KU/VpRCCaB40NQnzaAQARAQAB\ntD1zZWFuY2hyaXN0IGdtYWlsIChzZWFuY2hyaXN0IGdtYWlsKSA8c2VhbmNocmlz\ndHNwY0BnbWFpbC5jb20+iQJUBBMBCgA+FiEEa1wraQz1bszOkSUZAIYUSVMGkDQF\nAl8uSnMCGwMFCQWjmoAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQAIYUSVMG\nkDRyOhAAreWBpf1P/WrICqmAXGx02efNZ0Jz7libNXNuVCp7k329NrGvblI1o6Od\nudlFNcCEnP2lwZSp+IYY7sfj9HtkKohP36AaSI1ehmoXFeJvMNiYR9Az0JWu0Z7I\nSn/2OAwqzwIw0lUU8Hh2GDihKbJ3Kyj2uQoaXsLtcT6efALXXqVErxx9uCHBaOrU\nt8DzM8Wj3oRIFRsAlzxa/bcUESyrwW5Py7Y3CwVW3ybVGS9RWmMo3zYYji1xm+o8\nBOtEKQwmUoMlvU4XF7fEzjj9RFtIWm2MZwh1IFutVvXwnMpNL74pjXrCOPLWIJAG\nbvh3xEc4CmK8FnfLfj67iq8L/X9waghm9WU4c3fel6Ms3bPNrHFGWgM036xQyS5Q\npRDQBz3QSNVOySNPwyA/LDdko0+aZB7reRl3J4XXU9y8Z8SG9hnehByl+eVts33C\n1LgIJRgZxyRtN72r544qI3nYHIXUBMgaH1GrhPCpeaykdaRugdWZlMK9ZowBgPAa\nZGgH3tnJLwhMbv8PTb+jGZ3Lx6h52NuFZ9P6ulVY48hQDahVmqlg+d+JCkhdDLcb\nLVdYlxiQR+5zWaMKzdlNrZw7KQOhA6aD+qdF1lSQqd7/DvBXfoYg6pnQ3zrL1bHP\nRNo9h4t3CzmzbQ6NRcjcUPtUIVv+aBZQel1glT15D0LpcXmjm025Ag0EXy5KcwEQ\nAO7H4CT4+Ze+nlIa9gXNDE7BhvRxJY0rwCTEbCQ7AGTuCHGk9d6Uh8J6mvVpiujK\nildUL1v5EuwfaqElLuDWGUm/wtK/rErVTAxK+Z8HbwNIszNWTUumiLWT0id8BsSN\ncgRjhHUKtfnuwRnaH95cmuIlwjXv5AmFTOKesJJG6B+1qtr4917QOEkpLW3+Z1Zm\nPZE5IUU65Ae9o5yccNgAkffH/GdmHIW5v2aUa4ZsseElrdIHP+3Sx3mDWbdzflOr\nYkmLDTcEgvK6likkE2USjbp26hSTi8wZAPw3ZPmrH+632zifo9kU2JBfEsPJ8AwB\nIxpaM36XOTO+B35Mp4pquj9R2yi0F3rD6X3DW0PvIsnNBowT3b/4K81cEDOE974e\nlqNXsttYGRaBp/8tv9vksjiIda6bQ4mGJy+5WQE51T6OHXdOW/yUSet7/pjSi5iu\nUHqiuo1pgBoygYsRQa+87bOJR2WJogh26/Tn3PAayzy/CHERuIQP+BWTBvdfe5oA\nBwvewPhms1YSFGsLUrE5Gzrs7FBIRstLqkTPCaHWUAo2QVDdlMMjkXEobOMrBeYG\n1PaYTic5Jx9ZMB89+U90OaktWsTZWCrc5Z1BfIXW3iwTYY+iOk438R2rxhTvXS7F\nymP2KSh2rCvOcgv4Y7Krz2bIA44XLSPL6Y2uCnlOegw3ABEBAAGJAjwEGAEKACYW\nIQRrXCtpDPVuzM6RJRkAhhRJUwaQNAUCXy5KcwIbDAUJBaOagAAKCRAAhhRJUwaQ\nNN3XEADcx5PH7msMLYuY4fTKG1kHKTFvaMShMfrIqlxSoO3qY30jqFJj3KgBVSJO\nsGLBi9WpBMU7vp8RheEetylt+JdsnzuIqTXmaTYqmcJto16nQADMr4Lpz7JsmEKU\nScS38RNTxpvCxlzb7PmyLi1w/2sqiY+oFcyaRpUE1g+2kVtLJ/QmhNOidmfDL6OW\nUgttcnY84eSH08zMoxTJS28bvjkTNeFBmnckEsFg3H702c0KVFGkguvE5v+wCwqM\nSnC/KP6mAbhsVrevuaOGRsWnVABY9HItieToVYhL9bfkGMWUEyNgFvAllj5IdabA\nDpVNvXKvwStkCjBIR0b4AI+64T/MqVWy8vKu0Fig0LqCPBWoeRT+N8cVDLApoYUx\n---\n\n\n \n\n\n\n","updated":"2018-02-05T16:39:42.000Z","path":"about/index.html","_id":"ckkma2a3v0000ytcv0ov16t03","layout":"page","content":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Hello !  I am seanchrist !  Now I major in electrical engineering.  I like swimming, reading and movies ! </p>\n<p>You can contact me with GPG encryption email !  The followings is my GPG public key and Key fingerprint! </p>\n<p>Please confirm the Key fingerprint !</p>\n<hr>\n<h1 id=\"GPG-Public-Key\"><a href=\"#GPG-Public-Key\" class=\"headerlink\" title=\"GPG Public Key\"></a>GPG Public Key</h1><p>Email: <a href=\"mailto:&#x73;&#101;&#97;&#110;&#x63;&#x68;&#x72;&#105;&#115;&#x74;&#115;&#x70;&#x63;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#x73;&#101;&#97;&#110;&#x63;&#x68;&#x72;&#105;&#115;&#x74;&#115;&#x70;&#x63;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n<p>Key fingerprint:  6B5C 2B69 0CF5 6ECC CE91  2519 0086 1449 5306 9034</p>\n<p>Expires Time: 2023-08-08</p>\n<hr>\n<p>—–BEGIN PGP PUBLIC KEY BLOCK—–</p>\n<p>mQINBF8uSnMBEADfWTkaYo/DNkc7hodBaEtTgoooTZaC3YON8WEBm0lehUIa/qN0<br>2cfVUqXwwI0IHduYwr2WJvsvLFTiHskYqmLGaPyHkz1GZnStRwoI8soNaAH32LsN<br>XDbImrodjRDYoe7/jpYsaKY08WlhesgLuidaP0iMwoCjttzL3c3me0oJp+flIm6K<br>BzCQc8+ZmKfAdEDb+QOH8llS5LiXQVniBLfhqxX3vy8dFKiB6YqD6rfmDN8bHMfu<br>zIZ7mzXotFYd9gb1fcptfRIzwD156XhhKgEcA11jtblCqltJFdfeBgbVy4iseoNE<br>enxV6IEQZ75oSxJHe9yPnkyaj1Bcf6YOw/gMUgu65hM692bTImsJsYX6Xuww/TWt<br>pT86eY/2UQLf9JqHiO2uI7hwKPzbmYcGQapBsYRgkNNLys3jxtSOwFiVJXQ7qhV7<br>PtddlfVOl+GTzzKcV+vCeKd7/t+6oyMqBkzg4Hj9Jq27bD05qlRUniKccbSmN1n/<br>Wdpnon4rbmi9rk1acL7rdMpIcsBq0AAlyWt6FSGTrs7u8BGH1xVrRIQwLFnCd+An<br>iKufs/6pqo3+s22P9i88rfLBQxGMNyfRFwYXrxdkTRxtu2IUpOgXA655oVq2xUGO<br>l5MtIU920T/DjuJWjWXt6trnPwg/s8p2KSaHnk0KU/VpRCCaB40NQnzaAQARAQAB<br>tD1zZWFuY2hyaXN0IGdtYWlsIChzZWFuY2hyaXN0IGdtYWlsKSA8c2VhbmNocmlz<br>dHNwY0BnbWFpbC5jb20+iQJUBBMBCgA+FiEEa1wraQz1bszOkSUZAIYUSVMGkDQF<br>Al8uSnMCGwMFCQWjmoAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQAIYUSVMG<br>kDRyOhAAreWBpf1P/WrICqmAXGx02efNZ0Jz7libNXNuVCp7k329NrGvblI1o6Od<br>udlFNcCEnP2lwZSp+IYY7sfj9HtkKohP36AaSI1ehmoXFeJvMNiYR9Az0JWu0Z7I<br>Sn/2OAwqzwIw0lUU8Hh2GDihKbJ3Kyj2uQoaXsLtcT6efALXXqVErxx9uCHBaOrU<br>t8DzM8Wj3oRIFRsAlzxa/bcUESyrwW5Py7Y3CwVW3ybVGS9RWmMo3zYYji1xm+o8<br>BOtEKQwmUoMlvU4XF7fEzjj9RFtIWm2MZwh1IFutVvXwnMpNL74pjXrCOPLWIJAG<br>bvh3xEc4CmK8FnfLfj67iq8L/X9waghm9WU4c3fel6Ms3bPNrHFGWgM036xQyS5Q<br>pRDQBz3QSNVOySNPwyA/LDdko0+aZB7reRl3J4XXU9y8Z8SG9hnehByl+eVts33C<br>1LgIJRgZxyRtN72r544qI3nYHIXUBMgaH1GrhPCpeaykdaRugdWZlMK9ZowBgPAa<br>ZGgH3tnJLwhMbv8PTb+jGZ3Lx6h52NuFZ9P6ulVY48hQDahVmqlg+d+JCkhdDLcb<br>LVdYlxiQR+5zWaMKzdlNrZw7KQOhA6aD+qdF1lSQqd7/DvBXfoYg6pnQ3zrL1bHP<br>RNo9h4t3CzmzbQ6NRcjcUPtUIVv+aBZQel1glT15D0LpcXmjm025Ag0EXy5KcwEQ<br>AO7H4CT4+Ze+nlIa9gXNDE7BhvRxJY0rwCTEbCQ7AGTuCHGk9d6Uh8J6mvVpiujK<br>ildUL1v5EuwfaqElLuDWGUm/wtK/rErVTAxK+Z8HbwNIszNWTUumiLWT0id8BsSN<br>cgRjhHUKtfnuwRnaH95cmuIlwjXv5AmFTOKesJJG6B+1qtr4917QOEkpLW3+Z1Zm<br>PZE5IUU65Ae9o5yccNgAkffH/GdmHIW5v2aUa4ZsseElrdIHP+3Sx3mDWbdzflOr<br>YkmLDTcEgvK6likkE2USjbp26hSTi8wZAPw3ZPmrH+632zifo9kU2JBfEsPJ8AwB<br>IxpaM36XOTO+B35Mp4pquj9R2yi0F3rD6X3DW0PvIsnNBowT3b/4K81cEDOE974e<br>lqNXsttYGRaBp/8tv9vksjiIda6bQ4mGJy+5WQE51T6OHXdOW/yUSet7/pjSi5iu<br>UHqiuo1pgBoygYsRQa+87bOJR2WJogh26/Tn3PAayzy/CHERuIQP+BWTBvdfe5oA<br>BwvewPhms1YSFGsLUrE5Gzrs7FBIRstLqkTPCaHWUAo2QVDdlMMjkXEobOMrBeYG<br>1PaYTic5Jx9ZMB89+U90OaktWsTZWCrc5Z1BfIXW3iwTYY+iOk438R2rxhTvXS7F<br>ymP2KSh2rCvOcgv4Y7Krz2bIA44XLSPL6Y2uCnlOegw3ABEBAAGJAjwEGAEKACYW<br>IQRrXCtpDPVuzM6RJRkAhhRJUwaQNAUCXy5KcwIbDAUJBaOagAAKCRAAhhRJUwaQ<br>NN3XEADcx5PH7msMLYuY4fTKG1kHKTFvaMShMfrIqlxSoO3qY30jqFJj3KgBVSJO<br>sGLBi9WpBMU7vp8RheEetylt+JdsnzuIqTXmaTYqmcJto16nQADMr4Lpz7JsmEKU<br>ScS38RNTxpvCxlzb7PmyLi1w/2sqiY+oFcyaRpUE1g+2kVtLJ/QmhNOidmfDL6OW<br>UgttcnY84eSH08zMoxTJS28bvjkTNeFBmnckEsFg3H702c0KVFGkguvE5v+wCwqM<br>SnC/KP6mAbhsVrevuaOGRsWnVABY9HItieToVYhL9bfkGMWUEyNgFvAllj5IdabA<br>DpVNvXKvwStkCjBIR0b4AI+64T/MqVWy8vKu0Fig0LqCPBWoeRT+N8cVDLApoYUx</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Hello !  I am seanchrist !  Now I major in electrical engineering.  I like swimming, reading and movies ! </p>\n<p>You can contact me with GPG encryption email !  The followings is my GPG public key and Key fingerprint! </p>\n<p>Please confirm the Key fingerprint !</p>\n<hr>\n<h1 id=\"GPG-Public-Key\"><a href=\"#GPG-Public-Key\" class=\"headerlink\" title=\"GPG Public Key\"></a>GPG Public Key</h1><p>Email: <a href=\"mailto:&#x73;&#101;&#97;&#110;&#x63;&#x68;&#x72;&#105;&#115;&#x74;&#115;&#x70;&#x63;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;\">&#x73;&#101;&#97;&#110;&#x63;&#x68;&#x72;&#105;&#115;&#x74;&#115;&#x70;&#x63;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p>\n<p>Key fingerprint:  6B5C 2B69 0CF5 6ECC CE91  2519 0086 1449 5306 9034</p>\n<p>Expires Time: 2023-08-08</p>\n<hr>\n<p>—–BEGIN PGP PUBLIC KEY BLOCK—–</p>\n<p>mQINBF8uSnMBEADfWTkaYo/DNkc7hodBaEtTgoooTZaC3YON8WEBm0lehUIa/qN0<br>2cfVUqXwwI0IHduYwr2WJvsvLFTiHskYqmLGaPyHkz1GZnStRwoI8soNaAH32LsN<br>XDbImrodjRDYoe7/jpYsaKY08WlhesgLuidaP0iMwoCjttzL3c3me0oJp+flIm6K<br>BzCQc8+ZmKfAdEDb+QOH8llS5LiXQVniBLfhqxX3vy8dFKiB6YqD6rfmDN8bHMfu<br>zIZ7mzXotFYd9gb1fcptfRIzwD156XhhKgEcA11jtblCqltJFdfeBgbVy4iseoNE<br>enxV6IEQZ75oSxJHe9yPnkyaj1Bcf6YOw/gMUgu65hM692bTImsJsYX6Xuww/TWt<br>pT86eY/2UQLf9JqHiO2uI7hwKPzbmYcGQapBsYRgkNNLys3jxtSOwFiVJXQ7qhV7<br>PtddlfVOl+GTzzKcV+vCeKd7/t+6oyMqBkzg4Hj9Jq27bD05qlRUniKccbSmN1n/<br>Wdpnon4rbmi9rk1acL7rdMpIcsBq0AAlyWt6FSGTrs7u8BGH1xVrRIQwLFnCd+An<br>iKufs/6pqo3+s22P9i88rfLBQxGMNyfRFwYXrxdkTRxtu2IUpOgXA655oVq2xUGO<br>l5MtIU920T/DjuJWjWXt6trnPwg/s8p2KSaHnk0KU/VpRCCaB40NQnzaAQARAQAB<br>tD1zZWFuY2hyaXN0IGdtYWlsIChzZWFuY2hyaXN0IGdtYWlsKSA8c2VhbmNocmlz<br>dHNwY0BnbWFpbC5jb20+iQJUBBMBCgA+FiEEa1wraQz1bszOkSUZAIYUSVMGkDQF<br>Al8uSnMCGwMFCQWjmoAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQAIYUSVMG<br>kDRyOhAAreWBpf1P/WrICqmAXGx02efNZ0Jz7libNXNuVCp7k329NrGvblI1o6Od<br>udlFNcCEnP2lwZSp+IYY7sfj9HtkKohP36AaSI1ehmoXFeJvMNiYR9Az0JWu0Z7I<br>Sn/2OAwqzwIw0lUU8Hh2GDihKbJ3Kyj2uQoaXsLtcT6efALXXqVErxx9uCHBaOrU<br>t8DzM8Wj3oRIFRsAlzxa/bcUESyrwW5Py7Y3CwVW3ybVGS9RWmMo3zYYji1xm+o8<br>BOtEKQwmUoMlvU4XF7fEzjj9RFtIWm2MZwh1IFutVvXwnMpNL74pjXrCOPLWIJAG<br>bvh3xEc4CmK8FnfLfj67iq8L/X9waghm9WU4c3fel6Ms3bPNrHFGWgM036xQyS5Q<br>pRDQBz3QSNVOySNPwyA/LDdko0+aZB7reRl3J4XXU9y8Z8SG9hnehByl+eVts33C<br>1LgIJRgZxyRtN72r544qI3nYHIXUBMgaH1GrhPCpeaykdaRugdWZlMK9ZowBgPAa<br>ZGgH3tnJLwhMbv8PTb+jGZ3Lx6h52NuFZ9P6ulVY48hQDahVmqlg+d+JCkhdDLcb<br>LVdYlxiQR+5zWaMKzdlNrZw7KQOhA6aD+qdF1lSQqd7/DvBXfoYg6pnQ3zrL1bHP<br>RNo9h4t3CzmzbQ6NRcjcUPtUIVv+aBZQel1glT15D0LpcXmjm025Ag0EXy5KcwEQ<br>AO7H4CT4+Ze+nlIa9gXNDE7BhvRxJY0rwCTEbCQ7AGTuCHGk9d6Uh8J6mvVpiujK<br>ildUL1v5EuwfaqElLuDWGUm/wtK/rErVTAxK+Z8HbwNIszNWTUumiLWT0id8BsSN<br>cgRjhHUKtfnuwRnaH95cmuIlwjXv5AmFTOKesJJG6B+1qtr4917QOEkpLW3+Z1Zm<br>PZE5IUU65Ae9o5yccNgAkffH/GdmHIW5v2aUa4ZsseElrdIHP+3Sx3mDWbdzflOr<br>YkmLDTcEgvK6likkE2USjbp26hSTi8wZAPw3ZPmrH+632zifo9kU2JBfEsPJ8AwB<br>IxpaM36XOTO+B35Mp4pquj9R2yi0F3rD6X3DW0PvIsnNBowT3b/4K81cEDOE974e<br>lqNXsttYGRaBp/8tv9vksjiIda6bQ4mGJy+5WQE51T6OHXdOW/yUSet7/pjSi5iu<br>UHqiuo1pgBoygYsRQa+87bOJR2WJogh26/Tn3PAayzy/CHERuIQP+BWTBvdfe5oA<br>BwvewPhms1YSFGsLUrE5Gzrs7FBIRstLqkTPCaHWUAo2QVDdlMMjkXEobOMrBeYG<br>1PaYTic5Jx9ZMB89+U90OaktWsTZWCrc5Z1BfIXW3iwTYY+iOk438R2rxhTvXS7F<br>ymP2KSh2rCvOcgv4Y7Krz2bIA44XLSPL6Y2uCnlOegw3ABEBAAGJAjwEGAEKACYW<br>IQRrXCtpDPVuzM6RJRkAhhRJUwaQNAUCXy5KcwIbDAUJBaOagAAKCRAAhhRJUwaQ<br>NN3XEADcx5PH7msMLYuY4fTKG1kHKTFvaMShMfrIqlxSoO3qY30jqFJj3KgBVSJO<br>sGLBi9WpBMU7vp8RheEetylt+JdsnzuIqTXmaTYqmcJto16nQADMr4Lpz7JsmEKU<br>ScS38RNTxpvCxlzb7PmyLi1w/2sqiY+oFcyaRpUE1g+2kVtLJ/QmhNOidmfDL6OW<br>UgttcnY84eSH08zMoxTJS28bvjkTNeFBmnckEsFg3H702c0KVFGkguvE5v+wCwqM<br>SnC/KP6mAbhsVrevuaOGRsWnVABY9HItieToVYhL9bfkGMWUEyNgFvAllj5IdabA<br>DpVNvXKvwStkCjBIR0b4AI+64T/MqVWy8vKu0Fig0LqCPBWoeRT+N8cVDLApoYUx</p>\n<hr>\n","length":3219},{"title":"categories","date":"2018-02-05T16:36:43.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-02-05 16:36:43\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-02-05T16:36:43.000Z","path":"categories/index.html","layout":"page","_id":"ckkma2a3z0002ytcvhtbscmv4","content":"","site":{"data":{}},"excerpt":"","more":"","length":0},{"title":"schedule","date":"2018-02-05T16:39:03.000Z","type":"schedule","comments":0,"_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ndate: 2018-02-05 16:39:03\ntype: \"schedule\"\ncomments: false\n---\n","updated":"2018-02-05T16:39:03.000Z","path":"schedule/index.html","layout":"page","_id":"ckkma2a430006ytcvei5qg8h9","content":"","site":{"data":{}},"excerpt":"","more":"","length":0},{"title":"tags","date":"2018-02-05T16:14:24.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-02-05 16:14:24\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-02-05T16:14:24.000Z","path":"tags/index.html","layout":"page","_id":"ckkma2a440008ytcvfv6340jz","content":"","site":{"data":{}},"excerpt":"","more":"","length":0}],"Post":[{"title":"Adapter模式","date":"2018-02-13T10:40:32.000Z","comments":1,"description":"本文简要介绍了设计模式中的Adapter模式。","_content":"\n\n\n# Adapter模式\n加个 \"适配器\" 以便复用\nAdapter模式也被称为Wrapper(包装器)模式。\n\nAdapter模式\n\t类适配器模式(使用继承的适配器)\n\t对象适配器模式(使用委托的适配器)\n\n***\n## 类适配器模式(使用继承的适配器)\n### 类图\n![Adapter Design Pattern](Adapter_Design_Pattern/Adapter_Design_Pattern.png)\n\n### code\n#### Print\n``` java\npackage com.sean.Adapter.a;\n\npublic interface Print {\n\tpublic abstract void printWeak();\n\tpublic abstract void printStrong();\n}\n```\n#### Banner\n``` java\npackage com.sean.Adapter.a;\n\npublic class Banner {\n\tprivate String string;\n\tpublic Banner(String string){\n\t\tthis.string=string;\n\t}\n\tpublic void showWithParen(){\n\t\tSystem.out.println(\"(\"+string+\")\");\n\t}\n\tpublic void showWithAster(){\n\t\tSystem.out.println(\"*\"+string+\"*\");\n\t}\n}\n```\n#### PrintBanner\n``` java\npackage com.sean.Adapter.a;\n\npublic class PrintBanner extends Banner implements Print {\n\n\tpublic PrintBanner(String string){\n\t\tsuper(string);\n\t}\n\tpublic void printWeak() {\n\t\tshowWithParen();\n\t}\n\n\tpublic void printStrong() {\n\t\tshowWithAster();\n\t}\n\n}\n```\n\n#### Main\n\n``` java\npackage com.sean.Adapter.a;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tPrint print =  new PrintBanner(\"Hello\");\n\t\tprint.printWeak();\n\t\tprint.printStrong();\n\n\t}\n\n}\n\n```\n\n## 对象适配器模式(使用委托的适配器)\n\n### 类图\n![Adapter Design Pattern proxy](Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png)\n\n### code\n\n#### Banner\n``` java\npackage com.sean.Adapter.b;\n\npublic class Banner {\n\tprivate String string;\n\tpublic Banner(String string){\n\t\tthis.string=string;\n\t}\n\tpublic void showWithParen(){\n\t\tSystem.out.println(\"(\"+string+\")\");\n\t}\n\tpublic void showWithAster(){\n\t\tSystem.out.println(\"*\"+string+\"*\");\n\t}\n\n}\n\n```\n#### Print\n``` java\npackage com.sean.Adapter.b;\n\npublic abstract class Print {\n\tpublic abstract void printWeak();\n\tpublic abstract void printStrong();\n}\n\n```\n#### PrintBanner\n``` java\npackage com.sean.Adapter.b;\n\npublic class PrintBanner extends Print {\n\tprivate Banner banner;\n\tpublic PrintBanner(String string){\n\t\tthis.banner = new Banner(string);\n\t}\n\t@Override\n\tpublic void printWeak() {\n\t\t// TODO Auto-generated method stub\n\t\tbanner.showWithParen();\n\n\t}\n\n\t@Override\n\tpublic void printStrong() {\n\t\t// TODO Auto-generated method stub\n\t\tbanner.showWithAster();\n\t}\n\n}\n```\n\n## 要点\n\nAdapter模式会对现有的类进行适配，生成行的类。\n版本的升级与兼容需要用到Adapter模式。\n适配！适配！就是给需要的类配对一个合适的插口。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Adapter_Design_Pattern.md","raw":"---\ntitle: Adapter模式\ndate: 2018/02/13 10:40:32\ncomments: true\ndescription: 本文简要介绍了设计模式中的Adapter模式。\ntags:\n\t- Adapter\ncategories:\n\t- DesignPattern\n---\n\n\n\n# Adapter模式\n加个 \"适配器\" 以便复用\nAdapter模式也被称为Wrapper(包装器)模式。\n\nAdapter模式\n\t类适配器模式(使用继承的适配器)\n\t对象适配器模式(使用委托的适配器)\n\n***\n## 类适配器模式(使用继承的适配器)\n### 类图\n![Adapter Design Pattern](Adapter_Design_Pattern/Adapter_Design_Pattern.png)\n\n### code\n#### Print\n``` java\npackage com.sean.Adapter.a;\n\npublic interface Print {\n\tpublic abstract void printWeak();\n\tpublic abstract void printStrong();\n}\n```\n#### Banner\n``` java\npackage com.sean.Adapter.a;\n\npublic class Banner {\n\tprivate String string;\n\tpublic Banner(String string){\n\t\tthis.string=string;\n\t}\n\tpublic void showWithParen(){\n\t\tSystem.out.println(\"(\"+string+\")\");\n\t}\n\tpublic void showWithAster(){\n\t\tSystem.out.println(\"*\"+string+\"*\");\n\t}\n}\n```\n#### PrintBanner\n``` java\npackage com.sean.Adapter.a;\n\npublic class PrintBanner extends Banner implements Print {\n\n\tpublic PrintBanner(String string){\n\t\tsuper(string);\n\t}\n\tpublic void printWeak() {\n\t\tshowWithParen();\n\t}\n\n\tpublic void printStrong() {\n\t\tshowWithAster();\n\t}\n\n}\n```\n\n#### Main\n\n``` java\npackage com.sean.Adapter.a;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tPrint print =  new PrintBanner(\"Hello\");\n\t\tprint.printWeak();\n\t\tprint.printStrong();\n\n\t}\n\n}\n\n```\n\n## 对象适配器模式(使用委托的适配器)\n\n### 类图\n![Adapter Design Pattern proxy](Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png)\n\n### code\n\n#### Banner\n``` java\npackage com.sean.Adapter.b;\n\npublic class Banner {\n\tprivate String string;\n\tpublic Banner(String string){\n\t\tthis.string=string;\n\t}\n\tpublic void showWithParen(){\n\t\tSystem.out.println(\"(\"+string+\")\");\n\t}\n\tpublic void showWithAster(){\n\t\tSystem.out.println(\"*\"+string+\"*\");\n\t}\n\n}\n\n```\n#### Print\n``` java\npackage com.sean.Adapter.b;\n\npublic abstract class Print {\n\tpublic abstract void printWeak();\n\tpublic abstract void printStrong();\n}\n\n```\n#### PrintBanner\n``` java\npackage com.sean.Adapter.b;\n\npublic class PrintBanner extends Print {\n\tprivate Banner banner;\n\tpublic PrintBanner(String string){\n\t\tthis.banner = new Banner(string);\n\t}\n\t@Override\n\tpublic void printWeak() {\n\t\t// TODO Auto-generated method stub\n\t\tbanner.showWithParen();\n\n\t}\n\n\t@Override\n\tpublic void printStrong() {\n\t\t// TODO Auto-generated method stub\n\t\tbanner.showWithAster();\n\t}\n\n}\n```\n\n## 要点\n\nAdapter模式会对现有的类进行适配，生成行的类。\n版本的升级与兼容需要用到Adapter模式。\n适配！适配！就是给需要的类配对一个合适的插口。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Adapter_Design_Pattern","published":1,"updated":"2018-02-13T10:40:32.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a3x0001ytcv7uudh5ce","content":"<h1 id=\"Adapter模式\"><a href=\"#Adapter模式\" class=\"headerlink\" title=\"Adapter模式\"></a>Adapter模式</h1><p>加个 “适配器” 以便复用<br>Adapter模式也被称为Wrapper(包装器)模式。</p>\n<p>Adapter模式<br>    类适配器模式(使用继承的适配器)<br>    对象适配器模式(使用委托的适配器)</p>\n<hr>\n<h2 id=\"类适配器模式-使用继承的适配器\"><a href=\"#类适配器模式-使用继承的适配器\" class=\"headerlink\" title=\"类适配器模式(使用继承的适配器)\"></a>类适配器模式(使用继承的适配器)</h2><h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img data-src=\"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern.png\" alt=\"Adapter Design Pattern\"></p>\n<h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><h4 id=\"Print\"><a href=\"#Print\" class=\"headerlink\" title=\"Print\"></a>Print</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Banner\"><a href=\"#Banner\" class=\"headerlink\" title=\"Banner\"></a>Banner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Banner</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Banner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithParen</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;(&quot;</span>+string+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithAster</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;*&quot;</span>+string+<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"PrintBanner\"><a href=\"#PrintBanner\" class=\"headerlink\" title=\"PrintBanner\"></a>PrintBanner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintBanner</span> <span class=\"keyword\">extends</span> <span class=\"title\">Banner</span> <span class=\"keyword\">implements</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrintBanner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(string);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tshowWithParen();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tshowWithAster();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPrint print =  <span class=\"keyword\">new</span> PrintBanner(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">\t\tprint.printWeak();</span><br><span class=\"line\">\t\tprint.printStrong();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"对象适配器模式-使用委托的适配器\"><a href=\"#对象适配器模式-使用委托的适配器\" class=\"headerlink\" title=\"对象适配器模式(使用委托的适配器)\"></a>对象适配器模式(使用委托的适配器)</h2><h3 id=\"类图-1\"><a href=\"#类图-1\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img data-src=\"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png\" alt=\"Adapter Design Pattern proxy\"></p>\n<h3 id=\"code-1\"><a href=\"#code-1\" class=\"headerlink\" title=\"code\"></a>code</h3><h4 id=\"Banner-1\"><a href=\"#Banner-1\" class=\"headerlink\" title=\"Banner\"></a>Banner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Banner</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Banner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithParen</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;(&quot;</span>+string+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithAster</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;*&quot;</span>+string+<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"Print-1\"><a href=\"#Print-1\" class=\"headerlink\" title=\"Print\"></a>Print</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"PrintBanner-1\"><a href=\"#PrintBanner-1\" class=\"headerlink\" title=\"PrintBanner\"></a>PrintBanner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintBanner</span> <span class=\"keyword\">extends</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Banner banner;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrintBanner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.banner = <span class=\"keyword\">new</span> Banner(string);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tbanner.showWithParen();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tbanner.showWithAster();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Adapter模式会对现有的类进行适配，生成行的类。<br>版本的升级与兼容需要用到Adapter模式。<br>适配！适配！就是给需要的类配对一个合适的插口。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Adapter模式\"><a href=\"#Adapter模式\" class=\"headerlink\" title=\"Adapter模式\"></a>Adapter模式</h1><p>加个 “适配器” 以便复用<br>Adapter模式也被称为Wrapper(包装器)模式。</p>\n<p>Adapter模式<br>    类适配器模式(使用继承的适配器)<br>    对象适配器模式(使用委托的适配器)</p>\n<hr>\n<h2 id=\"类适配器模式-使用继承的适配器\"><a href=\"#类适配器模式-使用继承的适配器\" class=\"headerlink\" title=\"类适配器模式(使用继承的适配器)\"></a>类适配器模式(使用继承的适配器)</h2><h3 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern.png\" alt=\"Adapter Design Pattern\"></p>\n<h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><h4 id=\"Print\"><a href=\"#Print\" class=\"headerlink\" title=\"Print\"></a>Print</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Banner\"><a href=\"#Banner\" class=\"headerlink\" title=\"Banner\"></a>Banner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Banner</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Banner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithParen</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;(&quot;</span>+string+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithAster</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;*&quot;</span>+string+<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"PrintBanner\"><a href=\"#PrintBanner\" class=\"headerlink\" title=\"PrintBanner\"></a>PrintBanner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintBanner</span> <span class=\"keyword\">extends</span> <span class=\"title\">Banner</span> <span class=\"keyword\">implements</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrintBanner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(string);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tshowWithParen();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tshowWithAster();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPrint print =  <span class=\"keyword\">new</span> PrintBanner(<span class=\"string\">&quot;Hello&quot;</span>);</span><br><span class=\"line\">\t\tprint.printWeak();</span><br><span class=\"line\">\t\tprint.printStrong();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"对象适配器模式-使用委托的适配器\"><a href=\"#对象适配器模式-使用委托的适配器\" class=\"headerlink\" title=\"对象适配器模式(使用委托的适配器)\"></a>对象适配器模式(使用委托的适配器)</h2><h3 id=\"类图-1\"><a href=\"#类图-1\" class=\"headerlink\" title=\"类图\"></a>类图</h3><p><img src=\"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png\" alt=\"Adapter Design Pattern proxy\"></p>\n<h3 id=\"code-1\"><a href=\"#code-1\" class=\"headerlink\" title=\"code\"></a>code</h3><h4 id=\"Banner-1\"><a href=\"#Banner-1\" class=\"headerlink\" title=\"Banner\"></a>Banner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Banner</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Banner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithParen</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;(&quot;</span>+string+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showWithAster</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;*&quot;</span>+string+<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"Print-1\"><a href=\"#Print-1\" class=\"headerlink\" title=\"Print\"></a>Print</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"PrintBanner-1\"><a href=\"#PrintBanner-1\" class=\"headerlink\" title=\"PrintBanner\"></a>PrintBanner</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Adapter.b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrintBanner</span> <span class=\"keyword\">extends</span> <span class=\"title\">Print</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Banner banner;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrintBanner</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.banner = <span class=\"keyword\">new</span> Banner(string);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printWeak</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tbanner.showWithParen();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printStrong</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tbanner.showWithAster();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Adapter模式会对现有的类进行适配，生成行的类。<br>版本的升级与兼容需要用到Adapter模式。<br>适配！适配！就是给需要的类配对一个合适的插口。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Tue Feb 13 2018 18:40:32 GMT+0800 (China Standard Time)","title":"Adapter模式","path":"2018/02/13/Adapter_Design_Pattern/","eyeCatchImage":"/2018/02/13/Adapter_Design_Pattern/Adapter_Design_Pattern.png","excerpt":"本文简要介绍了设计模式中的Adapter模式。","date":{"_isAMomentObject":true,"_i":"2018-02-13T10:40:32.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-13T10:40:32.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Adapter"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2104},{"title":"Command模式","date":"2018-02-09T20:52:51.000Z","comments":1,"description":"本文简要讲述了设计模式中的Command模式。","_content":"# Command模式\n命令也是类\n\n---\n\n## 类表\n| 包 | 类名 | 说明 |\n|-----|--------|-------|\n| command | Command | 表示**命令**的接口 |\n| command | MacroCommand | 表示 **由多条命令整合成的命令** 的类 |\n| drawer | DrawCommand | 表示 **绘制一个点的命令** 的类 |\n| drawer | Drawable | 表示 **绘制对象** 的接口 |\n| drawer | DrawCanvas | 实现 **绘制对象** 的类 |\n|  无名 | Main | 测试程序行为的类 |\n\n\n## 类图\n粗略一点的\n![Command](Command_Design_Pattern/Command_Design_Pattern_Simple.png)\n\n详细一点\n![Command](Command_Design_Pattern/Command_Design_Pattern_Detail.png)\n\n## code\n### Command\n``` java\npackage com.sean.Command.command;\n\npublic interface Command {\n\n\tpublic abstract void execute(); \n}\n\n```\n### MacroCommand\n``` java\npackage com.sean.Command.command;\n\nimport java.util.Iterator;\nimport java.util.Stack;\n\npublic class MacroCommand implements Command {\n\tprivate Stack commands = new Stack();\n\t\n\tpublic void execute() {\n\t\tIterator it=commands.iterator();\n\t\twhile(it.hasNext()){\n\t\t\t((Command)it.next()).execute();\n\t\t}\n\n\t}\n\tpublic void append(Command command){\n\t\tif(command != this){\n\t\t\tcommands.push(command);\n\t\t}\n\t}\n\t//删除最后一条命令\n\tpublic void undo(){\n\t\tif(!commands.empty()){\n\t\t\tcommands.pop();\n\t\t}\n\t}\n\t//删除所有命令\n\tpublic void clear(){\n\t\tcommands.clear();\n\t}\n\n}\n```\n\n### Drawable\n``` java\npackage com.sean.Command.drawer;\n\npublic interface Drawable {\n\tpublic abstract void draw(int x,int y);\n}\n\n```\n### DrawCanvas\n``` java\npackage com.sean.Command.drawer;\n\nimport java.awt.Canvas;\nimport java.awt.Color;\nimport java.awt.Graphics;\n\nimport com.sean.Command.command.MacroCommand;\n\npublic class DrawCanvas extends Canvas implements Drawable {\n\t//颜色\n\tprivate Color color =Color.red;\n\t//绘制圆点半径\n\tprivate int radius=6;\n\t//命令的历史记录\n\tprivate MacroCommand history;\n\tpublic DrawCanvas(int width,int height,MacroCommand history){\n\t\tsetSize(width, height);\n\t\tsetBackground(Color.WHITE);\n\t\tthis.history=history;\n\t}\n\t//重新全部绘制\n\tpublic void paint(Graphics g){\n\t\thistory.execute();\n\t}\n\tpublic void draw(int x, int y) {\n\t\tGraphics g=getGraphics();\n\t\tg.setColor(color);\n\t\tg.fillOval(x-radius, y-radius, radius*2, radius*2);\n\t}\n\n}\n\n```\n### DrawCommand\n``` java\npackage com.sean.Command.drawer;\n\nimport java.awt.Point;\n\nimport com.sean.Command.command.Command;\n\npublic class DrawCommand implements Command {\n\n\t//绘制对象\n\tprotected Drawable drawable;\n\t//绘制位置\n\tprivate Point position;\n\tpublic DrawCommand(Drawable drawable,Point position ){\n\t\tthis.drawable=drawable;\n\t\tthis.position=position;\n\t}\n\tpublic void execute() {\n\t\t\n\t\tdrawable.draw(position.x, position.y);\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.Command;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseMotionListener;\nimport java.awt.event.WindowEvent;\nimport java.awt.event.WindowListener;\n\nimport javax.swing.Box;\nimport javax.swing.BoxLayout;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\n\nimport com.sean.Command.command.Command;\nimport com.sean.Command.command.MacroCommand;\nimport com.sean.Command.drawer.DrawCanvas;\nimport com.sean.Command.drawer.DrawCommand;\n\npublic class Main extends JFrame implements ActionListener,\n\t\tMouseMotionListener, WindowListener {\n\n\t//绘制的历史记录\n\tprivate MacroCommand history=new MacroCommand();\n\t//绘制区域\n\tprivate DrawCanvas canvas=new DrawCanvas(400,400,history);\n\t\n\t//删除按钮\n\tprivate JButton clearButton=new JButton(\"clear\");\n\t\n\t//构造函数\n\tpublic Main(String title){\n\t\tsuper(title);\n\t\t\n\t\tthis.addWindowListener(this);\n\t\tcanvas.addMouseMotionListener(this);\n\t\tclearButton.addActionListener(this);\n\t\t\n\t\tBox buttonBox=new Box(BoxLayout.X_AXIS);\n\t\tbuttonBox.add(clearButton);\n\t\tBox mainBox=new Box(BoxLayout.Y_AXIS);\n\t\t\n\t\tmainBox.add(buttonBox);\n\t\tmainBox.add(canvas);\n\t\tgetContentPane().add(mainBox);\n\t\t\n\t\tpack();\n\t\tshow();\n\t}\n\t\n\tpublic void windowOpened(WindowEvent e) {\n\t\t\n\t}\n\tpublic void windowClosing(WindowEvent e) {\n\t\tSystem.exit(0);\n\t}\n\tpublic void windowClosed(WindowEvent e) {\n\t\t\n\n\t}\n\tpublic void windowIconified(WindowEvent e) {\n\t\t\n\t}\n\tpublic void windowDeiconified(WindowEvent e) {\n\t\n\t}\n\tpublic void windowActivated(WindowEvent e) {\n\t\t\n\n\t}\n\tpublic void windowDeactivated(WindowEvent e) {\n\t\t\n\n\t}\n\n\tpublic void mouseDragged(MouseEvent e) {\n\t\tCommand command=new DrawCommand(canvas,e.getPoint());\n\t\thistory.append(command);\n\t\tcommand.execute();\n\n\t}\n\n\tpublic void mouseMoved(MouseEvent e) {\n\t\n\n\t}\n\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tif(e.getSource()==clearButton){\n\t\t\thistory.clear();\n\t\t\tcanvas.repaint();\n\t\t}\n\t}\n\tpublic static void main(String[] args){\n\t\tnew Main(\"Command Pattern\");\n\t}\n}\n\n```\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Command_Design_Pattern.md","raw":"---\ntitle: Command模式\ndate: 2018/02/09 20:52:51\ncomments: true\ndescription: 本文简要讲述了设计模式中的Command模式。\ntags:\n\t- Command\ncategories:\n\t- DesignPattern\n---\n# Command模式\n命令也是类\n\n---\n\n## 类表\n| 包 | 类名 | 说明 |\n|-----|--------|-------|\n| command | Command | 表示**命令**的接口 |\n| command | MacroCommand | 表示 **由多条命令整合成的命令** 的类 |\n| drawer | DrawCommand | 表示 **绘制一个点的命令** 的类 |\n| drawer | Drawable | 表示 **绘制对象** 的接口 |\n| drawer | DrawCanvas | 实现 **绘制对象** 的类 |\n|  无名 | Main | 测试程序行为的类 |\n\n\n## 类图\n粗略一点的\n![Command](Command_Design_Pattern/Command_Design_Pattern_Simple.png)\n\n详细一点\n![Command](Command_Design_Pattern/Command_Design_Pattern_Detail.png)\n\n## code\n### Command\n``` java\npackage com.sean.Command.command;\n\npublic interface Command {\n\n\tpublic abstract void execute(); \n}\n\n```\n### MacroCommand\n``` java\npackage com.sean.Command.command;\n\nimport java.util.Iterator;\nimport java.util.Stack;\n\npublic class MacroCommand implements Command {\n\tprivate Stack commands = new Stack();\n\t\n\tpublic void execute() {\n\t\tIterator it=commands.iterator();\n\t\twhile(it.hasNext()){\n\t\t\t((Command)it.next()).execute();\n\t\t}\n\n\t}\n\tpublic void append(Command command){\n\t\tif(command != this){\n\t\t\tcommands.push(command);\n\t\t}\n\t}\n\t//删除最后一条命令\n\tpublic void undo(){\n\t\tif(!commands.empty()){\n\t\t\tcommands.pop();\n\t\t}\n\t}\n\t//删除所有命令\n\tpublic void clear(){\n\t\tcommands.clear();\n\t}\n\n}\n```\n\n### Drawable\n``` java\npackage com.sean.Command.drawer;\n\npublic interface Drawable {\n\tpublic abstract void draw(int x,int y);\n}\n\n```\n### DrawCanvas\n``` java\npackage com.sean.Command.drawer;\n\nimport java.awt.Canvas;\nimport java.awt.Color;\nimport java.awt.Graphics;\n\nimport com.sean.Command.command.MacroCommand;\n\npublic class DrawCanvas extends Canvas implements Drawable {\n\t//颜色\n\tprivate Color color =Color.red;\n\t//绘制圆点半径\n\tprivate int radius=6;\n\t//命令的历史记录\n\tprivate MacroCommand history;\n\tpublic DrawCanvas(int width,int height,MacroCommand history){\n\t\tsetSize(width, height);\n\t\tsetBackground(Color.WHITE);\n\t\tthis.history=history;\n\t}\n\t//重新全部绘制\n\tpublic void paint(Graphics g){\n\t\thistory.execute();\n\t}\n\tpublic void draw(int x, int y) {\n\t\tGraphics g=getGraphics();\n\t\tg.setColor(color);\n\t\tg.fillOval(x-radius, y-radius, radius*2, radius*2);\n\t}\n\n}\n\n```\n### DrawCommand\n``` java\npackage com.sean.Command.drawer;\n\nimport java.awt.Point;\n\nimport com.sean.Command.command.Command;\n\npublic class DrawCommand implements Command {\n\n\t//绘制对象\n\tprotected Drawable drawable;\n\t//绘制位置\n\tprivate Point position;\n\tpublic DrawCommand(Drawable drawable,Point position ){\n\t\tthis.drawable=drawable;\n\t\tthis.position=position;\n\t}\n\tpublic void execute() {\n\t\t\n\t\tdrawable.draw(position.x, position.y);\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.Command;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseMotionListener;\nimport java.awt.event.WindowEvent;\nimport java.awt.event.WindowListener;\n\nimport javax.swing.Box;\nimport javax.swing.BoxLayout;\nimport javax.swing.JButton;\nimport javax.swing.JFrame;\n\nimport com.sean.Command.command.Command;\nimport com.sean.Command.command.MacroCommand;\nimport com.sean.Command.drawer.DrawCanvas;\nimport com.sean.Command.drawer.DrawCommand;\n\npublic class Main extends JFrame implements ActionListener,\n\t\tMouseMotionListener, WindowListener {\n\n\t//绘制的历史记录\n\tprivate MacroCommand history=new MacroCommand();\n\t//绘制区域\n\tprivate DrawCanvas canvas=new DrawCanvas(400,400,history);\n\t\n\t//删除按钮\n\tprivate JButton clearButton=new JButton(\"clear\");\n\t\n\t//构造函数\n\tpublic Main(String title){\n\t\tsuper(title);\n\t\t\n\t\tthis.addWindowListener(this);\n\t\tcanvas.addMouseMotionListener(this);\n\t\tclearButton.addActionListener(this);\n\t\t\n\t\tBox buttonBox=new Box(BoxLayout.X_AXIS);\n\t\tbuttonBox.add(clearButton);\n\t\tBox mainBox=new Box(BoxLayout.Y_AXIS);\n\t\t\n\t\tmainBox.add(buttonBox);\n\t\tmainBox.add(canvas);\n\t\tgetContentPane().add(mainBox);\n\t\t\n\t\tpack();\n\t\tshow();\n\t}\n\t\n\tpublic void windowOpened(WindowEvent e) {\n\t\t\n\t}\n\tpublic void windowClosing(WindowEvent e) {\n\t\tSystem.exit(0);\n\t}\n\tpublic void windowClosed(WindowEvent e) {\n\t\t\n\n\t}\n\tpublic void windowIconified(WindowEvent e) {\n\t\t\n\t}\n\tpublic void windowDeiconified(WindowEvent e) {\n\t\n\t}\n\tpublic void windowActivated(WindowEvent e) {\n\t\t\n\n\t}\n\tpublic void windowDeactivated(WindowEvent e) {\n\t\t\n\n\t}\n\n\tpublic void mouseDragged(MouseEvent e) {\n\t\tCommand command=new DrawCommand(canvas,e.getPoint());\n\t\thistory.append(command);\n\t\tcommand.execute();\n\n\t}\n\n\tpublic void mouseMoved(MouseEvent e) {\n\t\n\n\t}\n\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tif(e.getSource()==clearButton){\n\t\t\thistory.clear();\n\t\t\tcanvas.repaint();\n\t\t}\n\t}\n\tpublic static void main(String[] args){\n\t\tnew Main(\"Command Pattern\");\n\t}\n}\n\n```\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Command_Design_Pattern","published":1,"updated":"2018-02-09T20:52:51.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a400003ytcvezx7ht30","content":"<h1 id=\"Command模式\"><a href=\"#Command模式\" class=\"headerlink\" title=\"Command模式\"></a>Command模式</h1><p>命令也是类</p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>包</th>\n<th>类名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>command</td>\n<td>Command</td>\n<td>表示<strong>命令</strong>的接口</td>\n</tr>\n<tr>\n<td>command</td>\n<td>MacroCommand</td>\n<td>表示 <strong>由多条命令整合成的命令</strong> 的类</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>DrawCommand</td>\n<td>表示 <strong>绘制一个点的命令</strong> 的类</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>Drawable</td>\n<td>表示 <strong>绘制对象</strong> 的接口</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>DrawCanvas</td>\n<td>实现 <strong>绘制对象</strong> 的类</td>\n</tr>\n<tr>\n<td>无名</td>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>粗略一点的<br><img data-src=\"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Simple.png\" alt=\"Command\"></p>\n<p>详细一点<br><img data-src=\"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Detail.png\" alt=\"Command\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Command\"><a href=\"#Command\" class=\"headerlink\" title=\"Command\"></a>Command</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"MacroCommand\"><a href=\"#MacroCommand\" class=\"headerlink\" title=\"MacroCommand\"></a>MacroCommand</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MacroCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Stack commands = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tIterator it=commands.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\t((Command)it.next()).execute();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">append</span><span class=\"params\">(Command command)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(command != <span class=\"keyword\">this</span>)&#123;</span><br><span class=\"line\">\t\t\tcommands.push(command);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//删除最后一条命令</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!commands.empty())&#123;</span><br><span class=\"line\">\t\t\tcommands.pop();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//删除所有命令</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tcommands.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Drawable\"><a href=\"#Drawable\" class=\"headerlink\" title=\"Drawable\"></a>Drawable</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Drawable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DrawCanvas\"><a href=\"#DrawCanvas\" class=\"headerlink\" title=\"DrawCanvas\"></a>DrawCanvas</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Canvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Graphics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.MacroCommand;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawCanvas</span> <span class=\"keyword\">extends</span> <span class=\"title\">Canvas</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//颜色</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Color color =Color.red;</span><br><span class=\"line\">\t<span class=\"comment\">//绘制圆点半径</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> radius=<span class=\"number\">6</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//命令的历史记录</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> MacroCommand history;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawCanvas</span><span class=\"params\">(<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height,MacroCommand history)</span></span>&#123;</span><br><span class=\"line\">\t\tsetSize(width, height);</span><br><span class=\"line\">\t\tsetBackground(Color.WHITE);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.history=history;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//重新全部绘制</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paint</span><span class=\"params\">(Graphics g)</span></span>&#123;</span><br><span class=\"line\">\t\thistory.execute();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\tGraphics g=getGraphics();</span><br><span class=\"line\">\t\tg.setColor(color);</span><br><span class=\"line\">\t\tg.fillOval(x-radius, y-radius, radius*<span class=\"number\">2</span>, radius*<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DrawCommand\"><a href=\"#DrawCommand\" class=\"headerlink\" title=\"DrawCommand\"></a>DrawCommand</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Point;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.Command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//绘制对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> Drawable drawable;</span><br><span class=\"line\">\t<span class=\"comment\">//绘制位置</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Point position;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawCommand</span><span class=\"params\">(Drawable drawable,Point position )</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.drawable=drawable;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.position=position;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdrawable.draw(position.x, position.y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseMotionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.Box;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.BoxLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.Command;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.MacroCommand;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.drawer.DrawCanvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.drawer.DrawCommand;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">MouseMotionListener</span>, <span class=\"title\">WindowListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//绘制的历史记录</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> MacroCommand history=<span class=\"keyword\">new</span> MacroCommand();</span><br><span class=\"line\">\t<span class=\"comment\">//绘制区域</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> DrawCanvas canvas=<span class=\"keyword\">new</span> DrawCanvas(<span class=\"number\">400</span>,<span class=\"number\">400</span>,history);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//删除按钮</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> JButton clearButton=<span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;clear&quot;</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Main</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.addWindowListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tcanvas.addMouseMotionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tclearButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tBox buttonBox=<span class=\"keyword\">new</span> Box(BoxLayout.X_AXIS);</span><br><span class=\"line\">\t\tbuttonBox.add(clearButton);</span><br><span class=\"line\">\t\tBox mainBox=<span class=\"keyword\">new</span> Box(BoxLayout.Y_AXIS);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmainBox.add(buttonBox);</span><br><span class=\"line\">\t\tmainBox.add(canvas);</span><br><span class=\"line\">\t\tgetContentPane().add(mainBox);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowOpened</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosed</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowIconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeiconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowActivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeactivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseDragged</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tCommand command=<span class=\"keyword\">new</span> DrawCommand(canvas,e.getPoint());</span><br><span class=\"line\">\t\thistory.append(command);</span><br><span class=\"line\">\t\tcommand.execute();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseMoved</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(e.getSource()==clearButton)&#123;</span><br><span class=\"line\">\t\t\thistory.clear();</span><br><span class=\"line\">\t\t\tcanvas.repaint();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Main(<span class=\"string\">&quot;Command Pattern&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Command模式\"><a href=\"#Command模式\" class=\"headerlink\" title=\"Command模式\"></a>Command模式</h1><p>命令也是类</p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>包</th>\n<th>类名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>command</td>\n<td>Command</td>\n<td>表示<strong>命令</strong>的接口</td>\n</tr>\n<tr>\n<td>command</td>\n<td>MacroCommand</td>\n<td>表示 <strong>由多条命令整合成的命令</strong> 的类</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>DrawCommand</td>\n<td>表示 <strong>绘制一个点的命令</strong> 的类</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>Drawable</td>\n<td>表示 <strong>绘制对象</strong> 的接口</td>\n</tr>\n<tr>\n<td>drawer</td>\n<td>DrawCanvas</td>\n<td>实现 <strong>绘制对象</strong> 的类</td>\n</tr>\n<tr>\n<td>无名</td>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>粗略一点的<br><img src=\"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Simple.png\" alt=\"Command\"></p>\n<p>详细一点<br><img src=\"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Detail.png\" alt=\"Command\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Command\"><a href=\"#Command\" class=\"headerlink\" title=\"Command\"></a>Command</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span></span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"MacroCommand\"><a href=\"#MacroCommand\" class=\"headerlink\" title=\"MacroCommand\"></a>MacroCommand</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MacroCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Stack commands = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tIterator it=commands.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\t((Command)it.next()).execute();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">append</span><span class=\"params\">(Command command)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(command != <span class=\"keyword\">this</span>)&#123;</span><br><span class=\"line\">\t\t\tcommands.push(command);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//删除最后一条命令</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">undo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!commands.empty())&#123;</span><br><span class=\"line\">\t\t\tcommands.pop();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//删除所有命令</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tcommands.clear();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Drawable\"><a href=\"#Drawable\" class=\"headerlink\" title=\"Drawable\"></a>Drawable</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Drawable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DrawCanvas\"><a href=\"#DrawCanvas\" class=\"headerlink\" title=\"DrawCanvas\"></a>DrawCanvas</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Canvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Graphics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.MacroCommand;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawCanvas</span> <span class=\"keyword\">extends</span> <span class=\"title\">Canvas</span> <span class=\"keyword\">implements</span> <span class=\"title\">Drawable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//颜色</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Color color =Color.red;</span><br><span class=\"line\">\t<span class=\"comment\">//绘制圆点半径</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> radius=<span class=\"number\">6</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//命令的历史记录</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> MacroCommand history;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawCanvas</span><span class=\"params\">(<span class=\"keyword\">int</span> width,<span class=\"keyword\">int</span> height,MacroCommand history)</span></span>&#123;</span><br><span class=\"line\">\t\tsetSize(width, height);</span><br><span class=\"line\">\t\tsetBackground(Color.WHITE);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.history=history;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//重新全部绘制</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paint</span><span class=\"params\">(Graphics g)</span></span>&#123;</span><br><span class=\"line\">\t\thistory.execute();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\tGraphics g=getGraphics();</span><br><span class=\"line\">\t\tg.setColor(color);</span><br><span class=\"line\">\t\tg.fillOval(x-radius, y-radius, radius*<span class=\"number\">2</span>, radius*<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DrawCommand\"><a href=\"#DrawCommand\" class=\"headerlink\" title=\"DrawCommand\"></a>DrawCommand</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command.drawer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Point;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.Command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawCommand</span> <span class=\"keyword\">implements</span> <span class=\"title\">Command</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//绘制对象</span></span><br><span class=\"line\">\t<span class=\"keyword\">protected</span> Drawable drawable;</span><br><span class=\"line\">\t<span class=\"comment\">//绘制位置</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Point position;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawCommand</span><span class=\"params\">(Drawable drawable,Point position )</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.drawable=drawable;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.position=position;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdrawable.draw(position.x, position.y);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Command;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseMotionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.Box;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.BoxLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JButton;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.Command;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.command.MacroCommand;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.drawer.DrawCanvas;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Command.drawer.DrawCommand;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">MouseMotionListener</span>, <span class=\"title\">WindowListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//绘制的历史记录</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> MacroCommand history=<span class=\"keyword\">new</span> MacroCommand();</span><br><span class=\"line\">\t<span class=\"comment\">//绘制区域</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> DrawCanvas canvas=<span class=\"keyword\">new</span> DrawCanvas(<span class=\"number\">400</span>,<span class=\"number\">400</span>,history);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//删除按钮</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> JButton clearButton=<span class=\"keyword\">new</span> JButton(<span class=\"string\">&quot;clear&quot;</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Main</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.addWindowListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tcanvas.addMouseMotionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tclearButton.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tBox buttonBox=<span class=\"keyword\">new</span> Box(BoxLayout.X_AXIS);</span><br><span class=\"line\">\t\tbuttonBox.add(clearButton);</span><br><span class=\"line\">\t\tBox mainBox=<span class=\"keyword\">new</span> Box(BoxLayout.Y_AXIS);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tmainBox.add(buttonBox);</span><br><span class=\"line\">\t\tmainBox.add(canvas);</span><br><span class=\"line\">\t\tgetContentPane().add(mainBox);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowOpened</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosed</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowIconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeiconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowActivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeactivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseDragged</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tCommand command=<span class=\"keyword\">new</span> DrawCommand(canvas,e.getPoint());</span><br><span class=\"line\">\t\thistory.append(command);</span><br><span class=\"line\">\t\tcommand.execute();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseMoved</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(e.getSource()==clearButton)&#123;</span><br><span class=\"line\">\t\t\thistory.clear();</span><br><span class=\"line\">\t\t\tcanvas.repaint();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Main(<span class=\"string\">&quot;Command Pattern&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Simple.png","popularPost_tmp_gaData":{"updated":"Sat Feb 10 2018 04:52:51 GMT+0800 (China Standard Time)","title":"Command模式","path":"2018/02/10/Command_Design_Pattern/","eyeCatchImage":"/2018/02/10/Command_Design_Pattern/Command_Design_Pattern_Simple.png","excerpt":"本文简要讲述了设计模式中的Command模式。","date":{"_isAMomentObject":true,"_i":"2018-02-09T20:52:51.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-09T20:52:51.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Command"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":4245},{"title":"Facade模式","date":"2018-02-08T20:34:56.000Z","comments":1,"description":"本文简要讲述了设计模式中的Facade模式。","_content":"\n#Facade模式\n简单窗口\n&ensp; 使用Facade模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。\n***\n## 演示程序类图\n![Facade模式](Facade_Design_Pattern/Facade_Design_Pattern.png)\n\n***\n## 代码\n### Database类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.Properties;\n\npublic class Database {\n\tprivate Database(){\n\t\t//防止外部new出Database对象，所以声明为private\n\t}\n\tpublic static Properties getProperties(String dbname){\n\t\tString filename=dbname+\".txt\";\n\t\tProperties prop=new Properties();\n\t\ttry {\n\t\t\tprop.load(new FileInputStream(\"/home/sean/Documents/\"+filename));\n\t\t} catch (FileNotFoundException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn prop;\n\t}\n}\n\n```\n### HtmlWriter类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.IOException;\nimport java.io.Writer;\n\npublic class HtmlWriter {\n\tprivate Writer writer;\n\tpublic HtmlWriter(Writer writer){\n\t\tthis.writer=writer;\n\t}\n\tpublic void title(String title){\n\t\t//输出标题\n\t\ttry {\n\t\t\twriter.write(\"<html>\");\n\t\t\twriter.write(\"<head>\");\n\t\t\twriter.write(\"<title>\"+title+\"</title>\");\n\t\t\twriter.write(\"</head>\");\n\t\t\twriter.write(\"<body>\\n\");\n\t\t\twriter.write(\"<h1>\"+title+\"</h1>\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void paragraph(String msg){\n\t\t//输出段落\n\t\ttry {\n\t\t\twriter.write(\"<p>\"+msg+\"</p>\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void link(String href,String caption){\n\t\t//输出超链接\n\t\tparagraph(\"<a href=\\\"\" +href +\"\\\">\"+caption+\"</a>\");\n\t}\n\tpublic void mailto(String mailaddr,String username){\n\t\t//输出邮件地址\n\t\tlink(\"mailto:\"+mailaddr,username);\n\t}\n\tpublic void close(){\n\t\t//结束输出html\n\t\ttry {\n\t\t\twriter.write(\"</body>\");\n\t\t\twriter.write(\"</html>\\n\");\n\t\t\twriter.close();\n\t\t} catch (IOException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}\n}\n\n```\n\n### PageMaker类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Properties;\n\npublic class PageMaker {\n\tprivate PageMaker(){\n\t\t//防止外部new出PageMaker实例，所以声明为private方法\n\t}\n\tpublic static void makeWelcomePage(String mailaddr,String filename){\n\t\ttry {\n\t\t\tProperties mailprop=Database.getProperties(\"maildata\");\n\t\t\tString username=mailprop.getProperty(mailaddr);\n\t\t\tHtmlWriter writer=new HtmlWriter(new FileWriter(\"/home/sean/Documents/\"+filename));\n\t\t\twriter.title(\"Welcome to \"+username+\"'s page!\");\n\t\t\twriter.paragraph(username+\"欢迎到来\"+username+\"的主页。\");\n\t\t\twriter.paragraph(\"等你的邮件喔！\");\n\t\t\twriter.mailto(mailaddr, username);\n\t\t\twriter.close();\n\t\t\tSystem.out.println(filename+\"is created for \"+mailaddr +\" (\"+username+\")\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n\n```\n\n### Main类\n``` java\npackage com.sean.Facade;\n\nimport com.sean.Facade.pagemaker.PageMaker;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tPageMaker.makeWelcomePage(\"seanchristspc@gmail.com\", \"welcome.html\");\n\n\t}\n\n}\n```\n\n***\n## 要点\n### Facade(窗口)\nFacade角色向系统外部提供高层接口。在实例程序中由**PageMaker**扮演此角色。\n\n### 构成系统的许多其他角色\n这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 **Database**和**HtmlWriter**扮演其他角色。\n\n### Client\nClient角色负责调用Facade角色\n***\n## 个人理解\n\nFacade模式就是把复杂的系统变**看起来**简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。\n该模式还是挺好理解的，代码也不复杂。\n\n参照\n> 图解设计模式\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Facade_Design_Pattern.md","raw":"---\ntitle: Facade模式\ndate: 2018/02/08 20:34:56\ncomments: true\ndescription: 本文简要讲述了设计模式中的Facade模式。\ntags:\n\t- Facade\ncategories:\n\t- DesignPattern\n---\n\n#Facade模式\n简单窗口\n&ensp; 使用Facade模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。\n***\n## 演示程序类图\n![Facade模式](Facade_Design_Pattern/Facade_Design_Pattern.png)\n\n***\n## 代码\n### Database类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.Properties;\n\npublic class Database {\n\tprivate Database(){\n\t\t//防止外部new出Database对象，所以声明为private\n\t}\n\tpublic static Properties getProperties(String dbname){\n\t\tString filename=dbname+\".txt\";\n\t\tProperties prop=new Properties();\n\t\ttry {\n\t\t\tprop.load(new FileInputStream(\"/home/sean/Documents/\"+filename));\n\t\t} catch (FileNotFoundException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn prop;\n\t}\n}\n\n```\n### HtmlWriter类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.IOException;\nimport java.io.Writer;\n\npublic class HtmlWriter {\n\tprivate Writer writer;\n\tpublic HtmlWriter(Writer writer){\n\t\tthis.writer=writer;\n\t}\n\tpublic void title(String title){\n\t\t//输出标题\n\t\ttry {\n\t\t\twriter.write(\"<html>\");\n\t\t\twriter.write(\"<head>\");\n\t\t\twriter.write(\"<title>\"+title+\"</title>\");\n\t\t\twriter.write(\"</head>\");\n\t\t\twriter.write(\"<body>\\n\");\n\t\t\twriter.write(\"<h1>\"+title+\"</h1>\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void paragraph(String msg){\n\t\t//输出段落\n\t\ttry {\n\t\t\twriter.write(\"<p>\"+msg+\"</p>\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void link(String href,String caption){\n\t\t//输出超链接\n\t\tparagraph(\"<a href=\\\"\" +href +\"\\\">\"+caption+\"</a>\");\n\t}\n\tpublic void mailto(String mailaddr,String username){\n\t\t//输出邮件地址\n\t\tlink(\"mailto:\"+mailaddr,username);\n\t}\n\tpublic void close(){\n\t\t//结束输出html\n\t\ttry {\n\t\t\twriter.write(\"</body>\");\n\t\t\twriter.write(\"</html>\\n\");\n\t\t\twriter.close();\n\t\t} catch (IOException e) {\n\t\t\t\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}\n}\n\n```\n\n### PageMaker类\n``` java\npackage com.sean.Facade.pagemaker;\n\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.Properties;\n\npublic class PageMaker {\n\tprivate PageMaker(){\n\t\t//防止外部new出PageMaker实例，所以声明为private方法\n\t}\n\tpublic static void makeWelcomePage(String mailaddr,String filename){\n\t\ttry {\n\t\t\tProperties mailprop=Database.getProperties(\"maildata\");\n\t\t\tString username=mailprop.getProperty(mailaddr);\n\t\t\tHtmlWriter writer=new HtmlWriter(new FileWriter(\"/home/sean/Documents/\"+filename));\n\t\t\twriter.title(\"Welcome to \"+username+\"'s page!\");\n\t\t\twriter.paragraph(username+\"欢迎到来\"+username+\"的主页。\");\n\t\t\twriter.paragraph(\"等你的邮件喔！\");\n\t\t\twriter.mailto(mailaddr, username);\n\t\t\twriter.close();\n\t\t\tSystem.out.println(filename+\"is created for \"+mailaddr +\" (\"+username+\")\");\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n\n```\n\n### Main类\n``` java\npackage com.sean.Facade;\n\nimport com.sean.Facade.pagemaker.PageMaker;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tPageMaker.makeWelcomePage(\"seanchristspc@gmail.com\", \"welcome.html\");\n\n\t}\n\n}\n```\n\n***\n## 要点\n### Facade(窗口)\nFacade角色向系统外部提供高层接口。在实例程序中由**PageMaker**扮演此角色。\n\n### 构成系统的许多其他角色\n这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 **Database**和**HtmlWriter**扮演其他角色。\n\n### Client\nClient角色负责调用Facade角色\n***\n## 个人理解\n\nFacade模式就是把复杂的系统变**看起来**简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。\n该模式还是挺好理解的，代码也不复杂。\n\n参照\n> 图解设计模式\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Facade_Design_Pattern","published":1,"updated":"2018-02-08T20:34:56.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a430007ytcv0fph2s90","content":"<p>#Facade模式<br>简单窗口<br>&ensp; 使用Facade模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。</p>\n<hr>\n<h2 id=\"演示程序类图\"><a href=\"#演示程序类图\" class=\"headerlink\" title=\"演示程序类图\"></a>演示程序类图</h2><p><img data-src=\"/2018/02/09/Facade_Design_Pattern/Facade_Design_Pattern.png\" alt=\"Facade模式\"></p>\n<hr>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Database类\"><a href=\"#Database类\" class=\"headerlink\" title=\"Database类\"></a>Database类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Database</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Database</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止外部new出Database对象，所以声明为private</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Properties <span class=\"title\">getProperties</span><span class=\"params\">(String dbname)</span></span>&#123;</span><br><span class=\"line\">\t\tString filename=dbname+<span class=\"string\">&quot;.txt&quot;</span>;</span><br><span class=\"line\">\t\tProperties prop=<span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tprop.load(<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> prop;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"HtmlWriter类\"><a href=\"#HtmlWriter类\" class=\"headerlink\" title=\"HtmlWriter类\"></a>HtmlWriter类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Writer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HtmlWriter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Writer writer;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HtmlWriter</span><span class=\"params\">(Writer writer)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.writer=writer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">title</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出标题</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;html&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;head&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;title&gt;&quot;</span>+title+<span class=\"string\">&quot;&lt;/title&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;body&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;h1&gt;&quot;</span>+title+<span class=\"string\">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paragraph</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出段落</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;p&gt;&quot;</span>+msg+<span class=\"string\">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(String href,String caption)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出超链接</span></span><br><span class=\"line\">\t\tparagraph(<span class=\"string\">&quot;&lt;a href=\\&quot;&quot;</span> +href +<span class=\"string\">&quot;\\&quot;&gt;&quot;</span>+caption+<span class=\"string\">&quot;&lt;/a&gt;&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mailto</span><span class=\"params\">(String mailaddr,String username)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出邮件地址</span></span><br><span class=\"line\">\t\tlink(<span class=\"string\">&quot;mailto:&quot;</span>+mailaddr,username);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//结束输出html</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/html&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.close();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"PageMaker类\"><a href=\"#PageMaker类\" class=\"headerlink\" title=\"PageMaker类\"></a>PageMaker类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PageMaker</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">PageMaker</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止外部new出PageMaker实例，所以声明为private方法</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">makeWelcomePage</span><span class=\"params\">(String mailaddr,String filename)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tProperties mailprop=Database.getProperties(<span class=\"string\">&quot;maildata&quot;</span>);</span><br><span class=\"line\">\t\t\tString username=mailprop.getProperty(mailaddr);</span><br><span class=\"line\">\t\t\tHtmlWriter writer=<span class=\"keyword\">new</span> HtmlWriter(<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class=\"line\">\t\t\twriter.title(<span class=\"string\">&quot;Welcome to &quot;</span>+username+<span class=\"string\">&quot;&#x27;s page!&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.paragraph(username+<span class=\"string\">&quot;欢迎到来&quot;</span>+username+<span class=\"string\">&quot;的主页。&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.paragraph(<span class=\"string\">&quot;等你的邮件喔！&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.mailto(mailaddr, username);</span><br><span class=\"line\">\t\t\twriter.close();</span><br><span class=\"line\">\t\t\tSystem.out.println(filename+<span class=\"string\">&quot;is created for &quot;</span>+mailaddr +<span class=\"string\">&quot; (&quot;</span>+username+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main类\"><a href=\"#Main类\" class=\"headerlink\" title=\"Main类\"></a>Main类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Facade.pagemaker.PageMaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPageMaker.makeWelcomePage(<span class=\"string\">&quot;seanchristspc@gmail.com&quot;</span>, <span class=\"string\">&quot;welcome.html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><h3 id=\"Facade-窗口\"><a href=\"#Facade-窗口\" class=\"headerlink\" title=\"Facade(窗口)\"></a>Facade(窗口)</h3><p>Facade角色向系统外部提供高层接口。在实例程序中由<strong>PageMaker</strong>扮演此角色。</p>\n<h3 id=\"构成系统的许多其他角色\"><a href=\"#构成系统的许多其他角色\" class=\"headerlink\" title=\"构成系统的许多其他角色\"></a>构成系统的许多其他角色</h3><p>这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 <strong>Database</strong>和<strong>HtmlWriter</strong>扮演其他角色。</p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p>Client角色负责调用Facade角色</p>\n<hr>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>Facade模式就是把复杂的系统变<strong>看起来</strong>简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。<br>该模式还是挺好理解的，代码也不复杂。</p>\n<p>参照</p>\n<blockquote>\n<p>图解设计模式</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#Facade模式<br>简单窗口<br>&ensp; 使用Facade模式可以为相互关联在一起的错中复杂的类整理出高层的接口。其中的Facade角色可以让系统对外只有一个简单的接口。</p>\n<hr>\n<h2 id=\"演示程序类图\"><a href=\"#演示程序类图\" class=\"headerlink\" title=\"演示程序类图\"></a>演示程序类图</h2><p><img src=\"/2018/02/09/Facade_Design_Pattern/Facade_Design_Pattern.png\" alt=\"Facade模式\"></p>\n<hr>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Database类\"><a href=\"#Database类\" class=\"headerlink\" title=\"Database类\"></a>Database类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Database</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">Database</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止外部new出Database对象，所以声明为private</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Properties <span class=\"title\">getProperties</span><span class=\"params\">(String dbname)</span></span>&#123;</span><br><span class=\"line\">\t\tString filename=dbname+<span class=\"string\">&quot;.txt&quot;</span>;</span><br><span class=\"line\">\t\tProperties prop=<span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tprop.load(<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> prop;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"HtmlWriter类\"><a href=\"#HtmlWriter类\" class=\"headerlink\" title=\"HtmlWriter类\"></a>HtmlWriter类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Writer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HtmlWriter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Writer writer;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HtmlWriter</span><span class=\"params\">(Writer writer)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.writer=writer;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">title</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出标题</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;html&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;head&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;title&gt;&quot;</span>+title+<span class=\"string\">&quot;&lt;/title&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/head&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;body&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;h1&gt;&quot;</span>+title+<span class=\"string\">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paragraph</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出段落</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;p&gt;&quot;</span>+msg+<span class=\"string\">&quot;&lt;/p&gt;&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">link</span><span class=\"params\">(String href,String caption)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出超链接</span></span><br><span class=\"line\">\t\tparagraph(<span class=\"string\">&quot;&lt;a href=\\&quot;&quot;</span> +href +<span class=\"string\">&quot;\\&quot;&gt;&quot;</span>+caption+<span class=\"string\">&quot;&lt;/a&gt;&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mailto</span><span class=\"params\">(String mailaddr,String username)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出邮件地址</span></span><br><span class=\"line\">\t\tlink(<span class=\"string\">&quot;mailto:&quot;</span>+mailaddr,username);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//结束输出html</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/body&gt;&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.write(<span class=\"string\">&quot;&lt;/html&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.close();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"PageMaker类\"><a href=\"#PageMaker类\" class=\"headerlink\" title=\"PageMaker类\"></a>PageMaker类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade.pagemaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PageMaker</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">PageMaker</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止外部new出PageMaker实例，所以声明为private方法</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">makeWelcomePage</span><span class=\"params\">(String mailaddr,String filename)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tProperties mailprop=Database.getProperties(<span class=\"string\">&quot;maildata&quot;</span>);</span><br><span class=\"line\">\t\t\tString username=mailprop.getProperty(mailaddr);</span><br><span class=\"line\">\t\t\tHtmlWriter writer=<span class=\"keyword\">new</span> HtmlWriter(<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+filename));</span><br><span class=\"line\">\t\t\twriter.title(<span class=\"string\">&quot;Welcome to &quot;</span>+username+<span class=\"string\">&quot;&#x27;s page!&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.paragraph(username+<span class=\"string\">&quot;欢迎到来&quot;</span>+username+<span class=\"string\">&quot;的主页。&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.paragraph(<span class=\"string\">&quot;等你的邮件喔！&quot;</span>);</span><br><span class=\"line\">\t\t\twriter.mailto(mailaddr, username);</span><br><span class=\"line\">\t\t\twriter.close();</span><br><span class=\"line\">\t\t\tSystem.out.println(filename+<span class=\"string\">&quot;is created for &quot;</span>+mailaddr +<span class=\"string\">&quot; (&quot;</span>+username+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main类\"><a href=\"#Main类\" class=\"headerlink\" title=\"Main类\"></a>Main类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Facade;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.Facade.pagemaker.PageMaker;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPageMaker.makeWelcomePage(<span class=\"string\">&quot;seanchristspc@gmail.com&quot;</span>, <span class=\"string\">&quot;welcome.html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><h3 id=\"Facade-窗口\"><a href=\"#Facade-窗口\" class=\"headerlink\" title=\"Facade(窗口)\"></a>Facade(窗口)</h3><p>Facade角色向系统外部提供高层接口。在实例程序中由<strong>PageMaker</strong>扮演此角色。</p>\n<h3 id=\"构成系统的许多其他角色\"><a href=\"#构成系统的许多其他角色\" class=\"headerlink\" title=\"构成系统的许多其他角色\"></a>构成系统的许多其他角色</h3><p>这些角色各自完成自己的工作，他们并不知道Facade角色。Facade角色调用其他角色进行工作，但是其他角色不会调用Facade角色。代码中 <strong>Database</strong>和<strong>HtmlWriter</strong>扮演其他角色。</p>\n<h3 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h3><p>Client角色负责调用Facade角色</p>\n<hr>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>Facade模式就是把复杂的系统变<strong>看起来</strong>简单。所谓看起来简单就是指在编写代码的时候还是挺复杂的，只是在使用某个功能是对外的接口比较少而且明确。<br>该模式还是挺好理解的，代码也不复杂。</p>\n<p>参照</p>\n<blockquote>\n<p>图解设计模式</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/09/Facade_Design_Pattern/Facade_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Fri Feb 09 2018 04:34:56 GMT+0800 (China Standard Time)","title":"Facade模式","path":"2018/02/09/Facade_Design_Pattern/","eyeCatchImage":"/2018/02/09/Facade_Design_Pattern/Facade_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的Facade模式。","date":{"_isAMomentObject":true,"_i":"2018-02-08T20:34:56.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-08T20:34:56.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Facade"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":3632},{"title":"FactoryMethod模式","comments":1,"date":"2018-02-13T12:41:10.000Z","description":"本文简要讲述了设计模式中的FactoryMethod模式。","_content":"\n\n\n# FactoryMethod模式\n\n将实例的生成交给子类\n\n用TemplateMethod模式来构建**生成的实例的工厂**，就是FactoryMethod模式。\n\n## 类图\n\n![Factory](Facade_Design_Pattern/Facade_Design_Pattern.png)\n\n## code\n### Factory\n``` java\npackage com.sean.FactoryMethod.framework;\n\npublic abstract class Factory {\n\tpublic final Product create(String owner){\n\t\tProduct product=createProduct(owner);\n\t\tregisterProduct(product);\n\t\treturn product;\n\t}\n\tprotected abstract Product createProduct(String owner);\n\tprotected abstract void registerProduct(Product product);\n\t\n}\n\n```\n### Product\n``` java\n\npackage com.sean.FactoryMethod.framework;\n\npublic abstract class Product {\n\tpublic abstract void use();\n}\n\n```\n### IDCard\n``` java\npackage com.sean.FactoryMethod.idcard;\n\nimport com.sean.FactoryMethod.framework.Product;\n\npublic class IDCard extends Product {\n\tprivate String owner;\n\tIDCard(String owner){\n\t\tSystem.out.println(\"制作\"+owner+\"的ID卡。\");\n\t\tthis.owner=owner;\n\t}\n\t@Override\n\tpublic void use() {\n\t\tSystem.out.println(\"使用\"+owner+\"的ID卡。\");\n\n\t}\n\tpublic String getOwner(){\n\t\treturn owner;\n\t}\n\n}\n```\n### IDCardFactory\n``` java\npackage com.sean.FactoryMethod.idcard;\n\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.sean.FactoryMethod.framework.Factory;\nimport com.sean.FactoryMethod.framework.Product;\n\npublic class IDCardFactory extends Factory {\n\tprivate List owners = new ArrayList(); \n\t@Override\n\tprotected Product createProduct(String owner) {\n\t\t\n\t\treturn new IDCard(owner);\n\t}\n\t@Override\n\tprotected void registerProduct(Product product) {\n\t\towners.add(((IDCard)product).getOwner());\n\t}\n\tpublic List getOwners(){\n\t\treturn owners;\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.FactoryMethod;\n\nimport com.sean.FactoryMethod.framework.Factory;\nimport com.sean.FactoryMethod.framework.Product;\nimport com.sean.FactoryMethod.idcard.IDCardFactory;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFactory factory=new IDCardFactory();\n\t\tProduct card1= factory.create(\"小明\");\n\t\tProduct card2=factory.create(\"小红\");\n\t\tProduct card3=factory.create(\"小刚\");\n\t\tcard1.use();\n\t\tcard2.use();\n\t\tcard3.use();\n\t}\n\n}\n```\n## 要点\n工厂产生产品\n具体的工厂产生具体的产品\n这两者形成一一对应的关系。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n\n\n\n","source":"_posts/FactoryMethod_Design_Pattern.md","raw":"---\ntitle: FactoryMethod模式\ncomments: true\ndate: 2018/02/13 12:41:10\ndescription: 本文简要讲述了设计模式中的FactoryMethod模式。\ntags:\n\t- FactoryMethod\ncategories:\n\t- DesignPattern\n---\n\n\n\n# FactoryMethod模式\n\n将实例的生成交给子类\n\n用TemplateMethod模式来构建**生成的实例的工厂**，就是FactoryMethod模式。\n\n## 类图\n\n![Factory](Facade_Design_Pattern/Facade_Design_Pattern.png)\n\n## code\n### Factory\n``` java\npackage com.sean.FactoryMethod.framework;\n\npublic abstract class Factory {\n\tpublic final Product create(String owner){\n\t\tProduct product=createProduct(owner);\n\t\tregisterProduct(product);\n\t\treturn product;\n\t}\n\tprotected abstract Product createProduct(String owner);\n\tprotected abstract void registerProduct(Product product);\n\t\n}\n\n```\n### Product\n``` java\n\npackage com.sean.FactoryMethod.framework;\n\npublic abstract class Product {\n\tpublic abstract void use();\n}\n\n```\n### IDCard\n``` java\npackage com.sean.FactoryMethod.idcard;\n\nimport com.sean.FactoryMethod.framework.Product;\n\npublic class IDCard extends Product {\n\tprivate String owner;\n\tIDCard(String owner){\n\t\tSystem.out.println(\"制作\"+owner+\"的ID卡。\");\n\t\tthis.owner=owner;\n\t}\n\t@Override\n\tpublic void use() {\n\t\tSystem.out.println(\"使用\"+owner+\"的ID卡。\");\n\n\t}\n\tpublic String getOwner(){\n\t\treturn owner;\n\t}\n\n}\n```\n### IDCardFactory\n``` java\npackage com.sean.FactoryMethod.idcard;\n\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.sean.FactoryMethod.framework.Factory;\nimport com.sean.FactoryMethod.framework.Product;\n\npublic class IDCardFactory extends Factory {\n\tprivate List owners = new ArrayList(); \n\t@Override\n\tprotected Product createProduct(String owner) {\n\t\t\n\t\treturn new IDCard(owner);\n\t}\n\t@Override\n\tprotected void registerProduct(Product product) {\n\t\towners.add(((IDCard)product).getOwner());\n\t}\n\tpublic List getOwners(){\n\t\treturn owners;\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.FactoryMethod;\n\nimport com.sean.FactoryMethod.framework.Factory;\nimport com.sean.FactoryMethod.framework.Product;\nimport com.sean.FactoryMethod.idcard.IDCardFactory;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tFactory factory=new IDCardFactory();\n\t\tProduct card1= factory.create(\"小明\");\n\t\tProduct card2=factory.create(\"小红\");\n\t\tProduct card3=factory.create(\"小刚\");\n\t\tcard1.use();\n\t\tcard2.use();\n\t\tcard3.use();\n\t}\n\n}\n```\n## 要点\n工厂产生产品\n具体的工厂产生具体的产品\n这两者形成一一对应的关系。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n\n\n\n","slug":"FactoryMethod_Design_Pattern","published":1,"updated":"2018-02-13T12:41:10.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a450009ytcv6zyx4cmd","content":"<h1 id=\"FactoryMethod模式\"><a href=\"#FactoryMethod模式\" class=\"headerlink\" title=\"FactoryMethod模式\"></a>FactoryMethod模式</h1><p>将实例的生成交给子类</p>\n<p>用TemplateMethod模式来构建<strong>生成的实例的工厂</strong>，就是FactoryMethod模式。</p>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img data-src=\"/2018/02/13/FactoryMethod_Design_Pattern/Facade_Design_Pattern.png\" alt=\"Factory\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Factory\"><a href=\"#Factory\" class=\"headerlink\" title=\"Factory\"></a>Factory</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Factory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Product <span class=\"title\">create</span><span class=\"params\">(String owner)</span></span>&#123;</span><br><span class=\"line\">\t\tProduct product=createProduct(owner);</span><br><span class=\"line\">\t\tregisterProduct(product);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> product;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> Product <span class=\"title\">createProduct</span><span class=\"params\">(String owner)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">registerProduct</span><span class=\"params\">(Product product)</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Product\"><a href=\"#Product\" class=\"headerlink\" title=\"Product\"></a>Product</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"IDCard\"><a href=\"#IDCard\" class=\"headerlink\" title=\"IDCard\"></a>IDCard</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.idcard;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IDCard</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String owner;</span><br><span class=\"line\">\tIDCard(String owner)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;制作&quot;</span>+owner+<span class=\"string\">&quot;的ID卡。&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.owner=owner;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;使用&quot;</span>+owner+<span class=\"string\">&quot;的ID卡。&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getOwner</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> owner;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IDCardFactory\"><a href=\"#IDCardFactory\" class=\"headerlink\" title=\"IDCardFactory\"></a>IDCardFactory</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.idcard;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IDCardFactory</span> <span class=\"keyword\">extends</span> <span class=\"title\">Factory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List owners = <span class=\"keyword\">new</span> ArrayList(); </span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Product <span class=\"title\">createProduct</span><span class=\"params\">(String owner)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IDCard(owner);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">registerProduct</span><span class=\"params\">(Product product)</span> </span>&#123;</span><br><span class=\"line\">\t\towners.add(((IDCard)product).getOwner());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List <span class=\"title\">getOwners</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> owners;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.idcard.IDCardFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tFactory factory=<span class=\"keyword\">new</span> IDCardFactory();</span><br><span class=\"line\">\t\tProduct card1= factory.create(<span class=\"string\">&quot;小明&quot;</span>);</span><br><span class=\"line\">\t\tProduct card2=factory.create(<span class=\"string\">&quot;小红&quot;</span>);</span><br><span class=\"line\">\t\tProduct card3=factory.create(<span class=\"string\">&quot;小刚&quot;</span>);</span><br><span class=\"line\">\t\tcard1.use();</span><br><span class=\"line\">\t\tcard2.use();</span><br><span class=\"line\">\t\tcard3.use();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>工厂产生产品<br>具体的工厂产生具体的产品<br>这两者形成一一对应的关系。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"FactoryMethod模式\"><a href=\"#FactoryMethod模式\" class=\"headerlink\" title=\"FactoryMethod模式\"></a>FactoryMethod模式</h1><p>将实例的生成交给子类</p>\n<p>用TemplateMethod模式来构建<strong>生成的实例的工厂</strong>，就是FactoryMethod模式。</p>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"/2018/02/13/FactoryMethod_Design_Pattern/Facade_Design_Pattern.png\" alt=\"Factory\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Factory\"><a href=\"#Factory\" class=\"headerlink\" title=\"Factory\"></a>Factory</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Factory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Product <span class=\"title\">create</span><span class=\"params\">(String owner)</span></span>&#123;</span><br><span class=\"line\">\t\tProduct product=createProduct(owner);</span><br><span class=\"line\">\t\tregisterProduct(product);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> product;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> Product <span class=\"title\">createProduct</span><span class=\"params\">(String owner)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">registerProduct</span><span class=\"params\">(Product product)</span></span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Product\"><a href=\"#Product\" class=\"headerlink\" title=\"Product\"></a>Product</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.framework;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"IDCard\"><a href=\"#IDCard\" class=\"headerlink\" title=\"IDCard\"></a>IDCard</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.idcard;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IDCard</span> <span class=\"keyword\">extends</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String owner;</span><br><span class=\"line\">\tIDCard(String owner)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;制作&quot;</span>+owner+<span class=\"string\">&quot;的ID卡。&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.owner=owner;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">use</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;使用&quot;</span>+owner+<span class=\"string\">&quot;的ID卡。&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getOwner</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> owner;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IDCardFactory\"><a href=\"#IDCardFactory\" class=\"headerlink\" title=\"IDCardFactory\"></a>IDCardFactory</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod.idcard;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IDCardFactory</span> <span class=\"keyword\">extends</span> <span class=\"title\">Factory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List owners = <span class=\"keyword\">new</span> ArrayList(); </span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Product <span class=\"title\">createProduct</span><span class=\"params\">(String owner)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IDCard(owner);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">registerProduct</span><span class=\"params\">(Product product)</span> </span>&#123;</span><br><span class=\"line\">\t\towners.add(((IDCard)product).getOwner());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> List <span class=\"title\">getOwners</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> owners;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.FactoryMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Factory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.framework.Product;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.FactoryMethod.idcard.IDCardFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tFactory factory=<span class=\"keyword\">new</span> IDCardFactory();</span><br><span class=\"line\">\t\tProduct card1= factory.create(<span class=\"string\">&quot;小明&quot;</span>);</span><br><span class=\"line\">\t\tProduct card2=factory.create(<span class=\"string\">&quot;小红&quot;</span>);</span><br><span class=\"line\">\t\tProduct card3=factory.create(<span class=\"string\">&quot;小刚&quot;</span>);</span><br><span class=\"line\">\t\tcard1.use();</span><br><span class=\"line\">\t\tcard2.use();</span><br><span class=\"line\">\t\tcard3.use();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>工厂产生产品<br>具体的工厂产生具体的产品<br>这两者形成一一对应的关系。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/13/FactoryMethod_Design_Pattern/Facade_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Tue Feb 13 2018 20:41:10 GMT+0800 (China Standard Time)","title":"FactoryMethod模式","path":"2018/02/13/FactoryMethod_Design_Pattern/","eyeCatchImage":"/2018/02/13/FactoryMethod_Design_Pattern/Facade_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的FactoryMethod模式。","date":{"_isAMomentObject":true,"_i":"2018-02-13T12:41:10.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-13T12:41:10.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["FactoryMethod"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2083},{"title":"Flyweight模式","date":"2018-02-12T13:35:40.000Z","comments":1,"description":"本文简要讲述了设计模式中的Flyweight模式。","_content":"\n# Flyweight 模式\n\n**共享**对象，避免浪费。\n\n---\n\n## 类表\n| 名字 | 说明 |\n|--------|--------|\n|BigChar | 表示\"大型字符\"类 |\n| BigCharFactory | 表示生成和共用BigChar类的实例的类 |\n| BigString | 表示多个BigChar组成的 \"大型字符串\" 的类 |\n| Main | 测试程序行为的类 |\n\n## 程序类图\n![Flyweight](Flyweight_Design_Pattern/flyweight_uml_fig.png)\n\n\n## 代码 \n### BigChar类\n``` java\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\n\npublic class BigChar {\n\tprivate char charname;\n\tprivate String fontdata;\n\tpublic BigChar(char charname){\n\t\tthis.charname=charname;\n\t\ttry {\n\t\t\tBufferedReader reader=new BufferedReader(new FileReader(\"/home/sean/Documents/\"+\"big\"+charname+\".txt\"));\n\t\t\tString line;\n\t\t\tStringBuffer buf=new StringBuffer();\n\t\t\twhile((line=reader.readLine())!=null){\n\t\t\t\tbuf.append(line);\n\t\t\t\tbuf.append(\"\\n\");\n\t\t\t}\n\t\t\treader.close();\n\t\t\tthis.fontdata=buf.toString();\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\tthis.fontdata=charname+\"?\";\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tpublic void print(){\n\t\tSystem.out.print(fontdata);\n\t}\n}\n\n```\n### BigCharFactory类\n``` java\npackage com.sean.Flyweight;\n\nimport java.util.HashMap;\n\npublic class BigCharFactory {\n\tprivate HashMap pool=new HashMap();\n\t//Singleton模式\n\tprivate static BigCharFactory singleton=new BigCharFactory();\n\tprivate BigCharFactory(){\n\t\t\n\t}\n\t//获取唯一实例\n\tpublic static BigCharFactory getInstance(){\n\t\treturn singleton;\n\t}\n\t//生成（共享)BigChar类实例\n\tpublic synchronized BigChar getBigChar(char charname){\n\t\tBigChar bc=(BigChar) pool.get(\"\"+charname);\n\t\tif(bc==null){\n\t\t\tbc=new BigChar(charname);\n\t\t\tpool.put(\"\"+charname, bc);\n\t\t}\n\t\treturn bc;\n\t}\n\n}\n\n```\n### BigString类\n\n``` java\npackage com.sean.Flyweight;\n\npublic class BigString {\n\tprivate BigChar[] bigChars;\n\tpublic BigString(String string){\n\t\tbigChars=new BigChar[string.length()];\n\t\tBigCharFactory factory=BigCharFactory.getInstance();\n\t\tfor(int i=0;i<bigChars.length;i++){\n\t\t\tbigChars[i]=factory.getBigChar(string.charAt(i));\n\t\t}\n\t}\n\t//显示\n\tpublic void print(){\n\t\tfor(int i=0;i<bigChars.length;i++){\n\t\t\tbigChars[i].print();\n\t\t}\n\t}\n\t\n}\n\n```\n### Main类\n``` java\npackage com.sean.Flyweight;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tBigString bs=new BigString(\"10101\");\n\t\tbs.print();\n\t\t\n\n\t}\n\n}\n```\n\n\n## 要点\n\nFlyweight模式会对**多个地方产生影响**。\n\n**Intrinsic:**  应当被共享的信息  \n**Extrinsic:** 不应当被共享的信息\n\n|名字 | 解释 |\n|-----|------|\n| Instrinsic信息 | 不依赖位置状况，可以共享 |\n| Extrinsic信息  |依赖位置与状况，不能共享 |\n\n**不要让被共享的实例被垃圾回收机器回收**\nFlyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Flyweight_Design_Pattern.md","raw":"---\ntitle: Flyweight模式\ndate: 2018/02/12 13:35:40\ncomments: true\ndescription: 本文简要讲述了设计模式中的Flyweight模式。\ntags:\n\t- Flyweight\ncategories:\n\t- DesignPattern\n---\n\n# Flyweight 模式\n\n**共享**对象，避免浪费。\n\n---\n\n## 类表\n| 名字 | 说明 |\n|--------|--------|\n|BigChar | 表示\"大型字符\"类 |\n| BigCharFactory | 表示生成和共用BigChar类的实例的类 |\n| BigString | 表示多个BigChar组成的 \"大型字符串\" 的类 |\n| Main | 测试程序行为的类 |\n\n## 程序类图\n![Flyweight](Flyweight_Design_Pattern/flyweight_uml_fig.png)\n\n\n## 代码 \n### BigChar类\n``` java\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\n\npublic class BigChar {\n\tprivate char charname;\n\tprivate String fontdata;\n\tpublic BigChar(char charname){\n\t\tthis.charname=charname;\n\t\ttry {\n\t\t\tBufferedReader reader=new BufferedReader(new FileReader(\"/home/sean/Documents/\"+\"big\"+charname+\".txt\"));\n\t\t\tString line;\n\t\t\tStringBuffer buf=new StringBuffer();\n\t\t\twhile((line=reader.readLine())!=null){\n\t\t\t\tbuf.append(line);\n\t\t\t\tbuf.append(\"\\n\");\n\t\t\t}\n\t\t\treader.close();\n\t\t\tthis.fontdata=buf.toString();\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\tthis.fontdata=charname+\"?\";\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tpublic void print(){\n\t\tSystem.out.print(fontdata);\n\t}\n}\n\n```\n### BigCharFactory类\n``` java\npackage com.sean.Flyweight;\n\nimport java.util.HashMap;\n\npublic class BigCharFactory {\n\tprivate HashMap pool=new HashMap();\n\t//Singleton模式\n\tprivate static BigCharFactory singleton=new BigCharFactory();\n\tprivate BigCharFactory(){\n\t\t\n\t}\n\t//获取唯一实例\n\tpublic static BigCharFactory getInstance(){\n\t\treturn singleton;\n\t}\n\t//生成（共享)BigChar类实例\n\tpublic synchronized BigChar getBigChar(char charname){\n\t\tBigChar bc=(BigChar) pool.get(\"\"+charname);\n\t\tif(bc==null){\n\t\t\tbc=new BigChar(charname);\n\t\t\tpool.put(\"\"+charname, bc);\n\t\t}\n\t\treturn bc;\n\t}\n\n}\n\n```\n### BigString类\n\n``` java\npackage com.sean.Flyweight;\n\npublic class BigString {\n\tprivate BigChar[] bigChars;\n\tpublic BigString(String string){\n\t\tbigChars=new BigChar[string.length()];\n\t\tBigCharFactory factory=BigCharFactory.getInstance();\n\t\tfor(int i=0;i<bigChars.length;i++){\n\t\t\tbigChars[i]=factory.getBigChar(string.charAt(i));\n\t\t}\n\t}\n\t//显示\n\tpublic void print(){\n\t\tfor(int i=0;i<bigChars.length;i++){\n\t\t\tbigChars[i].print();\n\t\t}\n\t}\n\t\n}\n\n```\n### Main类\n``` java\npackage com.sean.Flyweight;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tBigString bs=new BigString(\"10101\");\n\t\tbs.print();\n\t\t\n\n\t}\n\n}\n```\n\n\n## 要点\n\nFlyweight模式会对**多个地方产生影响**。\n\n**Intrinsic:**  应当被共享的信息  \n**Extrinsic:** 不应当被共享的信息\n\n|名字 | 解释 |\n|-----|------|\n| Instrinsic信息 | 不依赖位置状况，可以共享 |\n| Extrinsic信息  |依赖位置与状况，不能共享 |\n\n**不要让被共享的实例被垃圾回收机器回收**\nFlyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Flyweight_Design_Pattern","published":1,"updated":"2018-02-12T13:35:40.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a46000aytcvh8cd3br2","content":"<h1 id=\"Flyweight-模式\"><a href=\"#Flyweight-模式\" class=\"headerlink\" title=\"Flyweight 模式\"></a>Flyweight 模式</h1><p><strong>共享</strong>对象，避免浪费。</p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BigChar</td>\n<td>表示”大型字符”类</td>\n</tr>\n<tr>\n<td>BigCharFactory</td>\n<td>表示生成和共用BigChar类的实例的类</td>\n</tr>\n<tr>\n<td>BigString</td>\n<td>表示多个BigChar组成的 “大型字符串” 的类</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"程序类图\"><a href=\"#程序类图\" class=\"headerlink\" title=\"程序类图\"></a>程序类图</h2><p><img data-src=\"/2018/02/12/Flyweight_Design_Pattern/flyweight_uml_fig.png\" alt=\"Flyweight\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"BigChar类\"><a href=\"#BigChar类\" class=\"headerlink\" title=\"BigChar类\"></a>BigChar类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigChar</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">char</span> charname;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String fontdata;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BigChar</span><span class=\"params\">(<span class=\"keyword\">char</span> charname)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.charname=charname;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tBufferedReader reader=<span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+<span class=\"string\">&quot;big&quot;</span>+charname+<span class=\"string\">&quot;.txt&quot;</span>));</span><br><span class=\"line\">\t\t\tString line;</span><br><span class=\"line\">\t\t\tStringBuffer buf=<span class=\"keyword\">new</span> StringBuffer();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>((line=reader.readLine())!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\tbuf.append(line);</span><br><span class=\"line\">\t\t\t\tbuf.append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\treader.close();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.fontdata=buf.toString();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.fontdata=charname+<span class=\"string\">&quot;?&quot;</span>;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(fontdata);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BigCharFactory类\"><a href=\"#BigCharFactory类\" class=\"headerlink\" title=\"BigCharFactory类\"></a>BigCharFactory类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigCharFactory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap pool=<span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">\t<span class=\"comment\">//Singleton模式</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> BigCharFactory singleton=<span class=\"keyword\">new</span> BigCharFactory();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">BigCharFactory</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//获取唯一实例</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigCharFactory <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//生成（共享)BigChar类实例</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> BigChar <span class=\"title\">getBigChar</span><span class=\"params\">(<span class=\"keyword\">char</span> charname)</span></span>&#123;</span><br><span class=\"line\">\t\tBigChar bc=(BigChar) pool.get(<span class=\"string\">&quot;&quot;</span>+charname);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(bc==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\tbc=<span class=\"keyword\">new</span> BigChar(charname);</span><br><span class=\"line\">\t\t\tpool.put(<span class=\"string\">&quot;&quot;</span>+charname, bc);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BigString类\"><a href=\"#BigString类\" class=\"headerlink\" title=\"BigString类\"></a>BigString类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigString</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> BigChar[] bigChars;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BigString</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\tbigChars=<span class=\"keyword\">new</span> BigChar[string.length()];</span><br><span class=\"line\">\t\tBigCharFactory factory=BigCharFactory.getInstance();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class=\"line\">\t\t\tbigChars[i]=factory.getBigChar(string.charAt(i));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class=\"line\">\t\t\tbigChars[i].print();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main类\"><a href=\"#Main类\" class=\"headerlink\" title=\"Main类\"></a>Main类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tBigString bs=<span class=\"keyword\">new</span> BigString(<span class=\"string\">&quot;10101&quot;</span>);</span><br><span class=\"line\">\t\tbs.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Flyweight模式会对<strong>多个地方产生影响</strong>。</p>\n<p><strong>Intrinsic:</strong>  应当被共享的信息<br><strong>Extrinsic:</strong> 不应当被共享的信息</p>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Instrinsic信息</td>\n<td>不依赖位置状况，可以共享</td>\n</tr>\n<tr>\n<td>Extrinsic信息</td>\n<td>依赖位置与状况，不能共享</td>\n</tr>\n</tbody></table>\n<p><strong>不要让被共享的实例被垃圾回收机器回收</strong><br>Flyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Flyweight-模式\"><a href=\"#Flyweight-模式\" class=\"headerlink\" title=\"Flyweight 模式\"></a>Flyweight 模式</h1><p><strong>共享</strong>对象，避免浪费。</p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BigChar</td>\n<td>表示”大型字符”类</td>\n</tr>\n<tr>\n<td>BigCharFactory</td>\n<td>表示生成和共用BigChar类的实例的类</td>\n</tr>\n<tr>\n<td>BigString</td>\n<td>表示多个BigChar组成的 “大型字符串” 的类</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"程序类图\"><a href=\"#程序类图\" class=\"headerlink\" title=\"程序类图\"></a>程序类图</h2><p><img src=\"/2018/02/12/Flyweight_Design_Pattern/flyweight_uml_fig.png\" alt=\"Flyweight\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"BigChar类\"><a href=\"#BigChar类\" class=\"headerlink\" title=\"BigChar类\"></a>BigChar类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigChar</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">char</span> charname;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String fontdata;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BigChar</span><span class=\"params\">(<span class=\"keyword\">char</span> charname)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.charname=charname;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tBufferedReader reader=<span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;/home/sean/Documents/&quot;</span>+<span class=\"string\">&quot;big&quot;</span>+charname+<span class=\"string\">&quot;.txt&quot;</span>));</span><br><span class=\"line\">\t\t\tString line;</span><br><span class=\"line\">\t\t\tStringBuffer buf=<span class=\"keyword\">new</span> StringBuffer();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>((line=reader.readLine())!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\tbuf.append(line);</span><br><span class=\"line\">\t\t\t\tbuf.append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\treader.close();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.fontdata=buf.toString();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.fontdata=charname+<span class=\"string\">&quot;?&quot;</span>;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(fontdata);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BigCharFactory类\"><a href=\"#BigCharFactory类\" class=\"headerlink\" title=\"BigCharFactory类\"></a>BigCharFactory类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigCharFactory</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap pool=<span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">\t<span class=\"comment\">//Singleton模式</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> BigCharFactory singleton=<span class=\"keyword\">new</span> BigCharFactory();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">BigCharFactory</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//获取唯一实例</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BigCharFactory <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//生成（共享)BigChar类实例</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> BigChar <span class=\"title\">getBigChar</span><span class=\"params\">(<span class=\"keyword\">char</span> charname)</span></span>&#123;</span><br><span class=\"line\">\t\tBigChar bc=(BigChar) pool.get(<span class=\"string\">&quot;&quot;</span>+charname);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(bc==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\tbc=<span class=\"keyword\">new</span> BigChar(charname);</span><br><span class=\"line\">\t\t\tpool.put(<span class=\"string\">&quot;&quot;</span>+charname, bc);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bc;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BigString类\"><a href=\"#BigString类\" class=\"headerlink\" title=\"BigString类\"></a>BigString类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BigString</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> BigChar[] bigChars;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BigString</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\tbigChars=<span class=\"keyword\">new</span> BigChar[string.length()];</span><br><span class=\"line\">\t\tBigCharFactory factory=BigCharFactory.getInstance();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class=\"line\">\t\t\tbigChars[i]=factory.getBigChar(string.charAt(i));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;bigChars.length;i++)&#123;</span><br><span class=\"line\">\t\t\tbigChars[i].print();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main类\"><a href=\"#Main类\" class=\"headerlink\" title=\"Main类\"></a>Main类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Flyweight;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tBigString bs=<span class=\"keyword\">new</span> BigString(<span class=\"string\">&quot;10101&quot;</span>);</span><br><span class=\"line\">\t\tbs.print();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Flyweight模式会对<strong>多个地方产生影响</strong>。</p>\n<p><strong>Intrinsic:</strong>  应当被共享的信息<br><strong>Extrinsic:</strong> 不应当被共享的信息</p>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Instrinsic信息</td>\n<td>不依赖位置状况，可以共享</td>\n</tr>\n<tr>\n<td>Extrinsic信息</td>\n<td>依赖位置与状况，不能共享</td>\n</tr>\n</tbody></table>\n<p><strong>不要让被共享的实例被垃圾回收机器回收</strong><br>Flyweight优点：共享实例能减少对内存的使用，并且能提高运行的速度。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/12/Flyweight_Design_Pattern/flyweight_uml_fig.png","popularPost_tmp_gaData":{"updated":"Mon Feb 12 2018 21:35:40 GMT+0800 (China Standard Time)","title":"Flyweight模式","path":"2018/02/12/Flyweight_Design_Pattern/","eyeCatchImage":"/2018/02/12/Flyweight_Design_Pattern/flyweight_uml_fig.png","excerpt":"本文简要讲述了设计模式中的Flyweight模式。","date":{"_isAMomentObject":true,"_i":"2018-02-12T13:35:40.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-12T13:35:40.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Flyweight"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2436},{"title":"Iterator模式","date":"2018-02-13T22:42:01.000Z","comments":1,"description":"本文简要讲述了设计模式中的Iterator模式。","_content":"\n\n#  Iterator模式\n一个一个遍历    **迭代器**\n\n---\n\n## 类图\n\n![Iterator](Iterator_Design_Pattern/Iterator_Design_Pattern.png)\n\n## code\n\n### Aggregate\n``` java\npackage com.sean.Iterator;\n\npublic interface Aggregate {\n\t\tpublic abstract Iterator iterator();\n}\n```\n### Iterator\n``` java\npackage com.sean.Iterator;\n\npublic interface Iterator {\n\t\tpublic abstract boolean hasNext();\n\t\tpublic abstract Object next();\n}\n\n```\n\n### Book\n``` java\npackage com.sean.Iterator;\n\npublic class Book {\n\tprivate String name;\n\tpublic Book(String name){\n\t\tthis.name=name;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n}\n\n```\n\n### BookShelf\n``` java\npackage com.sean.Iterator;\n\nimport java.util.ArrayList;\n\n\npublic class BookShelf implements Aggregate {\n\n\t//private Book[] books;\n\tprivate ArrayList<Book> bookList = new ArrayList<Book>();\n\tprivate int last=0;\n//\tpublic BookShelf(int maxsize){\n//\t\tthis.books = new Book[maxsize];\n//\t}\n\tpublic Book getBookAt(int index)\n\t{\n\t\treturn bookList.get(index);\n\t}\n\tpublic void appendBook(Book book){\n\t\tbookList.add(book);\n\t\tlast++;\n\t}\n\tpublic int getLength(){\n\t\treturn last;\n\t}\n\tpublic Iterator iterator() {\n\t\treturn  new BookShelfIterator(this);\n\t}\n\n}\n\n```\n\n### BookShelfIterator\n``` java\npackage com.sean.Iterator;\n\npublic class BookShelfIterator implements Iterator {\n\n\tprivate BookShelf bookShelf;\n\tprivate int index;\n\tpublic  BookShelfIterator(BookShelf bookShelf){\n\t\tthis.bookShelf = bookShelf;\n\t\tthis.index=0;\n\t}\n\tpublic boolean hasNext() {\n\t\t// TODO Auto-generated method stub\n\t\tif(index < bookShelf.getLength()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t}\n\n\tpublic Object next() {\n\t\t// TODO Auto-generated method stub\n\t\tBook book = bookShelf.getBookAt(index);\n\t\tindex++;\n\t\treturn book;\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.Iterator;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t//BookShelf bookShelf = new BookShelf(4);\n\t\tBookShelf bookShelf = new BookShelf();\n\t\tbookShelf.appendBook(new Book(\"Around the World in 80 Days\"));\n\t\tbookShelf.appendBook(new Book(\"Bible\"));\n\t\tbookShelf.appendBook(new Book(\"Cinderella\"));\n\t\tbookShelf.appendBook(new Book(\"Dady-Long-Legs\"));\n\t\tbookShelf.appendBook(new Book(\"Gone with the wind!\"));\n\t\tIterator it = bookShelf.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tBook book = (Book) it.next();\n\t\t\tSystem.out.println(book.getName());\n\t\t}\n\t\t\n\t}\n\n}\n\n```\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Iterator_Design_Pattern.md","raw":"---\ntitle: Iterator模式\ndate: 2018/02/13 22:42:01\ncomments: true\ndescription: 本文简要讲述了设计模式中的Iterator模式。\ntags:\n\t- Iterator\ncategories:\n\t- DesignPattern\n---\n\n\n#  Iterator模式\n一个一个遍历    **迭代器**\n\n---\n\n## 类图\n\n![Iterator](Iterator_Design_Pattern/Iterator_Design_Pattern.png)\n\n## code\n\n### Aggregate\n``` java\npackage com.sean.Iterator;\n\npublic interface Aggregate {\n\t\tpublic abstract Iterator iterator();\n}\n```\n### Iterator\n``` java\npackage com.sean.Iterator;\n\npublic interface Iterator {\n\t\tpublic abstract boolean hasNext();\n\t\tpublic abstract Object next();\n}\n\n```\n\n### Book\n``` java\npackage com.sean.Iterator;\n\npublic class Book {\n\tprivate String name;\n\tpublic Book(String name){\n\t\tthis.name=name;\n\t}\n\tpublic String getName(){\n\t\treturn name;\n\t}\n}\n\n```\n\n### BookShelf\n``` java\npackage com.sean.Iterator;\n\nimport java.util.ArrayList;\n\n\npublic class BookShelf implements Aggregate {\n\n\t//private Book[] books;\n\tprivate ArrayList<Book> bookList = new ArrayList<Book>();\n\tprivate int last=0;\n//\tpublic BookShelf(int maxsize){\n//\t\tthis.books = new Book[maxsize];\n//\t}\n\tpublic Book getBookAt(int index)\n\t{\n\t\treturn bookList.get(index);\n\t}\n\tpublic void appendBook(Book book){\n\t\tbookList.add(book);\n\t\tlast++;\n\t}\n\tpublic int getLength(){\n\t\treturn last;\n\t}\n\tpublic Iterator iterator() {\n\t\treturn  new BookShelfIterator(this);\n\t}\n\n}\n\n```\n\n### BookShelfIterator\n``` java\npackage com.sean.Iterator;\n\npublic class BookShelfIterator implements Iterator {\n\n\tprivate BookShelf bookShelf;\n\tprivate int index;\n\tpublic  BookShelfIterator(BookShelf bookShelf){\n\t\tthis.bookShelf = bookShelf;\n\t\tthis.index=0;\n\t}\n\tpublic boolean hasNext() {\n\t\t// TODO Auto-generated method stub\n\t\tif(index < bookShelf.getLength()){\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t}\n\n\tpublic Object next() {\n\t\t// TODO Auto-generated method stub\n\t\tBook book = bookShelf.getBookAt(index);\n\t\tindex++;\n\t\treturn book;\n\t}\n\n}\n\n```\n### Main\n``` java\npackage com.sean.Iterator;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t//BookShelf bookShelf = new BookShelf(4);\n\t\tBookShelf bookShelf = new BookShelf();\n\t\tbookShelf.appendBook(new Book(\"Around the World in 80 Days\"));\n\t\tbookShelf.appendBook(new Book(\"Bible\"));\n\t\tbookShelf.appendBook(new Book(\"Cinderella\"));\n\t\tbookShelf.appendBook(new Book(\"Dady-Long-Legs\"));\n\t\tbookShelf.appendBook(new Book(\"Gone with the wind!\"));\n\t\tIterator it = bookShelf.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tBook book = (Book) it.next();\n\t\t\tSystem.out.println(book.getName());\n\t\t}\n\t\t\n\t}\n\n}\n\n```\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Iterator_Design_Pattern","published":1,"updated":"2018-02-13T22:42:01.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a48000eytcv585t1e0z","content":"<h1 id=\"Iterator模式\"><a href=\"#Iterator模式\" class=\"headerlink\" title=\"Iterator模式\"></a>Iterator模式</h1><p>一个一个遍历    <strong>迭代器</strong></p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img data-src=\"/2018/02/14/Iterator_Design_Pattern/Iterator_Design_Pattern.png\" alt=\"Iterator\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Aggregate\"><a href=\"#Aggregate\" class=\"headerlink\" title=\"Aggregate\"></a>Aggregate</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Aggregate</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Iterator <span class=\"title\">iterator</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Iterator\"><a href=\"#Iterator\" class=\"headerlink\" title=\"Iterator\"></a>Iterator</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Iterator</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Object <span class=\"title\">next</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Book\"><a href=\"#Book\" class=\"headerlink\" title=\"Book\"></a>Book</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Book</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BookShelf\"><a href=\"#BookShelf\" class=\"headerlink\" title=\"BookShelf\"></a>BookShelf</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookShelf</span> <span class=\"keyword\">implements</span> <span class=\"title\">Aggregate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//private Book[] books;</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;Book&gt; bookList = <span class=\"keyword\">new</span> ArrayList&lt;Book&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> last=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//\tpublic BookShelf(int maxsize)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tthis.books = new Book[maxsize];</span></span><br><span class=\"line\"><span class=\"comment\">//\t&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Book <span class=\"title\">getBookAt</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bookList.get(index);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">appendBook</span><span class=\"params\">(Book book)</span></span>&#123;</span><br><span class=\"line\">\t\tbookList.add(book);</span><br><span class=\"line\">\t\tlast++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLength</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> last;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Iterator <span class=\"title\">iterator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> BookShelfIterator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BookShelfIterator\"><a href=\"#BookShelfIterator\" class=\"headerlink\" title=\"BookShelfIterator\"></a>BookShelfIterator</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookShelfIterator</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> BookShelf bookShelf;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> index;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">BookShelfIterator</span><span class=\"params\">(BookShelf bookShelf)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.bookShelf = bookShelf;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.index=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(index &lt; bookShelf.getLength())&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">next</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tBook book = bookShelf.getBookAt(index);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> book;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//BookShelf bookShelf = new BookShelf(4);</span></span><br><span class=\"line\">\t\tBookShelf bookShelf = <span class=\"keyword\">new</span> BookShelf();</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Around the World in 80 Days&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Bible&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Cinderella&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Dady-Long-Legs&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Gone with the wind!&quot;</span>));</span><br><span class=\"line\">\t\tIterator it = bookShelf.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tBook book = (Book) it.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(book.getName());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Iterator模式\"><a href=\"#Iterator模式\" class=\"headerlink\" title=\"Iterator模式\"></a>Iterator模式</h1><p>一个一个遍历    <strong>迭代器</strong></p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"/2018/02/14/Iterator_Design_Pattern/Iterator_Design_Pattern.png\" alt=\"Iterator\"></p>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><h3 id=\"Aggregate\"><a href=\"#Aggregate\" class=\"headerlink\" title=\"Aggregate\"></a>Aggregate</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Aggregate</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Iterator <span class=\"title\">iterator</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Iterator\"><a href=\"#Iterator\" class=\"headerlink\" title=\"Iterator\"></a>Iterator</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Iterator</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Object <span class=\"title\">next</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Book\"><a href=\"#Book\" class=\"headerlink\" title=\"Book\"></a>Book</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Book</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Book</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BookShelf\"><a href=\"#BookShelf\" class=\"headerlink\" title=\"BookShelf\"></a>BookShelf</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookShelf</span> <span class=\"keyword\">implements</span> <span class=\"title\">Aggregate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//private Book[] books;</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;Book&gt; bookList = <span class=\"keyword\">new</span> ArrayList&lt;Book&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> last=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//\tpublic BookShelf(int maxsize)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\tthis.books = new Book[maxsize];</span></span><br><span class=\"line\"><span class=\"comment\">//\t&#125;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Book <span class=\"title\">getBookAt</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> bookList.get(index);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">appendBook</span><span class=\"params\">(Book book)</span></span>&#123;</span><br><span class=\"line\">\t\tbookList.add(book);</span><br><span class=\"line\">\t\tlast++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLength</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> last;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Iterator <span class=\"title\">iterator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> BookShelfIterator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"BookShelfIterator\"><a href=\"#BookShelfIterator\" class=\"headerlink\" title=\"BookShelfIterator\"></a>BookShelfIterator</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BookShelfIterator</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> BookShelf bookShelf;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> index;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"title\">BookShelfIterator</span><span class=\"params\">(BookShelf bookShelf)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.bookShelf = bookShelf;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.index=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(index &lt; bookShelf.getLength())&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">next</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tBook book = bookShelf.getBookAt(index);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> book;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//BookShelf bookShelf = new BookShelf(4);</span></span><br><span class=\"line\">\t\tBookShelf bookShelf = <span class=\"keyword\">new</span> BookShelf();</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Around the World in 80 Days&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Bible&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Cinderella&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Dady-Long-Legs&quot;</span>));</span><br><span class=\"line\">\t\tbookShelf.appendBook(<span class=\"keyword\">new</span> Book(<span class=\"string\">&quot;Gone with the wind!&quot;</span>));</span><br><span class=\"line\">\t\tIterator it = bookShelf.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tBook book = (Book) it.next();</span><br><span class=\"line\">\t\t\tSystem.out.println(book.getName());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/14/Iterator_Design_Pattern/Iterator_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Wed Feb 14 2018 06:42:01 GMT+0800 (China Standard Time)","title":"Iterator模式","path":"2018/02/14/Iterator_Design_Pattern/","eyeCatchImage":"/2018/02/14/Iterator_Design_Pattern/Iterator_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的Iterator模式。","date":{"_isAMomentObject":true,"_i":"2018-02-13T22:42:01.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-13T22:42:01.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Iterator"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2258},{"title":"JSP自定义标签","date":"2018-02-16T20:43:51.000Z","comments":1,"description":"本文简要叙述了JSP自定义标签的实现。","_content":"\n# JSP自定义标签\n\n自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承**SimpleTag** 实现的标签管理器。\n简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。\n> 初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。                    \n\n**JSP规范的作者在JSP规范的7.15一节写到**\n\n\n**SimpleTag**接口中用于标签触发的方法只有一个**doTag**，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。\n\n`javax.servlet.jsp.targext`包中包含了一个SimpleTag的基础类\n**SimpleTagSupport**提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。\n**SimpleTagSupport**类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。\n***\n\n## SimpleTag示例\n\n### 编写标签处理器\n\n#### MyFirstTag类\n\n``` java\npackage com.sean;\n\nimport java.io.IOException;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.tagext.JspFragment;\nimport javax.servlet.jsp.tagext.JspTag;\nimport javax.servlet.jsp.tagext.SimpleTag;\n\npublic class MyFirstTag implements SimpleTag{\n\tJspContext jspContext;\n\t@Override\n\tpublic void doTag() throws JspException, IOException {\n\t\tSystem.out.println(\"doTag\");\n\t\tjspContext.getOut().print(\"This is my first tag.\");\n\t}\n\n\t@Override\n\tpublic JspTag getParent() {\n\t\tSystem.out.println(\"getParent\");\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic void setJspBody(JspFragment body) {\n\t\t\n\t\tSystem.out.println(\"setJspBody\");\n\t}\n\n\t@Override\n\tpublic void setJspContext(JspContext jspContext) {\n\t\tSystem.out.println(\"setJspContext\");\n\t\tthis.jspContext=jspContext;\n\t\t\n\t}\n\n\t@Override\n\tpublic void setParent(JspTag parent) {\n\t\tSystem.out.println(\"setParent\");\n\t\t\n\t}\n\n}\n\n```\n\n### 注册标签\n#### mytags.tld\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd\"\n\t\tversion=\"2.1\">\n\n\t<description>\n\t\tSimple tag examples\n\t</description>\n\t<tlib-version>1.0</tlib-version>\n\t<short-name>My First Taglib Example</short-name>\n\t<tag>\n\t\t<name>firstTag</name>\n\t\t<tag-class>com.sean.MyFirstTag</tag-class>\n\t\t<body-content>empty</body-content>\n\t</tag>\t\n</taglib>\n\n```\nname节点用于说明这个标签名称；tag-class则用于指出标签处理器的**完整类名**。\n当然一个标签库中可以定义多个标签。\n\n### 使用标签\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>firstTagTest</title>\n  <body>\n   Hello!\n   <br>\n   <easy:firstTag></easy:firstTag>\n  </body>\n</html>\n```\n我的项目名 `customtag`\n启动服务器，输入即可。\n`http://localhost:8080/customtag/firstTagTest.jsp`\n\n***\n\n## 处理属性\n\n实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。\n\n###  DataFrmatterTag\n继承SimpleTagSupport\n``` java\npackage com.sean;\n\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.JspWriter;\nimport javax.servlet.jsp.tagext.SimpleTagSupport;\n\npublic class DataFrmatterTag extends SimpleTagSupport {\n\tprivate String header;\n\tprivate String items;\n\tpublic String getHeader() {\n\t\treturn header;\n\t}\n\tpublic void setHeader(String header) {\n\t\tthis.header = header;\n\t}\n\tpublic String getItems() {\n\t\treturn items;\n\t}\n\tpublic void setItems(String items) {\n\t\tthis.items = items;\n\t}\n\tpublic void doTag() throws IOException,JspException{\n\t\tJspContext jspContext=getJspContext();\n\t\tJspWriter out=jspContext.getOut();\n\t\t\n\t\tout.print(\"<table style='border:1px solid green'>\\n\"\n\t\t\t\t\t+\"<tr><td><span style='font-weight:bold'>\"\n\t\t\t\t\t+header+\"</span></td></tr>\\n\");\n\t\tStringTokenizer tokenizer=new StringTokenizer(items,\",\");\n\t\twhile(tokenizer.hasMoreTokens()){\n\t\t\tString token=tokenizer.nextToken();\n\t\t\tout.print(\"<tr><td>\"+token+\"</td></tr>\\n\");\n\t\t}\n\t\tout.print(\"</table>\");\n\t}\n\t\n}\n\n```\n`doTag()` 首先通过`getJspContext()`获取通过JSP容器传入的 `JspContext`对象\n`JspContext jspContext=getJspContext();`\n接着，通过`JspContext`实例的`getOut()`获取`JspWriter`对象\n`JspWriter out=jspContext.getOut();`\n然后，`doTag()`方法使用`StringTokenizer`解析`items`属性值。\n\n###注册DataFrmatter标签\n\n``` xml\n\t<tag>\n\t<name>dataFormatter</name>\n\t<tag-class>com.sean.DataFrmatterTag</tag-class>\n\t<body-content>empty</body-content>\n\t<attribute>\n\t\t<name>header</name>\n\t\t<required>true</required>\n\t</attribute>\n\t\n\t<attribute>\n\t\t<name>items</name>\n\t\t<required>true</required>\n\t</attribute>\n\t</tag>\n```\n\n### dataFormatterTagTest.jsp\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    \n    <title>My JSP 'dataFormatterTagTest.jsp' starting page</title>\n\t<title>Testing DataFormatterTag</title>\n  </head>\n  <body>\n    <easy:dataFormatter items=\"Alabama,Alaska,Georgia,Florida\" header=\"states\"/>\n    <br>\n    <easy:dataFormatter header=\"Countries\">\n    \t<jsp:attribute name=\"items\">\n    \tUS,UK,Canada,Korea\n    \t</jsp:attribute>\n    </easy:dataFormatter>\n  </body>\n</html>\n```\n## 访问标签内容\n### SelectElementTag类\n``` java\npackage com.sean;\n\nimport java.io.IOException;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.JspWriter;\nimport javax.servlet.jsp.tagext.SimpleTagSupport;\n\npublic class SelectElementTag extends SimpleTagSupport {\n\tprivate String[] countries ={\"China\",\"Brazil\",\"American\",\"Japan\"};\n\tpublic void doTag() throws IOException,JspException{\n\t\tJspContext jspContext=getJspContext();\n\t\tJspWriter out=jspContext.getOut();\n\t\tout.print(\"<select>\\n\");\n\t\tfor(int i=0;i<countries.length;i++){\n\t\t\tgetJspContext().setAttribute(\"value\", countries[i]);\n\t\t\tgetJspContext().setAttribute(\"text\", countries[i]);\n\t\t\tgetJspBody().invoke(null);\n\t\t}\n\t\tout.print(\"</select>\\n\");\n\t}\n}\n```\n\n### 注册selectElementTag\n\n``` xml\n        <tag>\n\t\t<name>select</name>\n\t\t<tag-class>com.sean.SelectElementTag</tag-class>\n\t\t<body-content>scriptless</body-content>\n\t</tag>\n```\n\n### selectElementTagTest.jsp\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>My JSP 'selectElementTagTest.jsp' starting page</title>\n  </head>\n  \n  <body>\n    <easy:select>\n    \t<option value=\"${value}\">${text}</option>\n    </easy:select>\n  </body>\n</html>\n\n```\n我的项目名 `customtag`\n启动服务器，输入即可。\n`http://localhost:8080/customtag/selectElementTagTest.jsp`\n\n## 编写EL函数\n\n编写EL函数步骤\n1.创建一个包含**静态方法**的public类。每个类的静态方法表示一个EL函数。**这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类**\n2.用function节点在标签库描述器注册函数\n\n\n| 节点 | 说明 |\n|--------|--------|\n| description | 可选，标签说明 |\n| display-name | 在xml工具中显示缩写名字 |\n| icon | 可选，在xml工具中使用icon节点 |\n| name | 函数的唯一名字 |\n| function-class | 该函数对应实现的java类的全名 |\n| function-signature | 该函数对应实现的java静态方法 |\n| example | 可选，使用该函数的实例说明 |\n| function-extension | 可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节 |\n\n使用该函数，须将`taglib`指令中的`uri`属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：\n`${prefix:functionName(parameterList)}`\n\n### MyFunction \n\n``` java\npackage com.sean.function;\n\npublic class MyFunction {\n\tpublic static String reverseString(String s){\n\t\t//字符串的反转\n\t\treturn new StringBuffer(s).reverse().toString();\n\t}\n}\n```\n\n### functiontags.tld\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd\"\n\t\tversion=\"2.1\">\n\t<description>Function tag example</description>\t\t\n\t<tlib-version>1.0</tlib-version>\n\t<uri>http://example.com/taglib/function</uri>\n\t<function>\n\t\t<description>Reverse a String</description>\n\t\t<name>reverseString</name>\n\t\t<function-class>com.sean.function.MyFunction</function-class>\n\t\t<function-signature>java.lang.String reverseString(java.lang.String)</function-signature>\n\t</function>\n</taglib>\n```\n\n### 使用El\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"http://example.com/taglib/function\" prefix=\"f\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">    \n    <title>My JSP 'functionTagTest.jsp' starting page</title>\n  </head>\n  <body>\n   ${f:reverseString(\"Hello, World\") }\n   <br>\n   ${f:reverseString(\"Welcome\")}\n  </body>\n</html>\n```\n\n## 发布自定义标签\n\n在functiontags.tld增加`uri`节点\n`<uri>http://example.com/taglib/function</uri>`\n\n在jsp页面添加\n`<%@ taglib uri=\"http://example.com/taglib/function\" prefix=\"f\" %>`\n\n## 总结\n自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。\n","source":"_posts/JSP自定义标签.md","raw":"---\ntitle: JSP自定义标签\ndate: 2018/02/16 20:43:51\ncomments: true\ndescription: 本文简要叙述了JSP自定义标签的实现。\ntags:\n\t- tags\ncategories:\n\t- Java\n\t- JSP\n---\n\n# JSP自定义标签\n\n自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承**SimpleTag** 实现的标签管理器。\n简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。\n> 初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。                    \n\n**JSP规范的作者在JSP规范的7.15一节写到**\n\n\n**SimpleTag**接口中用于标签触发的方法只有一个**doTag**，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。\n\n`javax.servlet.jsp.targext`包中包含了一个SimpleTag的基础类\n**SimpleTagSupport**提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。\n**SimpleTagSupport**类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。\n***\n\n## SimpleTag示例\n\n### 编写标签处理器\n\n#### MyFirstTag类\n\n``` java\npackage com.sean;\n\nimport java.io.IOException;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.tagext.JspFragment;\nimport javax.servlet.jsp.tagext.JspTag;\nimport javax.servlet.jsp.tagext.SimpleTag;\n\npublic class MyFirstTag implements SimpleTag{\n\tJspContext jspContext;\n\t@Override\n\tpublic void doTag() throws JspException, IOException {\n\t\tSystem.out.println(\"doTag\");\n\t\tjspContext.getOut().print(\"This is my first tag.\");\n\t}\n\n\t@Override\n\tpublic JspTag getParent() {\n\t\tSystem.out.println(\"getParent\");\n\t\treturn null;\n\t}\n\n\t@Override\n\tpublic void setJspBody(JspFragment body) {\n\t\t\n\t\tSystem.out.println(\"setJspBody\");\n\t}\n\n\t@Override\n\tpublic void setJspContext(JspContext jspContext) {\n\t\tSystem.out.println(\"setJspContext\");\n\t\tthis.jspContext=jspContext;\n\t\t\n\t}\n\n\t@Override\n\tpublic void setParent(JspTag parent) {\n\t\tSystem.out.println(\"setParent\");\n\t\t\n\t}\n\n}\n\n```\n\n### 注册标签\n#### mytags.tld\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd\"\n\t\tversion=\"2.1\">\n\n\t<description>\n\t\tSimple tag examples\n\t</description>\n\t<tlib-version>1.0</tlib-version>\n\t<short-name>My First Taglib Example</short-name>\n\t<tag>\n\t\t<name>firstTag</name>\n\t\t<tag-class>com.sean.MyFirstTag</tag-class>\n\t\t<body-content>empty</body-content>\n\t</tag>\t\n</taglib>\n\n```\nname节点用于说明这个标签名称；tag-class则用于指出标签处理器的**完整类名**。\n当然一个标签库中可以定义多个标签。\n\n### 使用标签\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>firstTagTest</title>\n  <body>\n   Hello!\n   <br>\n   <easy:firstTag></easy:firstTag>\n  </body>\n</html>\n```\n我的项目名 `customtag`\n启动服务器，输入即可。\n`http://localhost:8080/customtag/firstTagTest.jsp`\n\n***\n\n## 处理属性\n\n实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。\n\n###  DataFrmatterTag\n继承SimpleTagSupport\n``` java\npackage com.sean;\n\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.JspWriter;\nimport javax.servlet.jsp.tagext.SimpleTagSupport;\n\npublic class DataFrmatterTag extends SimpleTagSupport {\n\tprivate String header;\n\tprivate String items;\n\tpublic String getHeader() {\n\t\treturn header;\n\t}\n\tpublic void setHeader(String header) {\n\t\tthis.header = header;\n\t}\n\tpublic String getItems() {\n\t\treturn items;\n\t}\n\tpublic void setItems(String items) {\n\t\tthis.items = items;\n\t}\n\tpublic void doTag() throws IOException,JspException{\n\t\tJspContext jspContext=getJspContext();\n\t\tJspWriter out=jspContext.getOut();\n\t\t\n\t\tout.print(\"<table style='border:1px solid green'>\\n\"\n\t\t\t\t\t+\"<tr><td><span style='font-weight:bold'>\"\n\t\t\t\t\t+header+\"</span></td></tr>\\n\");\n\t\tStringTokenizer tokenizer=new StringTokenizer(items,\",\");\n\t\twhile(tokenizer.hasMoreTokens()){\n\t\t\tString token=tokenizer.nextToken();\n\t\t\tout.print(\"<tr><td>\"+token+\"</td></tr>\\n\");\n\t\t}\n\t\tout.print(\"</table>\");\n\t}\n\t\n}\n\n```\n`doTag()` 首先通过`getJspContext()`获取通过JSP容器传入的 `JspContext`对象\n`JspContext jspContext=getJspContext();`\n接着，通过`JspContext`实例的`getOut()`获取`JspWriter`对象\n`JspWriter out=jspContext.getOut();`\n然后，`doTag()`方法使用`StringTokenizer`解析`items`属性值。\n\n###注册DataFrmatter标签\n\n``` xml\n\t<tag>\n\t<name>dataFormatter</name>\n\t<tag-class>com.sean.DataFrmatterTag</tag-class>\n\t<body-content>empty</body-content>\n\t<attribute>\n\t\t<name>header</name>\n\t\t<required>true</required>\n\t</attribute>\n\t\n\t<attribute>\n\t\t<name>items</name>\n\t\t<required>true</required>\n\t</attribute>\n\t</tag>\n```\n\n### dataFormatterTagTest.jsp\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    \n    <title>My JSP 'dataFormatterTagTest.jsp' starting page</title>\n\t<title>Testing DataFormatterTag</title>\n  </head>\n  <body>\n    <easy:dataFormatter items=\"Alabama,Alaska,Georgia,Florida\" header=\"states\"/>\n    <br>\n    <easy:dataFormatter header=\"Countries\">\n    \t<jsp:attribute name=\"items\">\n    \tUS,UK,Canada,Korea\n    \t</jsp:attribute>\n    </easy:dataFormatter>\n  </body>\n</html>\n```\n## 访问标签内容\n### SelectElementTag类\n``` java\npackage com.sean;\n\nimport java.io.IOException;\n\nimport javax.servlet.jsp.JspContext;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.JspWriter;\nimport javax.servlet.jsp.tagext.SimpleTagSupport;\n\npublic class SelectElementTag extends SimpleTagSupport {\n\tprivate String[] countries ={\"China\",\"Brazil\",\"American\",\"Japan\"};\n\tpublic void doTag() throws IOException,JspException{\n\t\tJspContext jspContext=getJspContext();\n\t\tJspWriter out=jspContext.getOut();\n\t\tout.print(\"<select>\\n\");\n\t\tfor(int i=0;i<countries.length;i++){\n\t\t\tgetJspContext().setAttribute(\"value\", countries[i]);\n\t\t\tgetJspContext().setAttribute(\"text\", countries[i]);\n\t\t\tgetJspBody().invoke(null);\n\t\t}\n\t\tout.print(\"</select>\\n\");\n\t}\n}\n```\n\n### 注册selectElementTag\n\n``` xml\n        <tag>\n\t\t<name>select</name>\n\t\t<tag-class>com.sean.SelectElementTag</tag-class>\n\t\t<body-content>scriptless</body-content>\n\t</tag>\n```\n\n### selectElementTagTest.jsp\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"/WEB-INF/mytags.tld\" prefix=\"easy\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>My JSP 'selectElementTagTest.jsp' starting page</title>\n  </head>\n  \n  <body>\n    <easy:select>\n    \t<option value=\"${value}\">${text}</option>\n    </easy:select>\n  </body>\n</html>\n\n```\n我的项目名 `customtag`\n启动服务器，输入即可。\n`http://localhost:8080/customtag/selectElementTagTest.jsp`\n\n## 编写EL函数\n\n编写EL函数步骤\n1.创建一个包含**静态方法**的public类。每个类的静态方法表示一个EL函数。**这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类**\n2.用function节点在标签库描述器注册函数\n\n\n| 节点 | 说明 |\n|--------|--------|\n| description | 可选，标签说明 |\n| display-name | 在xml工具中显示缩写名字 |\n| icon | 可选，在xml工具中使用icon节点 |\n| name | 函数的唯一名字 |\n| function-class | 该函数对应实现的java类的全名 |\n| function-signature | 该函数对应实现的java静态方法 |\n| example | 可选，使用该函数的实例说明 |\n| function-extension | 可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节 |\n\n使用该函数，须将`taglib`指令中的`uri`属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：\n`${prefix:functionName(parameterList)}`\n\n### MyFunction \n\n``` java\npackage com.sean.function;\n\npublic class MyFunction {\n\tpublic static String reverseString(String s){\n\t\t//字符串的反转\n\t\treturn new StringBuffer(s).reverse().toString();\n\t}\n}\n```\n\n### functiontags.tld\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<taglib xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\txsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd\"\n\t\tversion=\"2.1\">\n\t<description>Function tag example</description>\t\t\n\t<tlib-version>1.0</tlib-version>\n\t<uri>http://example.com/taglib/function</uri>\n\t<function>\n\t\t<description>Reverse a String</description>\n\t\t<name>reverseString</name>\n\t\t<function-class>com.sean.function.MyFunction</function-class>\n\t\t<function-signature>java.lang.String reverseString(java.lang.String)</function-signature>\n\t</function>\n</taglib>\n```\n\n### 使用El\n\n``` jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"http://example.com/taglib/function\" prefix=\"f\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">    \n    <title>My JSP 'functionTagTest.jsp' starting page</title>\n  </head>\n  <body>\n   ${f:reverseString(\"Hello, World\") }\n   <br>\n   ${f:reverseString(\"Welcome\")}\n  </body>\n</html>\n```\n\n## 发布自定义标签\n\n在functiontags.tld增加`uri`节点\n`<uri>http://example.com/taglib/function</uri>`\n\n在jsp页面添加\n`<%@ taglib uri=\"http://example.com/taglib/function\" prefix=\"f\" %>`\n\n## 总结\n自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。\n","slug":"JSP自定义标签","published":1,"updated":"2018-02-16T20:43:51.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4b000fytcv98ff6d22","content":"<h1 id=\"JSP自定义标签\"><a href=\"#JSP自定义标签\" class=\"headerlink\" title=\"JSP自定义标签\"></a>JSP自定义标签</h1><p>自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承<strong>SimpleTag</strong> 实现的标签管理器。<br>简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。</p>\n<blockquote>\n<p>初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。                    </p>\n</blockquote>\n<p><strong>JSP规范的作者在JSP规范的7.15一节写到</strong></p>\n<p><strong>SimpleTag</strong>接口中用于标签触发的方法只有一个<strong>doTag</strong>，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。</p>\n<p><code>javax.servlet.jsp.targext</code>包中包含了一个SimpleTag的基础类<br><strong>SimpleTagSupport</strong>提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。<br><strong>SimpleTagSupport</strong>类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。</p>\n<hr>\n<h2 id=\"SimpleTag示例\"><a href=\"#SimpleTag示例\" class=\"headerlink\" title=\"SimpleTag示例\"></a>SimpleTag示例</h2><h3 id=\"编写标签处理器\"><a href=\"#编写标签处理器\" class=\"headerlink\" title=\"编写标签处理器\"></a>编写标签处理器</h3><h4 id=\"MyFirstTag类\"><a href=\"#MyFirstTag类\" class=\"headerlink\" title=\"MyFirstTag类\"></a>MyFirstTag类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTag;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyFirstTag</span> <span class=\"keyword\">implements</span> <span class=\"title\">SimpleTag</span></span>&#123;</span><br><span class=\"line\">\tJspContext jspContext;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> JspException, IOException </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;doTag&quot;</span>);</span><br><span class=\"line\">\t\tjspContext.getOut().print(<span class=\"string\">&quot;This is my first tag.&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> JspTag <span class=\"title\">getParent</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;getParent&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJspBody</span><span class=\"params\">(JspFragment body)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setJspBody&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJspContext</span><span class=\"params\">(JspContext jspContext)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setJspContext&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.jspContext=jspContext;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setParent</span><span class=\"params\">(JspTag parent)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setParent&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"注册标签\"><a href=\"#注册标签\" class=\"headerlink\" title=\"注册标签\"></a>注册标签</h3><h4 id=\"mytags-tld\"><a href=\"#mytags-tld\" class=\"headerlink\" title=\"mytags.tld\"></a>mytags.tld</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">taglib</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">version</span>=<span class=\"string\">&quot;2.1&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t\tSimple tag examples</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tlib-version</span>&gt;</span>1.0<span class=\"tag\">&lt;/<span class=\"name\">tlib-version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">short-name</span>&gt;</span>My First Taglib Example<span class=\"tag\">&lt;/<span class=\"name\">short-name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>firstTag<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.MyFirstTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>empty<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span>\t</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">taglib</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>name节点用于说明这个标签名称；tag-class则用于指出标签处理器的<strong>完整类名</strong>。<br>当然一个标签库中可以定义多个标签。</p>\n<h3 id=\"使用标签\"><a href=\"#使用标签\" class=\"headerlink\" title=\"使用标签\"></a>使用标签</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;firstTagTest&lt;/title&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">   Hello!</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   &lt;easy:firstTag&gt;&lt;/easy:firstTag&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/firstTagTest.jsp</code></p>\n<hr>\n<h2 id=\"处理属性\"><a href=\"#处理属性\" class=\"headerlink\" title=\"处理属性\"></a>处理属性</h2><p>实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。</p>\n<h3 id=\"DataFrmatterTag\"><a href=\"#DataFrmatterTag\" class=\"headerlink\" title=\"DataFrmatterTag\"></a>DataFrmatterTag</h3><p>继承SimpleTagSupport</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataFrmatterTag</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleTagSupport</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String header;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String items;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getHeader</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> header;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHeader</span><span class=\"params\">(String header)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.header = header;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getItems</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> items;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setItems</span><span class=\"params\">(String items)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.items = items;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException,JspException</span>&#123;</span><br><span class=\"line\">\t\tJspContext jspContext=getJspContext();</span><br><span class=\"line\">\t\tJspWriter out=jspContext.getOut();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;table style=&#x27;border:1px solid green&#x27;&gt;\\n&quot;</span></span><br><span class=\"line\">\t\t\t\t\t+<span class=\"string\">&quot;&lt;tr&gt;&lt;td&gt;&lt;span style=&#x27;font-weight:bold&#x27;&gt;&quot;</span></span><br><span class=\"line\">\t\t\t\t\t+header+<span class=\"string\">&quot;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\tStringTokenizer tokenizer=<span class=\"keyword\">new</span> StringTokenizer(items,<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(tokenizer.hasMoreTokens())&#123;</span><br><span class=\"line\">\t\t\tString token=tokenizer.nextToken();</span><br><span class=\"line\">\t\t\tout.print(<span class=\"string\">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+token+<span class=\"string\">&quot;&lt;/td&gt;&lt;/tr&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;/table&gt;&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>doTag()</code> 首先通过<code>getJspContext()</code>获取通过JSP容器传入的 <code>JspContext</code>对象<br><code>JspContext jspContext=getJspContext();</code><br>接着，通过<code>JspContext</code>实例的<code>getOut()</code>获取<code>JspWriter</code>对象<br><code>JspWriter out=jspContext.getOut();</code><br>然后，<code>doTag()</code>方法使用<code>StringTokenizer</code>解析<code>items</code>属性值。</p>\n<p>###注册DataFrmatter标签</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dataFormatter<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.DataFrmatterTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>empty<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>header<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">required</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">required</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>items<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">required</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">required</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"dataFormatterTagTest-jsp\"><a href=\"#dataFormatterTagTest-jsp\" class=\"headerlink\" title=\"dataFormatterTagTest.jsp\"></a>dataFormatterTagTest.jsp</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;dataFormatterTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">\t&lt;title&gt;Testing DataFormatterTag&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;easy:dataFormatter items=<span class=\"string\">&quot;Alabama,Alaska,Georgia,Florida&quot;</span> header=<span class=\"string\">&quot;states&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;br&gt;</span><br><span class=\"line\">    &lt;easy:dataFormatter header=<span class=\"string\">&quot;Countries&quot;</span>&gt;</span><br><span class=\"line\">    \t&lt;jsp:attribute name=<span class=\"string\">&quot;items&quot;</span>&gt;</span><br><span class=\"line\">    \tUS,UK,Canada,Korea</span><br><span class=\"line\">    \t&lt;/jsp:attribute&gt;</span><br><span class=\"line\">    &lt;/easy:dataFormatter&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问标签内容\"><a href=\"#访问标签内容\" class=\"headerlink\" title=\"访问标签内容\"></a>访问标签内容</h2><h3 id=\"SelectElementTag类\"><a href=\"#SelectElementTag类\" class=\"headerlink\" title=\"SelectElementTag类\"></a>SelectElementTag类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelectElementTag</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleTagSupport</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String[] countries =&#123;<span class=\"string\">&quot;China&quot;</span>,<span class=\"string\">&quot;Brazil&quot;</span>,<span class=\"string\">&quot;American&quot;</span>,<span class=\"string\">&quot;Japan&quot;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException,JspException</span>&#123;</span><br><span class=\"line\">\t\tJspContext jspContext=getJspContext();</span><br><span class=\"line\">\t\tJspWriter out=jspContext.getOut();</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;select&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;countries.length;i++)&#123;</span><br><span class=\"line\">\t\t\tgetJspContext().setAttribute(<span class=\"string\">&quot;value&quot;</span>, countries[i]);</span><br><span class=\"line\">\t\t\tgetJspContext().setAttribute(<span class=\"string\">&quot;text&quot;</span>, countries[i]);</span><br><span class=\"line\">\t\t\tgetJspBody().invoke(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;/select&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注册selectElementTag\"><a href=\"#注册selectElementTag\" class=\"headerlink\" title=\"注册selectElementTag\"></a>注册selectElementTag</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>select<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.SelectElementTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>scriptless<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"selectElementTagTest-jsp\"><a href=\"#selectElementTagTest-jsp\" class=\"headerlink\" title=\"selectElementTagTest.jsp\"></a>selectElementTagTest.jsp</h3><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;selectElementTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;easy:select&gt;</span><br><span class=\"line\">    \t&lt;option value=&quot;$&#123;value&#125;&quot;&gt;$&#123;text&#125;&lt;/option&gt;</span><br><span class=\"line\">    &lt;/easy:select&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/selectElementTagTest.jsp</code></p>\n<h2 id=\"编写EL函数\"><a href=\"#编写EL函数\" class=\"headerlink\" title=\"编写EL函数\"></a>编写EL函数</h2><p>编写EL函数步骤<br>1.创建一个包含<strong>静态方法</strong>的public类。每个类的静态方法表示一个EL函数。<strong>这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类</strong><br>2.用function节点在标签库描述器注册函数</p>\n<table>\n<thead>\n<tr>\n<th>节点</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>description</td>\n<td>可选，标签说明</td>\n</tr>\n<tr>\n<td>display-name</td>\n<td>在xml工具中显示缩写名字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>可选，在xml工具中使用icon节点</td>\n</tr>\n<tr>\n<td>name</td>\n<td>函数的唯一名字</td>\n</tr>\n<tr>\n<td>function-class</td>\n<td>该函数对应实现的java类的全名</td>\n</tr>\n<tr>\n<td>function-signature</td>\n<td>该函数对应实现的java静态方法</td>\n</tr>\n<tr>\n<td>example</td>\n<td>可选，使用该函数的实例说明</td>\n</tr>\n<tr>\n<td>function-extension</td>\n<td>可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节</td>\n</tr>\n</tbody></table>\n<p>使用该函数，须将<code>taglib</code>指令中的<code>uri</code>属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：<br><code>$&#123;prefix:functionName(parameterList)&#125;</code></p>\n<h3 id=\"MyFunction\"><a href=\"#MyFunction\" class=\"headerlink\" title=\"MyFunction\"></a>MyFunction</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyFunction</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">reverseString</span><span class=\"params\">(String s)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//字符串的反转</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StringBuffer(s).reverse().toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"functiontags-tld\"><a href=\"#functiontags-tld\" class=\"headerlink\" title=\"functiontags.tld\"></a>functiontags.tld</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">taglib</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">version</span>=<span class=\"string\">&quot;2.1&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Function tag example<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>\t\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tlib-version</span>&gt;</span>1.0<span class=\"tag\">&lt;/<span class=\"name\">tlib-version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">uri</span>&gt;</span>http://example.com/taglib/function<span class=\"tag\">&lt;/<span class=\"name\">uri</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">function</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Reverse a String<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>reverseString<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">function-class</span>&gt;</span>com.sean.function.MyFunction<span class=\"tag\">&lt;/<span class=\"name\">function-class</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">function-signature</span>&gt;</span>java.lang.String reverseString(java.lang.String)<span class=\"tag\">&lt;/<span class=\"name\">function-signature</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">function</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用El\"><a href=\"#使用El\" class=\"headerlink\" title=\"使用El\"></a>使用El</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;http://example.com/taglib/function&quot;</span> prefix=<span class=\"string\">&quot;f&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;    </span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;functionTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">   $&#123;f:reverseString(<span class=\"string\">&quot;Hello, World&quot;</span>) &#125;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   $&#123;f:reverseString(<span class=\"string\">&quot;Welcome&quot;</span>)&#125;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布自定义标签\"><a href=\"#发布自定义标签\" class=\"headerlink\" title=\"发布自定义标签\"></a>发布自定义标签</h2><p>在functiontags.tld增加<code>uri</code>节点<br><code>&lt;uri&gt;http://example.com/taglib/function&lt;/uri&gt;</code></p>\n<p>在jsp页面添加<br><code>&lt;%@ taglib uri=&quot;http://example.com/taglib/function&quot; prefix=&quot;f&quot; %&gt;</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"JSP自定义标签\"><a href=\"#JSP自定义标签\" class=\"headerlink\" title=\"JSP自定义标签\"></a>JSP自定义标签</h1><p>自定义标签的实现，叫做标签处理器，而简单的标签处理器是指继承<strong>SimpleTag</strong> 实现的标签管理器。<br>简单标签管理器不在被jsp容器缓存。但这并不意味着简单标签处理器会比之前的慢。</p>\n<blockquote>\n<p>初始化性能指标显示，缓存标签处理器并不能提供较好的性能优化，但缓存这些标签让实现标签变得更加困难，而且让这些标签带来更多的潜在错误。                    </p>\n</blockquote>\n<p><strong>JSP规范的作者在JSP规范的7.15一节写到</strong></p>\n<p><strong>SimpleTag</strong>接口中用于标签触发的方法只有一个<strong>doTag</strong>，并且该方法只会执行一次。业务逻辑，遍历以及页面内容的操作都在这里实现。</p>\n<p><code>javax.servlet.jsp.targext</code>包中包含了一个SimpleTag的基础类<br><strong>SimpleTagSupport</strong>提供了SimpleTag的所有方法的实现，并便于扩展简单标签处理器。<br><strong>SimpleTagSupport</strong>类中用getJspContext方法返回JspContext实例，这个实例在JSP容器中用SimpleTag的setJspContext方法传入。</p>\n<hr>\n<h2 id=\"SimpleTag示例\"><a href=\"#SimpleTag示例\" class=\"headerlink\" title=\"SimpleTag示例\"></a>SimpleTag示例</h2><h3 id=\"编写标签处理器\"><a href=\"#编写标签处理器\" class=\"headerlink\" title=\"编写标签处理器\"></a>编写标签处理器</h3><h4 id=\"MyFirstTag类\"><a href=\"#MyFirstTag类\" class=\"headerlink\" title=\"MyFirstTag类\"></a>MyFirstTag类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.JspFragment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.JspTag;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTag;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyFirstTag</span> <span class=\"keyword\">implements</span> <span class=\"title\">SimpleTag</span></span>&#123;</span><br><span class=\"line\">\tJspContext jspContext;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> JspException, IOException </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;doTag&quot;</span>);</span><br><span class=\"line\">\t\tjspContext.getOut().print(<span class=\"string\">&quot;This is my first tag.&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> JspTag <span class=\"title\">getParent</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;getParent&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJspBody</span><span class=\"params\">(JspFragment body)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setJspBody&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setJspContext</span><span class=\"params\">(JspContext jspContext)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setJspContext&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.jspContext=jspContext;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setParent</span><span class=\"params\">(JspTag parent)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;setParent&quot;</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"注册标签\"><a href=\"#注册标签\" class=\"headerlink\" title=\"注册标签\"></a>注册标签</h3><h4 id=\"mytags-tld\"><a href=\"#mytags-tld\" class=\"headerlink\" title=\"mytags.tld\"></a>mytags.tld</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">taglib</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">version</span>=<span class=\"string\">&quot;2.1&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t\tSimple tag examples</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tlib-version</span>&gt;</span>1.0<span class=\"tag\">&lt;/<span class=\"name\">tlib-version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">short-name</span>&gt;</span>My First Taglib Example<span class=\"tag\">&lt;/<span class=\"name\">short-name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>firstTag<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.MyFirstTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>empty<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span>\t</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">taglib</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>name节点用于说明这个标签名称；tag-class则用于指出标签处理器的<strong>完整类名</strong>。<br>当然一个标签库中可以定义多个标签。</p>\n<h3 id=\"使用标签\"><a href=\"#使用标签\" class=\"headerlink\" title=\"使用标签\"></a>使用标签</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;firstTagTest&lt;/title&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">   Hello!</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   &lt;easy:firstTag&gt;&lt;/easy:firstTag&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/firstTagTest.jsp</code></p>\n<hr>\n<h2 id=\"处理属性\"><a href=\"#处理属性\" class=\"headerlink\" title=\"处理属性\"></a>处理属性</h2><p>实现SimpleTag接口或者扩展SimpleTagSupport的标签管理器都可以有属性。</p>\n<h3 id=\"DataFrmatterTag\"><a href=\"#DataFrmatterTag\" class=\"headerlink\" title=\"DataFrmatterTag\"></a>DataFrmatterTag</h3><p>继承SimpleTagSupport</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataFrmatterTag</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleTagSupport</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String header;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String items;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getHeader</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> header;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHeader</span><span class=\"params\">(String header)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.header = header;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getItems</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> items;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setItems</span><span class=\"params\">(String items)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.items = items;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException,JspException</span>&#123;</span><br><span class=\"line\">\t\tJspContext jspContext=getJspContext();</span><br><span class=\"line\">\t\tJspWriter out=jspContext.getOut();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;table style=&#x27;border:1px solid green&#x27;&gt;\\n&quot;</span></span><br><span class=\"line\">\t\t\t\t\t+<span class=\"string\">&quot;&lt;tr&gt;&lt;td&gt;&lt;span style=&#x27;font-weight:bold&#x27;&gt;&quot;</span></span><br><span class=\"line\">\t\t\t\t\t+header+<span class=\"string\">&quot;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\tStringTokenizer tokenizer=<span class=\"keyword\">new</span> StringTokenizer(items,<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(tokenizer.hasMoreTokens())&#123;</span><br><span class=\"line\">\t\t\tString token=tokenizer.nextToken();</span><br><span class=\"line\">\t\t\tout.print(<span class=\"string\">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>+token+<span class=\"string\">&quot;&lt;/td&gt;&lt;/tr&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;/table&gt;&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>doTag()</code> 首先通过<code>getJspContext()</code>获取通过JSP容器传入的 <code>JspContext</code>对象<br><code>JspContext jspContext=getJspContext();</code><br>接着，通过<code>JspContext</code>实例的<code>getOut()</code>获取<code>JspWriter</code>对象<br><code>JspWriter out=jspContext.getOut();</code><br>然后，<code>doTag()</code>方法使用<code>StringTokenizer</code>解析<code>items</code>属性值。</p>\n<p>###注册DataFrmatter标签</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dataFormatter<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.DataFrmatterTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>empty<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>header<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">required</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">required</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>items<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">required</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">required</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">attribute</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"dataFormatterTagTest-jsp\"><a href=\"#dataFormatterTagTest-jsp\" class=\"headerlink\" title=\"dataFormatterTagTest.jsp\"></a>dataFormatterTagTest.jsp</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;dataFormatterTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">\t&lt;title&gt;Testing DataFormatterTag&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;easy:dataFormatter items=<span class=\"string\">&quot;Alabama,Alaska,Georgia,Florida&quot;</span> header=<span class=\"string\">&quot;states&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;br&gt;</span><br><span class=\"line\">    &lt;easy:dataFormatter header=<span class=\"string\">&quot;Countries&quot;</span>&gt;</span><br><span class=\"line\">    \t&lt;jsp:attribute name=<span class=\"string\">&quot;items&quot;</span>&gt;</span><br><span class=\"line\">    \tUS,UK,Canada,Korea</span><br><span class=\"line\">    \t&lt;/jsp:attribute&gt;</span><br><span class=\"line\">    &lt;/easy:dataFormatter&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"访问标签内容\"><a href=\"#访问标签内容\" class=\"headerlink\" title=\"访问标签内容\"></a>访问标签内容</h2><h3 id=\"SelectElementTag类\"><a href=\"#SelectElementTag类\" class=\"headerlink\" title=\"SelectElementTag类\"></a>SelectElementTag类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.JspWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.SimpleTagSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SelectElementTag</span> <span class=\"keyword\">extends</span> <span class=\"title\">SimpleTagSupport</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String[] countries =&#123;<span class=\"string\">&quot;China&quot;</span>,<span class=\"string\">&quot;Brazil&quot;</span>,<span class=\"string\">&quot;American&quot;</span>,<span class=\"string\">&quot;Japan&quot;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException,JspException</span>&#123;</span><br><span class=\"line\">\t\tJspContext jspContext=getJspContext();</span><br><span class=\"line\">\t\tJspWriter out=jspContext.getOut();</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;select&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;countries.length;i++)&#123;</span><br><span class=\"line\">\t\t\tgetJspContext().setAttribute(<span class=\"string\">&quot;value&quot;</span>, countries[i]);</span><br><span class=\"line\">\t\t\tgetJspContext().setAttribute(<span class=\"string\">&quot;text&quot;</span>, countries[i]);</span><br><span class=\"line\">\t\t\tgetJspBody().invoke(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tout.print(<span class=\"string\">&quot;&lt;/select&gt;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注册selectElementTag\"><a href=\"#注册selectElementTag\" class=\"headerlink\" title=\"注册selectElementTag\"></a>注册selectElementTag</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">tag</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>select<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tag-class</span>&gt;</span>com.sean.SelectElementTag<span class=\"tag\">&lt;/<span class=\"name\">tag-class</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body-content</span>&gt;</span>scriptless<span class=\"tag\">&lt;/<span class=\"name\">body-content</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"selectElementTagTest-jsp\"><a href=\"#selectElementTagTest-jsp\" class=\"headerlink\" title=\"selectElementTagTest.jsp\"></a>selectElementTagTest.jsp</h3><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;/WEB-INF/mytags.tld&quot;</span> prefix=<span class=\"string\">&quot;easy&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;selectElementTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;easy:select&gt;</span><br><span class=\"line\">    \t&lt;option value=&quot;$&#123;value&#125;&quot;&gt;$&#123;text&#125;&lt;/option&gt;</span><br><span class=\"line\">    &lt;/easy:select&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我的项目名 <code>customtag</code><br>启动服务器，输入即可。<br><code>http://localhost:8080/customtag/selectElementTagTest.jsp</code></p>\n<h2 id=\"编写EL函数\"><a href=\"#编写EL函数\" class=\"headerlink\" title=\"编写EL函数\"></a>编写EL函数</h2><p>编写EL函数步骤<br>1.创建一个包含<strong>静态方法</strong>的public类。每个类的静态方法表示一个EL函数。<strong>这个类可以不需要实现任何借口或者继承特定的类。可以像发布其他任何类一样发布这个类</strong><br>2.用function节点在标签库描述器注册函数</p>\n<table>\n<thead>\n<tr>\n<th>节点</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>description</td>\n<td>可选，标签说明</td>\n</tr>\n<tr>\n<td>display-name</td>\n<td>在xml工具中显示缩写名字</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>可选，在xml工具中使用icon节点</td>\n</tr>\n<tr>\n<td>name</td>\n<td>函数的唯一名字</td>\n</tr>\n<tr>\n<td>function-class</td>\n<td>该函数对应实现的java类的全名</td>\n</tr>\n<tr>\n<td>function-signature</td>\n<td>该函数对应实现的java静态方法</td>\n</tr>\n<tr>\n<td>example</td>\n<td>可选，使用该函数的实例说明</td>\n</tr>\n<tr>\n<td>function-extension</td>\n<td>可以是一个或者多个节点 ，在xml工具中使用，用于提供该函数更多细节</td>\n</tr>\n</tbody></table>\n<p>使用该函数，须将<code>taglib</code>指令中的<code>uri</code>属性指向标签库描述，并指明使用的前缀。然后在JSP页面使用如下语法：<br><code>$&#123;prefix:functionName(parameterList)&#125;</code></p>\n<h3 id=\"MyFunction\"><a href=\"#MyFunction\" class=\"headerlink\" title=\"MyFunction\"></a>MyFunction</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.function;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyFunction</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">reverseString</span><span class=\"params\">(String s)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//字符串的反转</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> StringBuffer(s).reverse().toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"functiontags-tld\"><a href=\"#functiontags-tld\" class=\"headerlink\" title=\"functiontags.tld\"></a>functiontags.tld</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">taglib</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_1.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">\t\t<span class=\"attr\">version</span>=<span class=\"string\">&quot;2.1&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Function tag example<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>\t\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">tlib-version</span>&gt;</span>1.0<span class=\"tag\">&lt;/<span class=\"name\">tlib-version</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">uri</span>&gt;</span>http://example.com/taglib/function<span class=\"tag\">&lt;/<span class=\"name\">uri</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">function</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Reverse a String<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>reverseString<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">function-class</span>&gt;</span>com.sean.function.MyFunction<span class=\"tag\">&lt;/<span class=\"name\">function-class</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">function-signature</span>&gt;</span>java.lang.String reverseString(java.lang.String)<span class=\"tag\">&lt;/<span class=\"name\">function-signature</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">function</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用El\"><a href=\"#使用El\" class=\"headerlink\" title=\"使用El\"></a>使用El</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">&quot;java&quot;</span> <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*&quot;</span> pageEncoding=<span class=\"string\">&quot;UTF-8&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=<span class=\"string\">&quot;http://example.com/taglib/function&quot;</span> prefix=<span class=\"string\">&quot;f&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">&quot;://&quot;</span>+request.getServerName()+<span class=\"string\">&quot;:&quot;</span>+request.getServerPort()+path+<span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">&quot;&lt;%=basePath%&gt;&quot;</span>&gt;    </span><br><span class=\"line\">    &lt;title&gt;My JSP &#x27;functionTagTest.jsp&#x27; starting page&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">   $&#123;f:reverseString(<span class=\"string\">&quot;Hello, World&quot;</span>) &#125;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   $&#123;f:reverseString(<span class=\"string\">&quot;Welcome&quot;</span>)&#125;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布自定义标签\"><a href=\"#发布自定义标签\" class=\"headerlink\" title=\"发布自定义标签\"></a>发布自定义标签</h2><p>在functiontags.tld增加<code>uri</code>节点<br><code>&lt;uri&gt;http://example.com/taglib/function&lt;/uri&gt;</code></p>\n<p>在jsp页面添加<br><code>&lt;%@ taglib uri=&quot;http://example.com/taglib/function&quot; prefix=&quot;f&quot; %&gt;</code></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>自定义标签解决JavaBean中前端展现与后端逻辑分离的好办法。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Feb 17 2018 04:43:51 GMT+0800 (China Standard Time)","title":"JSP自定义标签","path":"2018/02/17/JSP自定义标签/","eyeCatchImage":null,"excerpt":"本文简要叙述了JSP自定义标签的实现。","date":{"_isAMomentObject":true,"_i":"2018-02-16T20:43:51.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-16T20:43:51.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Java > JSP","tags":["tags"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":10182},{"title":"linux简单介绍","comments":1,"date":"2018-03-18T21:40:50.000Z","description":"本文对Linux操作系统进行了简单介绍。简要的讲述了Ubuntu的安装，以及一些常用的linux命令的使用，简述了如何在linux上安装软件，简单使用了vim编辑器。","_content":"\n# linux\nLinux是一套免费使用和自由传播的[类Unix](https://baike.baidu.com/item/%E7%B1%BBUnix)[操作系统](https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192)，是一个基于[POSIX](https://baike.baidu.com/item/POSIX)和[UNIX](https://baike.baidu.com/item/UNIX)的多用户、[多任务](https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1)、支持[多线程](https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B)和多[CPU](https://baike.baidu.com/item/CPU)的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持[32位](https://baike.baidu.com/item/32%E4%BD%8D/5812218)和[64位](https://baike.baidu.com/item/64%E4%BD%8D)硬件。Linux继承了[Unix](https://baike.baidu.com/item/Unix)以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。\n\n\nLinux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了[Linux内核](https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8)。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。\n\n---\n\n## linux简介\n\nlinux的核心是由 **Linus Torvads** 在1991年的时候开发出来的。\n\n讲linux的必须先讲它的大哥**Unix**\n\n**Unix**是以高阶的C语言在贝尔实验室(AT&T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。后来由于AT&T由于商业的考虑，于是将Unix的版权回收。特别提到 **不可对学生提供源代码**。版权的收回，影响到学校教Unix源代码的教授！Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。\n\n1984年的GNU计划。（Richard Mathew Stallman 史托曼）\n软件分享\nGCC(GNU C Complier )\n\n后来就是Linus Torvads  在Minix的基础上编写了linux。于1991年发布。\n\n大概就讲这么多吧！\n\n---\n\n## linux 发行版本\n\n自己看图吧！\n\n![linux 发行版本](Linux_Introduction/Linux_Distribution.jpg)\n\n\n如果看的不清楚可以去这个网站 [linux发行图](http://futurist.se/gldt/) \n\n[linux发行图](http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg)\n\n是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。\n\n友情链接\n\n[Redhat](https://www.redhat.com)   [Centos](https://www.centos.org/)      [Debian](https://www.debian.org/)   [ubuntu](https://www.ubuntu.com)  [SUSE](https://download.suse.com)   [openSUE](https://www.opensuse.org/) \n\n自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！\n\n---\n\n## linux安装\n\n我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。\n\n### 首先去官网下载ubuntu镜像\n\n[Ubuntu下载地址](https://www.ubuntu.com/download/desktop)\n\n[Ubuntu安装教程](https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0)\n\n### 提醒要点\n\n1.要使用刻录盘刻录镜像。刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.记得自己分一个干净的盘来安装linux系统。\n2.安装要注意分区表格式。\n3.系统只能安装在主分区不能安装在逻辑分区。\n\n---\n\n## linux简单的使用\n\nlinux不同版本的linux命令有一些不同的地方，但是大部分是相同的。\n\n下面是Ubuntu系统使用的命令。\n\n希望你们在学习linux时**多敲命令**！如同windows上的**cmd**\n\n### 常见命令使用\n\n打开终端\n\n鼠标右击 -> 选择 `Open Terminal`\n\n如下图\n\n![Terminal](Linux_Introduction/terminal.png)\n\n\n首先讲一个特别有用的命令 **man**这个命令是挺厉害的！比如想知道 `ls`命令怎么用？可以使用\n\n``` bash\nman ls\n```\n![man ls](Linux_Introduction/man_ls.gif)\n\n最后回车键 `Enter`键 执行命令\n\n按回车或移动鼠标，可以看`ls`的帮助文档。\n\n不需要阅读帮助文档，看上面截屏的提示。按 `q` 建退出帮助文档\n\n\n当然还有一种查看帮助文档的命令: `command --help`\n\n``` bash\nls --help\n```\n![ls help](Linux_Introduction/ls_help.gif)\n\n**记住命令之间一定要有空格！大小写也很重要！**\n\n关机命令\n\n``` bash\npoweroff\n```\n重启命令\n\n``` bash\nreboot\n```\n\n切换目录的命令 `cd` 显示当前目录下文件命令 `ls` \n\n``` bash\ncd /home/sean/\nls\n```\n\n![cd ls](Linux_Introduction/cd_ls.gif)\n\n\n如果输入 `ls -al` 就会显示更多信息\n\n![ls -la](Linux_Introduction/ls_al.gif)\n\n \n`top`命令就如同windows上的资源管理器\n\n``` bash\ntop\n```\n\n![top](Linux_Introduction/top.gif)\n\n`ctr + z`停止这个命令\n\n### 安装软件\n\n各个linux发行版本的安装软件的方法不一样。ubuntu有一个应用商店.\n\n看图\n![software Store](Linux_Introduction/softwareStore.png)\n\n还有其他安装软件的方法，就是使用命令行。\n\n`sudo apt install softname`\n\n例如安装 `vim ` 文本编辑软件。挺好用的。\n\nUbuntu不自带`vim`,需要额外安装。Centos自带vim\n\n``` bash\nsudo apt install vim\n```\n\n![sudo apt install](Linux_Introduction/apt_install_vim.gif)\n\n会叫你输入密码：\n\n你输入时不会显示 `*******`,输入完成回车，OK！\n\n我的是已经安装了。你们安装时一路回车就安装了。\n\n\n**vim简单使用**\n\n``` bash\nvim vim.txt\n```\n\n按 `a`,就可以写文本了。\n输入 `:w` 保存\n输入 `:q` 退出\n\n![vim](Linux_Introduction/vim_txt.gif)\n\nvim 官方教程，可以在终端输入`vimtutor` 或者 在终端输入`vim`,然后输入`:h vimtutor`。\n\n![vimtutor](Linux_Introduction/vimtutor.gif)\n\nvim 其他学习网站 [viemu](http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html)\n\n![vim grahical cheat sheet](Linux_Introduction/vi-vim-cheat-sheet.gif)\n\nUbuntu 是用`apt` 或 `apt-get` 命令安装软件，而Centos使用`yum`安装软件。\n\n**源代码安装**\n还有一种安装软件的方法就是源代码编译安装。使用 `make`命令。这里我就不多说了。应为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Linux_Introduction.md","raw":"---\ntitle: linux简单介绍\ncomments: true\ndate: 2018/03/18 21:40:50\ndescription: 本文对Linux操作系统进行了简单介绍。简要的讲述了Ubuntu的安装，以及一些常用的linux命令的使用，简述了如何在linux上安装软件，简单使用了vim编辑器。\ntags:\n\t- linux\ncategories:\n\t- linux\n---\n\n# linux\nLinux是一套免费使用和自由传播的[类Unix](https://baike.baidu.com/item/%E7%B1%BBUnix)[操作系统](https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192)，是一个基于[POSIX](https://baike.baidu.com/item/POSIX)和[UNIX](https://baike.baidu.com/item/UNIX)的多用户、[多任务](https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1)、支持[多线程](https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B)和多[CPU](https://baike.baidu.com/item/CPU)的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持[32位](https://baike.baidu.com/item/32%E4%BD%8D/5812218)和[64位](https://baike.baidu.com/item/64%E4%BD%8D)硬件。Linux继承了[Unix](https://baike.baidu.com/item/Unix)以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。\n\n\nLinux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了[Linux内核](https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8)。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。\n\n---\n\n## linux简介\n\nlinux的核心是由 **Linus Torvads** 在1991年的时候开发出来的。\n\n讲linux的必须先讲它的大哥**Unix**\n\n**Unix**是以高阶的C语言在贝尔实验室(AT&T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。后来由于AT&T由于商业的考虑，于是将Unix的版权回收。特别提到 **不可对学生提供源代码**。版权的收回，影响到学校教Unix源代码的教授！Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。\n\n1984年的GNU计划。（Richard Mathew Stallman 史托曼）\n软件分享\nGCC(GNU C Complier )\n\n后来就是Linus Torvads  在Minix的基础上编写了linux。于1991年发布。\n\n大概就讲这么多吧！\n\n---\n\n## linux 发行版本\n\n自己看图吧！\n\n![linux 发行版本](Linux_Introduction/Linux_Distribution.jpg)\n\n\n如果看的不清楚可以去这个网站 [linux发行图](http://futurist.se/gldt/) \n\n[linux发行图](http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg)\n\n是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。\n\n友情链接\n\n[Redhat](https://www.redhat.com)   [Centos](https://www.centos.org/)      [Debian](https://www.debian.org/)   [ubuntu](https://www.ubuntu.com)  [SUSE](https://download.suse.com)   [openSUE](https://www.opensuse.org/) \n\n自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！\n\n---\n\n## linux安装\n\n我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。\n\n### 首先去官网下载ubuntu镜像\n\n[Ubuntu下载地址](https://www.ubuntu.com/download/desktop)\n\n[Ubuntu安装教程](https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0)\n\n### 提醒要点\n\n1.要使用刻录盘刻录镜像。刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.记得自己分一个干净的盘来安装linux系统。\n2.安装要注意分区表格式。\n3.系统只能安装在主分区不能安装在逻辑分区。\n\n---\n\n## linux简单的使用\n\nlinux不同版本的linux命令有一些不同的地方，但是大部分是相同的。\n\n下面是Ubuntu系统使用的命令。\n\n希望你们在学习linux时**多敲命令**！如同windows上的**cmd**\n\n### 常见命令使用\n\n打开终端\n\n鼠标右击 -> 选择 `Open Terminal`\n\n如下图\n\n![Terminal](Linux_Introduction/terminal.png)\n\n\n首先讲一个特别有用的命令 **man**这个命令是挺厉害的！比如想知道 `ls`命令怎么用？可以使用\n\n``` bash\nman ls\n```\n![man ls](Linux_Introduction/man_ls.gif)\n\n最后回车键 `Enter`键 执行命令\n\n按回车或移动鼠标，可以看`ls`的帮助文档。\n\n不需要阅读帮助文档，看上面截屏的提示。按 `q` 建退出帮助文档\n\n\n当然还有一种查看帮助文档的命令: `command --help`\n\n``` bash\nls --help\n```\n![ls help](Linux_Introduction/ls_help.gif)\n\n**记住命令之间一定要有空格！大小写也很重要！**\n\n关机命令\n\n``` bash\npoweroff\n```\n重启命令\n\n``` bash\nreboot\n```\n\n切换目录的命令 `cd` 显示当前目录下文件命令 `ls` \n\n``` bash\ncd /home/sean/\nls\n```\n\n![cd ls](Linux_Introduction/cd_ls.gif)\n\n\n如果输入 `ls -al` 就会显示更多信息\n\n![ls -la](Linux_Introduction/ls_al.gif)\n\n \n`top`命令就如同windows上的资源管理器\n\n``` bash\ntop\n```\n\n![top](Linux_Introduction/top.gif)\n\n`ctr + z`停止这个命令\n\n### 安装软件\n\n各个linux发行版本的安装软件的方法不一样。ubuntu有一个应用商店.\n\n看图\n![software Store](Linux_Introduction/softwareStore.png)\n\n还有其他安装软件的方法，就是使用命令行。\n\n`sudo apt install softname`\n\n例如安装 `vim ` 文本编辑软件。挺好用的。\n\nUbuntu不自带`vim`,需要额外安装。Centos自带vim\n\n``` bash\nsudo apt install vim\n```\n\n![sudo apt install](Linux_Introduction/apt_install_vim.gif)\n\n会叫你输入密码：\n\n你输入时不会显示 `*******`,输入完成回车，OK！\n\n我的是已经安装了。你们安装时一路回车就安装了。\n\n\n**vim简单使用**\n\n``` bash\nvim vim.txt\n```\n\n按 `a`,就可以写文本了。\n输入 `:w` 保存\n输入 `:q` 退出\n\n![vim](Linux_Introduction/vim_txt.gif)\n\nvim 官方教程，可以在终端输入`vimtutor` 或者 在终端输入`vim`,然后输入`:h vimtutor`。\n\n![vimtutor](Linux_Introduction/vimtutor.gif)\n\nvim 其他学习网站 [viemu](http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html)\n\n![vim grahical cheat sheet](Linux_Introduction/vi-vim-cheat-sheet.gif)\n\nUbuntu 是用`apt` 或 `apt-get` 命令安装软件，而Centos使用`yum`安装软件。\n\n**源代码安装**\n还有一种安装软件的方法就是源代码编译安装。使用 `make`命令。这里我就不多说了。应为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Linux_Introduction","published":1,"updated":"2018-03-18T21:40:50.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4d000jytcvh98m0czl","content":"<h1 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h1><p>Linux是一套免费使用和自由传播的<a href=\"https://baike.baidu.com/item/%E7%B1%BBUnix\">类Unix</a><a href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192\">操作系统</a>，是一个基于<a href=\"https://baike.baidu.com/item/POSIX\">POSIX</a>和<a href=\"https://baike.baidu.com/item/UNIX\">UNIX</a>的多用户、<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1\">多任务</a>、支持<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B\">多线程</a>和多<a href=\"https://baike.baidu.com/item/CPU\">CPU</a>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持<a href=\"https://baike.baidu.com/item/32%E4%BD%8D/5812218\">32位</a>和<a href=\"https://baike.baidu.com/item/64%E4%BD%8D\">64位</a>硬件。Linux继承了<a href=\"https://baike.baidu.com/item/Unix\">Unix</a>以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了<a href=\"https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8\">Linux内核</a>。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p>\n<hr>\n<h2 id=\"linux简介\"><a href=\"#linux简介\" class=\"headerlink\" title=\"linux简介\"></a>linux简介</h2><p>linux的核心是由 <strong>Linus Torvads</strong> 在1991年的时候开发出来的。</p>\n<p>讲linux的必须先讲它的大哥<strong>Unix</strong></p>\n<p><strong>Unix</strong>是以高阶的C语言在贝尔实验室(AT&amp;T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。后来由于AT&amp;T由于商业的考虑，于是将Unix的版权回收。特别提到 <strong>不可对学生提供源代码</strong>。版权的收回，影响到学校教Unix源代码的教授！Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。</p>\n<p>1984年的GNU计划。（Richard Mathew Stallman 史托曼）<br>软件分享<br>GCC(GNU C Complier )</p>\n<p>后来就是Linus Torvads  在Minix的基础上编写了linux。于1991年发布。</p>\n<p>大概就讲这么多吧！</p>\n<hr>\n<h2 id=\"linux-发行版本\"><a href=\"#linux-发行版本\" class=\"headerlink\" title=\"linux 发行版本\"></a>linux 发行版本</h2><p>自己看图吧！</p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/Linux_Distribution.jpg\" alt=\"linux 发行版本\"></p>\n<p>如果看的不清楚可以去这个网站 <a href=\"http://futurist.se/gldt/\">linux发行图</a> </p>\n<p><a href=\"http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg\">linux发行图</a></p>\n<p>是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。</p>\n<p>友情链接</p>\n<p><a href=\"https://www.redhat.com/\">Redhat</a>   <a href=\"https://www.centos.org/\">Centos</a>      <a href=\"https://www.debian.org/\">Debian</a>   <a href=\"https://www.ubuntu.com/\">ubuntu</a>  <a href=\"https://download.suse.com/\">SUSE</a>   <a href=\"https://www.opensuse.org/\">openSUE</a> </p>\n<p>自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！</p>\n<hr>\n<h2 id=\"linux安装\"><a href=\"#linux安装\" class=\"headerlink\" title=\"linux安装\"></a>linux安装</h2><p>我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。</p>\n<h3 id=\"首先去官网下载ubuntu镜像\"><a href=\"#首先去官网下载ubuntu镜像\" class=\"headerlink\" title=\"首先去官网下载ubuntu镜像\"></a>首先去官网下载ubuntu镜像</h3><p><a href=\"https://www.ubuntu.com/download/desktop\">Ubuntu下载地址</a></p>\n<p><a href=\"https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0\">Ubuntu安装教程</a></p>\n<h3 id=\"提醒要点\"><a href=\"#提醒要点\" class=\"headerlink\" title=\"提醒要点\"></a>提醒要点</h3><p>1.要使用刻录盘刻录镜像。刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.记得自己分一个干净的盘来安装linux系统。<br>2.安装要注意分区表格式。<br>3.系统只能安装在主分区不能安装在逻辑分区。</p>\n<hr>\n<h2 id=\"linux简单的使用\"><a href=\"#linux简单的使用\" class=\"headerlink\" title=\"linux简单的使用\"></a>linux简单的使用</h2><p>linux不同版本的linux命令有一些不同的地方，但是大部分是相同的。</p>\n<p>下面是Ubuntu系统使用的命令。</p>\n<p>希望你们在学习linux时<strong>多敲命令</strong>！如同windows上的<strong>cmd</strong></p>\n<h3 id=\"常见命令使用\"><a href=\"#常见命令使用\" class=\"headerlink\" title=\"常见命令使用\"></a>常见命令使用</h3><p>打开终端</p>\n<p>鼠标右击 -&gt; 选择 <code>Open Terminal</code></p>\n<p>如下图</p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/terminal.png\" alt=\"Terminal\"></p>\n<p>首先讲一个特别有用的命令 <strong>man</strong>这个命令是挺厉害的！比如想知道 <code>ls</code>命令怎么用？可以使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">man ls</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/man_ls.gif\" alt=\"man ls\"></p>\n<p>最后回车键 <code>Enter</code>键 执行命令</p>\n<p>按回车或移动鼠标，可以看<code>ls</code>的帮助文档。</p>\n<p>不需要阅读帮助文档，看上面截屏的提示。按 <code>q</code> 建退出帮助文档</p>\n<p>当然还有一种查看帮助文档的命令: <code>command --help</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/ls_help.gif\" alt=\"ls help\"></p>\n<p><strong>记住命令之间一定要有空格！大小写也很重要！</strong></p>\n<p>关机命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poweroff</span><br></pre></td></tr></table></figure>\n<p>重启命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p>切换目录的命令 <code>cd</code> 显示当前目录下文件命令 <code>ls</code> </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /home/sean/</span><br><span class=\"line\">ls</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/cd_ls.gif\" alt=\"cd ls\"></p>\n<p>如果输入 <code>ls -al</code> 就会显示更多信息</p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/ls_al.gif\" alt=\"ls -la\"></p>\n<p><code>top</code>命令就如同windows上的资源管理器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/top.gif\" alt=\"top\"></p>\n<p><code>ctr + z</code>停止这个命令</p>\n<h3 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h3><p>各个linux发行版本的安装软件的方法不一样。ubuntu有一个应用商店.</p>\n<p>看图<br><img data-src=\"/2018/03/19/Linux_Introduction/softwareStore.png\" alt=\"software Store\"></p>\n<p>还有其他安装软件的方法，就是使用命令行。</p>\n<p><code>sudo apt install softname</code></p>\n<p>例如安装 <code>vim </code> 文本编辑软件。挺好用的。</p>\n<p>Ubuntu不自带<code>vim</code>,需要额外安装。Centos自带vim</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install vim</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/apt_install_vim.gif\" alt=\"sudo apt install\"></p>\n<p>会叫你输入密码：</p>\n<p>你输入时不会显示 <code>*******</code>,输入完成回车，OK！</p>\n<p>我的是已经安装了。你们安装时一路回车就安装了。</p>\n<p><strong>vim简单使用</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim vim.txt</span><br></pre></td></tr></table></figure>\n<p>按 <code>a</code>,就可以写文本了。<br>输入 <code>:w</code> 保存<br>输入 <code>:q</code> 退出</p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/vim_txt.gif\" alt=\"vim\"></p>\n<p>vim 官方教程，可以在终端输入<code>vimtutor</code> 或者 在终端输入<code>vim</code>,然后输入<code>:h vimtutor</code>。</p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/vimtutor.gif\" alt=\"vimtutor\"></p>\n<p>vim 其他学习网站 <a href=\"http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html\">viemu</a></p>\n<p><img data-src=\"/2018/03/19/Linux_Introduction/vi-vim-cheat-sheet.gif\" alt=\"vim grahical cheat sheet\"></p>\n<p>Ubuntu 是用<code>apt</code> 或 <code>apt-get</code> 命令安装软件，而Centos使用<code>yum</code>安装软件。</p>\n<p><strong>源代码安装</strong><br>还有一种安装软件的方法就是源代码编译安装。使用 <code>make</code>命令。这里我就不多说了。应为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h1><p>Linux是一套免费使用和自由传播的<a href=\"https://baike.baidu.com/item/%E7%B1%BBUnix\">类Unix</a><a href=\"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192\">操作系统</a>，是一个基于<a href=\"https://baike.baidu.com/item/POSIX\">POSIX</a>和<a href=\"https://baike.baidu.com/item/UNIX\">UNIX</a>的多用户、<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E4%BB%BB%E5%8A%A1\">多任务</a>、支持<a href=\"https://baike.baidu.com/item/%E5%A4%9A%E7%BA%BF%E7%A8%8B\">多线程</a>和多<a href=\"https://baike.baidu.com/item/CPU\">CPU</a>的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持<a href=\"https://baike.baidu.com/item/32%E4%BD%8D/5812218\">32位</a>和<a href=\"https://baike.baidu.com/item/64%E4%BD%8D\">64位</a>硬件。Linux继承了<a href=\"https://baike.baidu.com/item/Unix\">Unix</a>以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<p>Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了<a href=\"https://baike.baidu.com/item/Linux%E5%86%85%E6%A0%B8\">Linux内核</a>。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p>\n<hr>\n<h2 id=\"linux简介\"><a href=\"#linux简介\" class=\"headerlink\" title=\"linux简介\"></a>linux简介</h2><p>linux的核心是由 <strong>Linus Torvads</strong> 在1991年的时候开发出来的。</p>\n<p>讲linux的必须先讲它的大哥<strong>Unix</strong></p>\n<p><strong>Unix</strong>是以高阶的C语言在贝尔实验室(AT&amp;T)写成的。总之Unix是一个很6的系统,可以查阅Unix的源代码。刚开发时，大家都可以免费使用。后来由于AT&amp;T由于商业的考虑，于是将Unix的版权回收。特别提到 <strong>不可对学生提供源代码</strong>。版权的收回，影响到学校教Unix源代码的教授！Andrew Tanenbaum(谭宁邦)教授自己动手写了Minix这个Unix Like的核心代码！在编写源代码过程中，为了避免版权纷争，教授完全不看Unix核心源代码！并且强调Minix要完全和Unix兼容才行！1984开始写代码，到1986年结束。</p>\n<p>1984年的GNU计划。（Richard Mathew Stallman 史托曼）<br>软件分享<br>GCC(GNU C Complier )</p>\n<p>后来就是Linus Torvads  在Minix的基础上编写了linux。于1991年发布。</p>\n<p>大概就讲这么多吧！</p>\n<hr>\n<h2 id=\"linux-发行版本\"><a href=\"#linux-发行版本\" class=\"headerlink\" title=\"linux 发行版本\"></a>linux 发行版本</h2><p>自己看图吧！</p>\n<p><img src=\"/2018/03/19/Linux_Introduction/Linux_Distribution.jpg\" alt=\"linux 发行版本\"></p>\n<p>如果看的不清楚可以去这个网站 <a href=\"http://futurist.se/gldt/\">linux发行图</a> </p>\n<p><a href=\"http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg\">linux发行图</a></p>\n<p>是不是太多了！看的都眼花了！自己选择一款喜欢的发行版本。</p>\n<p>友情链接</p>\n<p><a href=\"https://www.redhat.com/\">Redhat</a>   <a href=\"https://www.centos.org/\">Centos</a>      <a href=\"https://www.debian.org/\">Debian</a>   <a href=\"https://www.ubuntu.com/\">ubuntu</a>  <a href=\"https://download.suse.com/\">SUSE</a>   <a href=\"https://www.opensuse.org/\">openSUE</a> </p>\n<p>自己可以玩玩！当然还有很多其他版本！也有一些酷炫的版本！</p>\n<hr>\n<h2 id=\"linux安装\"><a href=\"#linux安装\" class=\"headerlink\" title=\"linux安装\"></a>linux安装</h2><p>我们安装Ubuntu版的linux系统。安装桌面版的。易于个人使用。</p>\n<h3 id=\"首先去官网下载ubuntu镜像\"><a href=\"#首先去官网下载ubuntu镜像\" class=\"headerlink\" title=\"首先去官网下载ubuntu镜像\"></a>首先去官网下载ubuntu镜像</h3><p><a href=\"https://www.ubuntu.com/download/desktop\">Ubuntu下载地址</a></p>\n<p><a href=\"https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-desktop?_ga=2.9209781.1862713034.1521263401-1655017864.1521263401#0\">Ubuntu安装教程</a></p>\n<h3 id=\"提醒要点\"><a href=\"#提醒要点\" class=\"headerlink\" title=\"提醒要点\"></a>提醒要点</h3><p>1.要使用刻录盘刻录镜像。刻录完镜像，就可以像安装win10系统一样安装，当然需要修改bios.记得自己分一个干净的盘来安装linux系统。<br>2.安装要注意分区表格式。<br>3.系统只能安装在主分区不能安装在逻辑分区。</p>\n<hr>\n<h2 id=\"linux简单的使用\"><a href=\"#linux简单的使用\" class=\"headerlink\" title=\"linux简单的使用\"></a>linux简单的使用</h2><p>linux不同版本的linux命令有一些不同的地方，但是大部分是相同的。</p>\n<p>下面是Ubuntu系统使用的命令。</p>\n<p>希望你们在学习linux时<strong>多敲命令</strong>！如同windows上的<strong>cmd</strong></p>\n<h3 id=\"常见命令使用\"><a href=\"#常见命令使用\" class=\"headerlink\" title=\"常见命令使用\"></a>常见命令使用</h3><p>打开终端</p>\n<p>鼠标右击 -&gt; 选择 <code>Open Terminal</code></p>\n<p>如下图</p>\n<p><img src=\"/2018/03/19/Linux_Introduction/terminal.png\" alt=\"Terminal\"></p>\n<p>首先讲一个特别有用的命令 <strong>man</strong>这个命令是挺厉害的！比如想知道 <code>ls</code>命令怎么用？可以使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">man ls</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/03/19/Linux_Introduction/man_ls.gif\" alt=\"man ls\"></p>\n<p>最后回车键 <code>Enter</code>键 执行命令</p>\n<p>按回车或移动鼠标，可以看<code>ls</code>的帮助文档。</p>\n<p>不需要阅读帮助文档，看上面截屏的提示。按 <code>q</code> 建退出帮助文档</p>\n<p>当然还有一种查看帮助文档的命令: <code>command --help</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/03/19/Linux_Introduction/ls_help.gif\" alt=\"ls help\"></p>\n<p><strong>记住命令之间一定要有空格！大小写也很重要！</strong></p>\n<p>关机命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poweroff</span><br></pre></td></tr></table></figure>\n<p>重启命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p>切换目录的命令 <code>cd</code> 显示当前目录下文件命令 <code>ls</code> </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /home/sean/</span><br><span class=\"line\">ls</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/03/19/Linux_Introduction/cd_ls.gif\" alt=\"cd ls\"></p>\n<p>如果输入 <code>ls -al</code> 就会显示更多信息</p>\n<p><img src=\"/2018/03/19/Linux_Introduction/ls_al.gif\" alt=\"ls -la\"></p>\n<p><code>top</code>命令就如同windows上的资源管理器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/03/19/Linux_Introduction/top.gif\" alt=\"top\"></p>\n<p><code>ctr + z</code>停止这个命令</p>\n<h3 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h3><p>各个linux发行版本的安装软件的方法不一样。ubuntu有一个应用商店.</p>\n<p>看图<br><img src=\"/2018/03/19/Linux_Introduction/softwareStore.png\" alt=\"software Store\"></p>\n<p>还有其他安装软件的方法，就是使用命令行。</p>\n<p><code>sudo apt install softname</code></p>\n<p>例如安装 <code>vim </code> 文本编辑软件。挺好用的。</p>\n<p>Ubuntu不自带<code>vim</code>,需要额外安装。Centos自带vim</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install vim</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2018/03/19/Linux_Introduction/apt_install_vim.gif\" alt=\"sudo apt install\"></p>\n<p>会叫你输入密码：</p>\n<p>你输入时不会显示 <code>*******</code>,输入完成回车，OK！</p>\n<p>我的是已经安装了。你们安装时一路回车就安装了。</p>\n<p><strong>vim简单使用</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim vim.txt</span><br></pre></td></tr></table></figure>\n<p>按 <code>a</code>,就可以写文本了。<br>输入 <code>:w</code> 保存<br>输入 <code>:q</code> 退出</p>\n<p><img src=\"/2018/03/19/Linux_Introduction/vim_txt.gif\" alt=\"vim\"></p>\n<p>vim 官方教程，可以在终端输入<code>vimtutor</code> 或者 在终端输入<code>vim</code>,然后输入<code>:h vimtutor</code>。</p>\n<p><img src=\"/2018/03/19/Linux_Introduction/vimtutor.gif\" alt=\"vimtutor\"></p>\n<p>vim 其他学习网站 <a href=\"http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html\">viemu</a></p>\n<p><img src=\"/2018/03/19/Linux_Introduction/vi-vim-cheat-sheet.gif\" alt=\"vim grahical cheat sheet\"></p>\n<p>Ubuntu 是用<code>apt</code> 或 <code>apt-get</code> 命令安装软件，而Centos使用<code>yum</code>安装软件。</p>\n<p><strong>源代码安装</strong><br>还有一种安装软件的方法就是源代码编译安装。使用 <code>make</code>命令。这里我就不多说了。应为这涉及库的问题。该方法能安装新版的软件，但是也是最难使用的，不是因为命令复杂，而是因为不容易安装所需要的库！</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/03/19/Linux_Introduction/Linux_Distribution.jpg","popularPost_tmp_gaData":{"updated":"Mon Mar 19 2018 05:40:50 GMT+0800 (China Standard Time)","title":"linux简单介绍","path":"2018/03/19/Linux_Introduction/","eyeCatchImage":"/2018/03/19/Linux_Introduction/Linux_Distribution.jpg","excerpt":"本文对Linux操作系统进行了简单介绍。简要的讲述了Ubuntu的安装，以及一些常用的linux命令的使用，简述了如何在linux上安装软件，简单使用了vim编辑器。","date":{"_isAMomentObject":true,"_i":"2018-03-18T21:40:50.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-03-18T21:40:50.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"linux","tags":["linux"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1932},{"title":"Mediator模式","date":"2018-02-08T20:35:10.000Z","comments":1,"description":"本文简要讲述了设计模式中的Mediator模式。","_content":"\n# Mediator模式\n只有一个仲裁者\n&ensp; 要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。\n\n---\n\n\n## 类和接口表\n|  名字   | 说明                                   |\n| -------  | -----------------------------------|\n| Mediator | 定义 \"仲裁者\" 的接口(API)的接口 |\n| Colleague | 定义\"组员\"的接口(API)的接口 |\n| ColleagueButton | 表示按钮的类。它实现Colleague接口 |\n| ColleagueTextField | 表示文本输入框的类。它实现了Colleague接口 |\n| ColleagueCheckbox | 表示勾选框的类。实现了Colleague接口 |\n| LoginFrame | 表示登录对话框类。实现了Mediator接口 |\n| Main | 测试程序行为的类 |\n \n\n\n## 程序的类图\n有点复杂喔！ 不急。慢慢看！！\n![Mediator模式](Mediator_Design_Pattern/Mediator_Design_Pattern.png)\n\n\n## 代码\n### Colleague接口(组员接口)\n``` java\npackage com.sean.Mediator;\n\npublic interface Colleague {\n\n\tpublic abstract void setMediator(Mediator mediator);\n\tpublic abstract void setColleagueEnabled(boolean enabled);\n}\n\n\n```\n\n### Mediator接口(仲裁者接口)\n``` java\npackage com.sean.Mediator;\n\npublic interface Mediator {\n\t//生成Mediator要管理的组员.\n\tpublic abstract void createColleagues();\n\t//被各个Colleague组员调用，让组员向仲裁者进行报告\n\tpublic abstract void colleagueChanged();\n}\n\n```\n\n### ColleagueButton(具体的组员)\n``` java\nimport java.awt.Button;\nimport java.awt.HeadlessException;\n\npublic class ColleagueButton extends Button implements Colleague {\n\tprivate Mediator mediator;\n\tpublic ColleagueButton(String caption) {\n\t\tsuper(caption);\n\t}\n\t\n\tpublic void setMediator(Mediator mediator) {\n\t\t//保存Mediator\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\t//Mediator下达启用禁用的指示\n\t\tsetEnabled(enabled);\n\t}\n\n}\n\n```\n\n### ColleagueCheckbox(具体的组员)\n``` java\npackage com.sean.Mediator;\n\nimport java.awt.Checkbox;\nimport java.awt.CheckboxGroup;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\n\npublic class ColleagueCheckbox extends Checkbox implements Colleague,\n\t\tItemListener {\n\tprivate Mediator mediator;\n\tpublic ColleagueCheckbox(String caption,CheckboxGroup group,boolean state){\n\t\tsuper(caption,group,state);\n\t}\n\tpublic void itemStateChanged(ItemEvent e) {\n\t\tmediator.colleagueChanged();\n\n\t}\n\n\tpublic void setMediator(Mediator mediator) {\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\tsetEnabled(enabled);\n\n\t}\n\n}\n\n```\n\n### ColleagueTextField(具体的组员)\n``` java\nimport java.awt.Color;\nimport java.awt.TextField;\nimport java.awt.event.TextEvent;\nimport java.awt.event.TextListener;\n\npublic class ColleagueTextField extends TextField implements Colleague,\n\t\tTextListener {\n\tprivate Mediator mediator;\n\tpublic ColleagueTextField(String text,int columns){\n\t\tsuper(text,columns);\n\t}\n\n\tpublic void textValueChanged(TextEvent e) {\n\t\t//文字发生变化时通知Mediator\n\t\tmediator.colleagueChanged();\n\n\t}\n\n\tpublic void setMediator(Mediator mediator) {\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\tsetEnabled(enabled);\n\t\tsetBackground(enabled ? Color.white : Color.lightGray);\n\t}\n\n}\n\n```\n\n### LoginFrame(具体的仲裁者)\n代码有点多加油看看！\n``` java\npackage com.sean.Mediator;\n\nimport java.awt.CheckboxGroup;\nimport java.awt.Color;\nimport java.awt.Frame;\nimport java.awt.GridLayout;\nimport java.awt.Label;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class LoginFrame extends Frame implements ActionListener, Mediator {\n\tprivate ColleagueCheckbox checkGuest;\n\tprivate ColleagueCheckbox checkLogin;\n\tprivate ColleagueTextField textUser;\n\tprivate ColleagueTextField textPass;\n\tprivate ColleagueButton buttonOK;\n\tprivate ColleagueButton buttonCancle;\n\t//构造函数\n\t//生成并配置各个Colleague后，显示对话框\n\tpublic LoginFrame(String title){\n\t\tsuper(title);\n\t\tsetBackground(Color.lightGray);\n\t\t//使用布局管理器生成4×2窗格\n\t\tsetLayout(new GridLayout(4,2));\n\t\t//生成各个Colleague\n\t\tcreateColleagues();\n\t\tadd(checkGuest);\n\t\tadd(checkLogin);\n\t\tadd(new Label(\"username\"));\n\t\tadd(textUser);\n\t\tadd(new Label(\"Password\"));\n\t\tadd(textPass);\n\t\tadd(buttonOK);\n\t\tadd(buttonCancle);\n\t\t//设置初始的启用/禁用状态\n\t\tcolleagueChanged();\n\t\t//显示\n\t\tpack();\n\t\tshow();\n\t}\n\tpublic void createColleagues() {\n\t\t//生成各个Colleague\n\t\tCheckboxGroup g= new CheckboxGroup();\n\t\tcheckGuest = new ColleagueCheckbox(\"Guest\",g,true);\n\t\tcheckLogin = new ColleagueCheckbox(\"Login\",g,false);\n\t\ttextUser = new ColleagueTextField(\"\",10);\n\t\ttextPass = new ColleagueTextField(\"\",10);\n\t\ttextPass.setEchoChar('*');\n\t\tbuttonOK = new ColleagueButton(\"OK\");\n\t\tbuttonCancle = new ColleagueButton(\"Cancle\");\n\t\t//设置Mediator\n\t\tcheckGuest.setMediator(this);\n\t\tcheckLogin.setMediator(this);\n\t\ttextUser.setMediator(this);\n\t\ttextPass.setMediator(this);\n\t\tbuttonOK.setMediator(this);\n\t\tbuttonCancle.setMediator(this);\n\t\t//设置Listener\n\t\tcheckGuest.addItemListener(checkGuest);\n\t\tcheckLogin.addItemListener(checkLogin);\n\t\ttextUser.addTextListener(textUser);\n\t\ttextPass.addTextListener(textPass);\n\t\tbuttonOK.addActionListener(this);\n\t\tbuttonCancle.addActionListener(this);\n\n\t}\n\n\tpublic void colleagueChanged() {\n\t\tif(checkGuest.getState()){\n\t\t\ttextUser.setColleagueEnabled(false);\n\t\t\ttextPass.setColleagueEnabled(false);\n\t\t\tbuttonOK.setColleagueEnabled(true);\n\t\t}else {\n\t\t\ttextUser.setColleagueEnabled(true);\n\t\t\tuserpassChanged();\n\t\t}\n\n\t}\n\tpublic void userpassChanged(){\n\t\tif(textUser.getText().length()>0){\n\t\t\ttextPass.setColleagueEnabled(true);\n\t\t\tif(textPass.getText().length()>0){\n\t\t\t\tbuttonOK.setColleagueEnabled(true);\n\t\t\t}else{\n\t\t\t\tbuttonOK.setColleagueEnabled(false);\n\t\t\t}\n\t\t}else {\n\t\t\ttextPass.setColleagueEnabled(false);\n\t\t\tbuttonOK.setColleagueEnabled(false);\n\t\t}\n\t}\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tSystem.out.println(e.toString());\n\t\tSystem.exit(0);\n\n\t}\n\n}\n\n```\n\n### 主函数 调用者 客户\n代码比较少！放松！放松！放松！\n``` java\npackage com.sean.Mediator;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tLoginFrame lf=new LoginFrame(\"Mediator Sample\");\n\n\t}\n\n}\n\n```\n## 个人理解\nMediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。\n## 参照\n> 图解设计模式\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Mediator_Design_Pattern.md","raw":"---\ntitle: Mediator模式\ndate: 2018/02/08 20:35:10\ncomments: true\ndescription: 本文简要讲述了设计模式中的Mediator模式。\ntags:\n\t- Mediator\ncategories:\n\t- DesignPattern\n---\n\n# Mediator模式\n只有一个仲裁者\n&ensp; 要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。\n\n---\n\n\n## 类和接口表\n|  名字   | 说明                                   |\n| -------  | -----------------------------------|\n| Mediator | 定义 \"仲裁者\" 的接口(API)的接口 |\n| Colleague | 定义\"组员\"的接口(API)的接口 |\n| ColleagueButton | 表示按钮的类。它实现Colleague接口 |\n| ColleagueTextField | 表示文本输入框的类。它实现了Colleague接口 |\n| ColleagueCheckbox | 表示勾选框的类。实现了Colleague接口 |\n| LoginFrame | 表示登录对话框类。实现了Mediator接口 |\n| Main | 测试程序行为的类 |\n \n\n\n## 程序的类图\n有点复杂喔！ 不急。慢慢看！！\n![Mediator模式](Mediator_Design_Pattern/Mediator_Design_Pattern.png)\n\n\n## 代码\n### Colleague接口(组员接口)\n``` java\npackage com.sean.Mediator;\n\npublic interface Colleague {\n\n\tpublic abstract void setMediator(Mediator mediator);\n\tpublic abstract void setColleagueEnabled(boolean enabled);\n}\n\n\n```\n\n### Mediator接口(仲裁者接口)\n``` java\npackage com.sean.Mediator;\n\npublic interface Mediator {\n\t//生成Mediator要管理的组员.\n\tpublic abstract void createColleagues();\n\t//被各个Colleague组员调用，让组员向仲裁者进行报告\n\tpublic abstract void colleagueChanged();\n}\n\n```\n\n### ColleagueButton(具体的组员)\n``` java\nimport java.awt.Button;\nimport java.awt.HeadlessException;\n\npublic class ColleagueButton extends Button implements Colleague {\n\tprivate Mediator mediator;\n\tpublic ColleagueButton(String caption) {\n\t\tsuper(caption);\n\t}\n\t\n\tpublic void setMediator(Mediator mediator) {\n\t\t//保存Mediator\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\t//Mediator下达启用禁用的指示\n\t\tsetEnabled(enabled);\n\t}\n\n}\n\n```\n\n### ColleagueCheckbox(具体的组员)\n``` java\npackage com.sean.Mediator;\n\nimport java.awt.Checkbox;\nimport java.awt.CheckboxGroup;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\n\npublic class ColleagueCheckbox extends Checkbox implements Colleague,\n\t\tItemListener {\n\tprivate Mediator mediator;\n\tpublic ColleagueCheckbox(String caption,CheckboxGroup group,boolean state){\n\t\tsuper(caption,group,state);\n\t}\n\tpublic void itemStateChanged(ItemEvent e) {\n\t\tmediator.colleagueChanged();\n\n\t}\n\n\tpublic void setMediator(Mediator mediator) {\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\tsetEnabled(enabled);\n\n\t}\n\n}\n\n```\n\n### ColleagueTextField(具体的组员)\n``` java\nimport java.awt.Color;\nimport java.awt.TextField;\nimport java.awt.event.TextEvent;\nimport java.awt.event.TextListener;\n\npublic class ColleagueTextField extends TextField implements Colleague,\n\t\tTextListener {\n\tprivate Mediator mediator;\n\tpublic ColleagueTextField(String text,int columns){\n\t\tsuper(text,columns);\n\t}\n\n\tpublic void textValueChanged(TextEvent e) {\n\t\t//文字发生变化时通知Mediator\n\t\tmediator.colleagueChanged();\n\n\t}\n\n\tpublic void setMediator(Mediator mediator) {\n\t\tthis.mediator=mediator;\n\n\t}\n\n\tpublic void setColleagueEnabled(boolean enabled) {\n\t\tsetEnabled(enabled);\n\t\tsetBackground(enabled ? Color.white : Color.lightGray);\n\t}\n\n}\n\n```\n\n### LoginFrame(具体的仲裁者)\n代码有点多加油看看！\n``` java\npackage com.sean.Mediator;\n\nimport java.awt.CheckboxGroup;\nimport java.awt.Color;\nimport java.awt.Frame;\nimport java.awt.GridLayout;\nimport java.awt.Label;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class LoginFrame extends Frame implements ActionListener, Mediator {\n\tprivate ColleagueCheckbox checkGuest;\n\tprivate ColleagueCheckbox checkLogin;\n\tprivate ColleagueTextField textUser;\n\tprivate ColleagueTextField textPass;\n\tprivate ColleagueButton buttonOK;\n\tprivate ColleagueButton buttonCancle;\n\t//构造函数\n\t//生成并配置各个Colleague后，显示对话框\n\tpublic LoginFrame(String title){\n\t\tsuper(title);\n\t\tsetBackground(Color.lightGray);\n\t\t//使用布局管理器生成4×2窗格\n\t\tsetLayout(new GridLayout(4,2));\n\t\t//生成各个Colleague\n\t\tcreateColleagues();\n\t\tadd(checkGuest);\n\t\tadd(checkLogin);\n\t\tadd(new Label(\"username\"));\n\t\tadd(textUser);\n\t\tadd(new Label(\"Password\"));\n\t\tadd(textPass);\n\t\tadd(buttonOK);\n\t\tadd(buttonCancle);\n\t\t//设置初始的启用/禁用状态\n\t\tcolleagueChanged();\n\t\t//显示\n\t\tpack();\n\t\tshow();\n\t}\n\tpublic void createColleagues() {\n\t\t//生成各个Colleague\n\t\tCheckboxGroup g= new CheckboxGroup();\n\t\tcheckGuest = new ColleagueCheckbox(\"Guest\",g,true);\n\t\tcheckLogin = new ColleagueCheckbox(\"Login\",g,false);\n\t\ttextUser = new ColleagueTextField(\"\",10);\n\t\ttextPass = new ColleagueTextField(\"\",10);\n\t\ttextPass.setEchoChar('*');\n\t\tbuttonOK = new ColleagueButton(\"OK\");\n\t\tbuttonCancle = new ColleagueButton(\"Cancle\");\n\t\t//设置Mediator\n\t\tcheckGuest.setMediator(this);\n\t\tcheckLogin.setMediator(this);\n\t\ttextUser.setMediator(this);\n\t\ttextPass.setMediator(this);\n\t\tbuttonOK.setMediator(this);\n\t\tbuttonCancle.setMediator(this);\n\t\t//设置Listener\n\t\tcheckGuest.addItemListener(checkGuest);\n\t\tcheckLogin.addItemListener(checkLogin);\n\t\ttextUser.addTextListener(textUser);\n\t\ttextPass.addTextListener(textPass);\n\t\tbuttonOK.addActionListener(this);\n\t\tbuttonCancle.addActionListener(this);\n\n\t}\n\n\tpublic void colleagueChanged() {\n\t\tif(checkGuest.getState()){\n\t\t\ttextUser.setColleagueEnabled(false);\n\t\t\ttextPass.setColleagueEnabled(false);\n\t\t\tbuttonOK.setColleagueEnabled(true);\n\t\t}else {\n\t\t\ttextUser.setColleagueEnabled(true);\n\t\t\tuserpassChanged();\n\t\t}\n\n\t}\n\tpublic void userpassChanged(){\n\t\tif(textUser.getText().length()>0){\n\t\t\ttextPass.setColleagueEnabled(true);\n\t\t\tif(textPass.getText().length()>0){\n\t\t\t\tbuttonOK.setColleagueEnabled(true);\n\t\t\t}else{\n\t\t\t\tbuttonOK.setColleagueEnabled(false);\n\t\t\t}\n\t\t}else {\n\t\t\ttextPass.setColleagueEnabled(false);\n\t\t\tbuttonOK.setColleagueEnabled(false);\n\t\t}\n\t}\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tSystem.out.println(e.toString());\n\t\tSystem.exit(0);\n\n\t}\n\n}\n\n```\n\n### 主函数 调用者 客户\n代码比较少！放松！放松！放松！\n``` java\npackage com.sean.Mediator;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tLoginFrame lf=new LoginFrame(\"Mediator Sample\");\n\n\t}\n\n}\n\n```\n## 个人理解\nMediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。\n## 参照\n> 图解设计模式\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Mediator_Design_Pattern","published":1,"updated":"2018-02-08T20:35:10.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4e000mytcvewqlbqno","content":"<h1 id=\"Mediator模式\"><a href=\"#Mediator模式\" class=\"headerlink\" title=\"Mediator模式\"></a>Mediator模式</h1><p>只有一个仲裁者<br>&ensp; 要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。</p>\n<hr>\n<h2 id=\"类和接口表\"><a href=\"#类和接口表\" class=\"headerlink\" title=\"类和接口表\"></a>类和接口表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Mediator</td>\n<td>定义 “仲裁者” 的接口(API)的接口</td>\n</tr>\n<tr>\n<td>Colleague</td>\n<td>定义”组员”的接口(API)的接口</td>\n</tr>\n<tr>\n<td>ColleagueButton</td>\n<td>表示按钮的类。它实现Colleague接口</td>\n</tr>\n<tr>\n<td>ColleagueTextField</td>\n<td>表示文本输入框的类。它实现了Colleague接口</td>\n</tr>\n<tr>\n<td>ColleagueCheckbox</td>\n<td>表示勾选框的类。实现了Colleague接口</td>\n</tr>\n<tr>\n<td>LoginFrame</td>\n<td>表示登录对话框类。实现了Mediator接口</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"程序的类图\"><a href=\"#程序的类图\" class=\"headerlink\" title=\"程序的类图\"></a>程序的类图</h2><p>有点复杂喔！ 不急。慢慢看！！<br><img data-src=\"/2018/02/09/Mediator_Design_Pattern/Mediator_Design_Pattern.png\" alt=\"Mediator模式\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Colleague接口-组员接口\"><a href=\"#Colleague接口-组员接口\" class=\"headerlink\" title=\"Colleague接口(组员接口)\"></a>Colleague接口(组员接口)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Colleague</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Mediator接口-仲裁者接口\"><a href=\"#Mediator接口-仲裁者接口\" class=\"headerlink\" title=\"Mediator接口(仲裁者接口)\"></a>Mediator接口(仲裁者接口)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Mediator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//生成Mediator要管理的组员.</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">createColleagues</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"comment\">//被各个Colleague组员调用，让组员向仲裁者进行报告</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">colleagueChanged</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueButton-具体的组员\"><a href=\"#ColleagueButton-具体的组员\" class=\"headerlink\" title=\"ColleagueButton(具体的组员)\"></a>ColleagueButton(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.HeadlessException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueButton</span> <span class=\"keyword\">extends</span> <span class=\"title\">Button</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueButton</span><span class=\"params\">(String caption)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(caption);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//保存Mediator</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//Mediator下达启用禁用的指示</span></span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueCheckbox-具体的组员\"><a href=\"#ColleagueCheckbox-具体的组员\" class=\"headerlink\" title=\"ColleagueCheckbox(具体的组员)\"></a>ColleagueCheckbox(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Checkbox;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.CheckboxGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ItemEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ItemListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueCheckbox</span> <span class=\"keyword\">extends</span> <span class=\"title\">Checkbox</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">ItemListener</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueCheckbox</span><span class=\"params\">(String caption,CheckboxGroup group,<span class=\"keyword\">boolean</span> state)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(caption,group,state);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">itemStateChanged</span><span class=\"params\">(ItemEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tmediator.colleagueChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueTextField-具体的组员\"><a href=\"#ColleagueTextField-具体的组员\" class=\"headerlink\" title=\"ColleagueTextField(具体的组员)\"></a>ColleagueTextField(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.TextEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.TextListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueTextField</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextField</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">TextListener</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueTextField</span><span class=\"params\">(String text,<span class=\"keyword\">int</span> columns)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(text,columns);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">textValueChanged</span><span class=\"params\">(TextEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//文字发生变化时通知Mediator</span></span><br><span class=\"line\">\t\tmediator.colleagueChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\">\t\tsetBackground(enabled ? Color.white : Color.lightGray);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"LoginFrame-具体的仲裁者\"><a href=\"#LoginFrame-具体的仲裁者\" class=\"headerlink\" title=\"LoginFrame(具体的仲裁者)\"></a>LoginFrame(具体的仲裁者)</h3><p>代码有点多加油看看！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.CheckboxGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Frame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.GridLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Label;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">Frame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">Mediator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueCheckbox checkGuest;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueCheckbox checkLogin;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueTextField textUser;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueTextField textPass;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueButton buttonOK;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueButton buttonCancle;</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"comment\">//生成并配置各个Colleague后，显示对话框</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginFrame</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\tsetBackground(Color.lightGray);</span><br><span class=\"line\">\t\t<span class=\"comment\">//使用布局管理器生成4×2窗格</span></span><br><span class=\"line\">\t\tsetLayout(<span class=\"keyword\">new</span> GridLayout(<span class=\"number\">4</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成各个Colleague</span></span><br><span class=\"line\">\t\tcreateColleagues();</span><br><span class=\"line\">\t\tadd(checkGuest);</span><br><span class=\"line\">\t\tadd(checkLogin);</span><br><span class=\"line\">\t\tadd(<span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;username&quot;</span>));</span><br><span class=\"line\">\t\tadd(textUser);</span><br><span class=\"line\">\t\tadd(<span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;Password&quot;</span>));</span><br><span class=\"line\">\t\tadd(textPass);</span><br><span class=\"line\">\t\tadd(buttonOK);</span><br><span class=\"line\">\t\tadd(buttonCancle);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置初始的启用/禁用状态</span></span><br><span class=\"line\">\t\tcolleagueChanged();</span><br><span class=\"line\">\t\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createColleagues</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成各个Colleague</span></span><br><span class=\"line\">\t\tCheckboxGroup g= <span class=\"keyword\">new</span> CheckboxGroup();</span><br><span class=\"line\">\t\tcheckGuest = <span class=\"keyword\">new</span> ColleagueCheckbox(<span class=\"string\">&quot;Guest&quot;</span>,g,<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\tcheckLogin = <span class=\"keyword\">new</span> ColleagueCheckbox(<span class=\"string\">&quot;Login&quot;</span>,g,<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\ttextUser = <span class=\"keyword\">new</span> ColleagueTextField(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\ttextPass = <span class=\"keyword\">new</span> ColleagueTextField(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\ttextPass.setEchoChar(<span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">\t\tbuttonOK = <span class=\"keyword\">new</span> ColleagueButton(<span class=\"string\">&quot;OK&quot;</span>);</span><br><span class=\"line\">\t\tbuttonCancle = <span class=\"keyword\">new</span> ColleagueButton(<span class=\"string\">&quot;Cancle&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置Mediator</span></span><br><span class=\"line\">\t\tcheckGuest.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tcheckLogin.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\ttextUser.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\ttextPass.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonOK.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonCancle.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置Listener</span></span><br><span class=\"line\">\t\tcheckGuest.addItemListener(checkGuest);</span><br><span class=\"line\">\t\tcheckLogin.addItemListener(checkLogin);</span><br><span class=\"line\">\t\ttextUser.addTextListener(textUser);</span><br><span class=\"line\">\t\ttextPass.addTextListener(textPass);</span><br><span class=\"line\">\t\tbuttonOK.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonCancle.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">colleagueChanged</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(checkGuest.getState())&#123;</span><br><span class=\"line\">\t\t\ttextUser.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttextUser.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\tuserpassChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">userpassChanged</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(textUser.getText().length()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(textPass.getText().length()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(e.toString());</span><br><span class=\"line\">\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数-调用者-客户\"><a href=\"#主函数-调用者-客户\" class=\"headerlink\" title=\"主函数 调用者 客户\"></a>主函数 调用者 客户</h3><p>代码比较少！放松！放松！放松！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tLoginFrame lf=<span class=\"keyword\">new</span> LoginFrame(<span class=\"string\">&quot;Mediator Sample&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>Mediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>图解设计模式</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mediator模式\"><a href=\"#Mediator模式\" class=\"headerlink\" title=\"Mediator模式\"></a>Mediator模式</h1><p>只有一个仲裁者<br>&ensp; 要调用多个对象之间的关系时，就需要使用Mediator模式。将控制的逻辑处理交给仲裁者。</p>\n<hr>\n<h2 id=\"类和接口表\"><a href=\"#类和接口表\" class=\"headerlink\" title=\"类和接口表\"></a>类和接口表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Mediator</td>\n<td>定义 “仲裁者” 的接口(API)的接口</td>\n</tr>\n<tr>\n<td>Colleague</td>\n<td>定义”组员”的接口(API)的接口</td>\n</tr>\n<tr>\n<td>ColleagueButton</td>\n<td>表示按钮的类。它实现Colleague接口</td>\n</tr>\n<tr>\n<td>ColleagueTextField</td>\n<td>表示文本输入框的类。它实现了Colleague接口</td>\n</tr>\n<tr>\n<td>ColleagueCheckbox</td>\n<td>表示勾选框的类。实现了Colleague接口</td>\n</tr>\n<tr>\n<td>LoginFrame</td>\n<td>表示登录对话框类。实现了Mediator接口</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"程序的类图\"><a href=\"#程序的类图\" class=\"headerlink\" title=\"程序的类图\"></a>程序的类图</h2><p>有点复杂喔！ 不急。慢慢看！！<br><img src=\"/2018/02/09/Mediator_Design_Pattern/Mediator_Design_Pattern.png\" alt=\"Mediator模式\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Colleague接口-组员接口\"><a href=\"#Colleague接口-组员接口\" class=\"headerlink\" title=\"Colleague接口(组员接口)\"></a>Colleague接口(组员接口)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Colleague</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Mediator接口-仲裁者接口\"><a href=\"#Mediator接口-仲裁者接口\" class=\"headerlink\" title=\"Mediator接口(仲裁者接口)\"></a>Mediator接口(仲裁者接口)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Mediator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//生成Mediator要管理的组员.</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">createColleagues</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"comment\">//被各个Colleague组员调用，让组员向仲裁者进行报告</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">colleagueChanged</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueButton-具体的组员\"><a href=\"#ColleagueButton-具体的组员\" class=\"headerlink\" title=\"ColleagueButton(具体的组员)\"></a>ColleagueButton(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.HeadlessException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueButton</span> <span class=\"keyword\">extends</span> <span class=\"title\">Button</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueButton</span><span class=\"params\">(String caption)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(caption);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//保存Mediator</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//Mediator下达启用禁用的指示</span></span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueCheckbox-具体的组员\"><a href=\"#ColleagueCheckbox-具体的组员\" class=\"headerlink\" title=\"ColleagueCheckbox(具体的组员)\"></a>ColleagueCheckbox(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Checkbox;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.CheckboxGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ItemEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ItemListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueCheckbox</span> <span class=\"keyword\">extends</span> <span class=\"title\">Checkbox</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">ItemListener</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueCheckbox</span><span class=\"params\">(String caption,CheckboxGroup group,<span class=\"keyword\">boolean</span> state)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(caption,group,state);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">itemStateChanged</span><span class=\"params\">(ItemEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tmediator.colleagueChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ColleagueTextField-具体的组员\"><a href=\"#ColleagueTextField-具体的组员\" class=\"headerlink\" title=\"ColleagueTextField(具体的组员)\"></a>ColleagueTextField(具体的组员)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.TextEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.TextListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColleagueTextField</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextField</span> <span class=\"keyword\">implements</span> <span class=\"title\">Colleague</span>,</span></span><br><span class=\"line\"><span class=\"class\">\t\t<span class=\"title\">TextListener</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Mediator mediator;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColleagueTextField</span><span class=\"params\">(String text,<span class=\"keyword\">int</span> columns)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(text,columns);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">textValueChanged</span><span class=\"params\">(TextEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//文字发生变化时通知Mediator</span></span><br><span class=\"line\">\t\tmediator.colleagueChanged();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediator</span><span class=\"params\">(Mediator mediator)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.mediator=mediator;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColleagueEnabled</span><span class=\"params\">(<span class=\"keyword\">boolean</span> enabled)</span> </span>&#123;</span><br><span class=\"line\">\t\tsetEnabled(enabled);</span><br><span class=\"line\">\t\tsetBackground(enabled ? Color.white : Color.lightGray);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"LoginFrame-具体的仲裁者\"><a href=\"#LoginFrame-具体的仲裁者\" class=\"headerlink\" title=\"LoginFrame(具体的仲裁者)\"></a>LoginFrame(具体的仲裁者)</h3><p>代码有点多加油看看！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.CheckboxGroup;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Frame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.GridLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Label;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LoginFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">Frame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">Mediator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueCheckbox checkGuest;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueCheckbox checkLogin;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueTextField textUser;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueTextField textPass;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueButton buttonOK;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ColleagueButton buttonCancle;</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"comment\">//生成并配置各个Colleague后，显示对话框</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LoginFrame</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\tsetBackground(Color.lightGray);</span><br><span class=\"line\">\t\t<span class=\"comment\">//使用布局管理器生成4×2窗格</span></span><br><span class=\"line\">\t\tsetLayout(<span class=\"keyword\">new</span> GridLayout(<span class=\"number\">4</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成各个Colleague</span></span><br><span class=\"line\">\t\tcreateColleagues();</span><br><span class=\"line\">\t\tadd(checkGuest);</span><br><span class=\"line\">\t\tadd(checkLogin);</span><br><span class=\"line\">\t\tadd(<span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;username&quot;</span>));</span><br><span class=\"line\">\t\tadd(textUser);</span><br><span class=\"line\">\t\tadd(<span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;Password&quot;</span>));</span><br><span class=\"line\">\t\tadd(textPass);</span><br><span class=\"line\">\t\tadd(buttonOK);</span><br><span class=\"line\">\t\tadd(buttonCancle);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置初始的启用/禁用状态</span></span><br><span class=\"line\">\t\tcolleagueChanged();</span><br><span class=\"line\">\t\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createColleagues</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//生成各个Colleague</span></span><br><span class=\"line\">\t\tCheckboxGroup g= <span class=\"keyword\">new</span> CheckboxGroup();</span><br><span class=\"line\">\t\tcheckGuest = <span class=\"keyword\">new</span> ColleagueCheckbox(<span class=\"string\">&quot;Guest&quot;</span>,g,<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\tcheckLogin = <span class=\"keyword\">new</span> ColleagueCheckbox(<span class=\"string\">&quot;Login&quot;</span>,g,<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\ttextUser = <span class=\"keyword\">new</span> ColleagueTextField(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\ttextPass = <span class=\"keyword\">new</span> ColleagueTextField(<span class=\"string\">&quot;&quot;</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t\ttextPass.setEchoChar(<span class=\"string\">&#x27;*&#x27;</span>);</span><br><span class=\"line\">\t\tbuttonOK = <span class=\"keyword\">new</span> ColleagueButton(<span class=\"string\">&quot;OK&quot;</span>);</span><br><span class=\"line\">\t\tbuttonCancle = <span class=\"keyword\">new</span> ColleagueButton(<span class=\"string\">&quot;Cancle&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置Mediator</span></span><br><span class=\"line\">\t\tcheckGuest.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tcheckLogin.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\ttextUser.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\ttextPass.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonOK.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonCancle.setMediator(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置Listener</span></span><br><span class=\"line\">\t\tcheckGuest.addItemListener(checkGuest);</span><br><span class=\"line\">\t\tcheckLogin.addItemListener(checkLogin);</span><br><span class=\"line\">\t\ttextUser.addTextListener(textUser);</span><br><span class=\"line\">\t\ttextPass.addTextListener(textPass);</span><br><span class=\"line\">\t\tbuttonOK.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonCancle.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">colleagueChanged</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(checkGuest.getState())&#123;</span><br><span class=\"line\">\t\t\ttextUser.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttextUser.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\tuserpassChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">userpassChanged</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(textUser.getText().length()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(textPass.getText().length()&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttextPass.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t\tbuttonOK.setColleagueEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(e.toString());</span><br><span class=\"line\">\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"主函数-调用者-客户\"><a href=\"#主函数-调用者-客户\" class=\"headerlink\" title=\"主函数 调用者 客户\"></a>主函数 调用者 客户</h3><p>代码比较少！放松！放松！放松！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Mediator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tLoginFrame lf=<span class=\"keyword\">new</span> LoginFrame(<span class=\"string\">&quot;Mediator Sample&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>Mediator模式就如同在一个集体中需要一个管理者，没管理者就是一团乱麻！有管理者，能让程序有序的进行！虽然我们崇尚自由！但是没有管理的世界更可怕！生活中需要管理者，程序中也需要管理者！程序来源于生活。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>图解设计模式</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/09/Mediator_Design_Pattern/Mediator_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Fri Feb 09 2018 04:35:10 GMT+0800 (China Standard Time)","title":"Mediator模式","path":"2018/02/09/Mediator_Design_Pattern/","eyeCatchImage":"/2018/02/09/Mediator_Design_Pattern/Mediator_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的Mediator模式。","date":{"_isAMomentObject":true,"_i":"2018-02-08T20:35:10.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-08T20:35:10.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Mediator"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":5545},{"title":"Memento模式","date":"2018-02-12T10:36:55.000Z","comments":1,"description":"本文简要叙述了设计模式中的Memento模式。","_content":"\n# Memento模式\n**保存对象状态**\n## 类表\n| 名字 | 说明 |\n|--------|--------|\n| Memento | 表示Gamer状态的类 |\n| Gamer | 表示游戏主人公的类，他会生成Memento实例 |\n| Main | 进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态 |\n\n## 类图\n![Memento](Memento_Design_Pattern/Memento_Design_Pattern.png)\n\n## 代码\n\n### Memento类\n``` java \n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.sean.AbstractFactory.listfactory.ListLink;\n\npublic class Memento {\n\tint money;\n\tArrayList fruits;\n\tpublic int getMoney(){\n\t\treturn money;\n\t}\n\tMemento(int money){\n\t\tthis.money=money;\n\t\tthis.fruits=new ArrayList();\n\t}\n\tvoid addFruit(String fruit){\n\t\tfruits.add(fruit);\n\t}\n\tList getFruits(){\n\t\treturn (List) fruits.clone();\n\t}\n}\n\n```\n\n### Gamer类\n``` java\npackage com.sean.Memento;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Random;\n\n\npublic class Gamer {\n\tprivate int money;\n\tprivate List fruits=new ArrayList();\n\tprivate Random random=new Random();\n\tprivate static String[] fruitsname={\"苹果\",\"葡萄\",\"香蕉\",\"橘子\"};\n\tpublic Gamer(int money){\n\t\tthis.money=money;\n\t}\n\tpublic int getMoney(){\n\t\treturn money;\n\t}\n\tpublic void bet(){\n\t\tint dice = random.nextInt(6)+1;\n\t\tif(dice==1){\n\t\t\tmoney+=100;\n\t\t\tSystem.out.println(\"所持金币增加了。\");\n\t\t}else if (dice==2) {\n\t\t\tmoney/=2;\n\t\t\tSystem.out.println(\"所持金币减半。\");\n\t\t}else if (dice==6) {\n\t\t\tString f=getFruit();\n\t\t\tSystem.out.println(\"获得的水果\"+f+\")。\");\n\t\t}else{\n\t\t\tSystem.out.println(\"什么都没发生。\");\n\t\t}\n\t}\n\tpublic Memento createMemento(){\n\t\tMemento m=new Memento(money);\n\t\tIterator it=fruits.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tString f=(String)it.next();\n\t\t\tif(f.startsWith(\"好吃的\")){\n\t\t\t\tm.addFruit(f);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn m;\n\t}\n\tpublic void restoreMemento(Memento memento){\n\t\tthis.money=money;\n\t\tthis.fruits=memento.getFruits();\n\t}\n\tpublic String toString(){\n\t\treturn \"[money= \"+money+\",fruits= \"+fruits+\"]\";\n\t}\n\tprivate String getFruit(){ \n\t\tString prefix=\"\";\n\t\tif(random.nextBoolean()){\n\t\t\tprefix=\"好吃的\";\n\t\t}\n\t\treturn prefix+fruitsname[random.nextInt(fruitsname.length)];\n\t}\n}\n\n```\n\n### Main\n\n``` java\npackage com.sean.Memento;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tGamer gamer=new Gamer(100);\n\t\tMemento memento=gamer.createMemento();\n\t\tfor(int i=0;i<100;i++){\n\t\t\tSystem.out.println(\"========\"+i);\n\t\t\tSystem.out.println(\"当前状态：\"+gamer);\n\t\t\tgamer.bet(); //进行游戏\n\t\t\tSystem.out.println(\"所持金钱为\"+gamer.getMoney()+\"元\");\n\t\t\tif(gamer.getMoney()>memento.getMoney()){\n\t\t\t\tSystem.out.println(\"（所持金钱增加许多，因此保存游戏当前状态）\");\n\t\t\t\tmemento=gamer.createMemento();\n\t\t\t}else if (gamer.getMoney()<memento.getMoney()/2) {\n\t\t\t\tSystem.out.println(\"（所持金钱减少许多，因此要恢复至以前状态）\");\n\t\t\t\tgamer.restoreMemento(memento);\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}catch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.println(\"\");\n\t\t}\n\t\t\n\t}\n\n}\n\n```\n## 个人理解\n该模式就是实现对象状态的恢复，而设置的。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Memento_Design_Pattern.md","raw":"---\ntitle: Memento模式\ndate: 2018/02/12 10:36:55\ncomments: true\ndescription: 本文简要叙述了设计模式中的Memento模式。\ntags:\n\t- Memento\ncategories:\n\t- DesignPattern\n---\n\n# Memento模式\n**保存对象状态**\n## 类表\n| 名字 | 说明 |\n|--------|--------|\n| Memento | 表示Gamer状态的类 |\n| Gamer | 表示游戏主人公的类，他会生成Memento实例 |\n| Main | 进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态 |\n\n## 类图\n![Memento](Memento_Design_Pattern/Memento_Design_Pattern.png)\n\n## 代码\n\n### Memento类\n``` java \n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.sean.AbstractFactory.listfactory.ListLink;\n\npublic class Memento {\n\tint money;\n\tArrayList fruits;\n\tpublic int getMoney(){\n\t\treturn money;\n\t}\n\tMemento(int money){\n\t\tthis.money=money;\n\t\tthis.fruits=new ArrayList();\n\t}\n\tvoid addFruit(String fruit){\n\t\tfruits.add(fruit);\n\t}\n\tList getFruits(){\n\t\treturn (List) fruits.clone();\n\t}\n}\n\n```\n\n### Gamer类\n``` java\npackage com.sean.Memento;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Random;\n\n\npublic class Gamer {\n\tprivate int money;\n\tprivate List fruits=new ArrayList();\n\tprivate Random random=new Random();\n\tprivate static String[] fruitsname={\"苹果\",\"葡萄\",\"香蕉\",\"橘子\"};\n\tpublic Gamer(int money){\n\t\tthis.money=money;\n\t}\n\tpublic int getMoney(){\n\t\treturn money;\n\t}\n\tpublic void bet(){\n\t\tint dice = random.nextInt(6)+1;\n\t\tif(dice==1){\n\t\t\tmoney+=100;\n\t\t\tSystem.out.println(\"所持金币增加了。\");\n\t\t}else if (dice==2) {\n\t\t\tmoney/=2;\n\t\t\tSystem.out.println(\"所持金币减半。\");\n\t\t}else if (dice==6) {\n\t\t\tString f=getFruit();\n\t\t\tSystem.out.println(\"获得的水果\"+f+\")。\");\n\t\t}else{\n\t\t\tSystem.out.println(\"什么都没发生。\");\n\t\t}\n\t}\n\tpublic Memento createMemento(){\n\t\tMemento m=new Memento(money);\n\t\tIterator it=fruits.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tString f=(String)it.next();\n\t\t\tif(f.startsWith(\"好吃的\")){\n\t\t\t\tm.addFruit(f);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn m;\n\t}\n\tpublic void restoreMemento(Memento memento){\n\t\tthis.money=money;\n\t\tthis.fruits=memento.getFruits();\n\t}\n\tpublic String toString(){\n\t\treturn \"[money= \"+money+\",fruits= \"+fruits+\"]\";\n\t}\n\tprivate String getFruit(){ \n\t\tString prefix=\"\";\n\t\tif(random.nextBoolean()){\n\t\t\tprefix=\"好吃的\";\n\t\t}\n\t\treturn prefix+fruitsname[random.nextInt(fruitsname.length)];\n\t}\n}\n\n```\n\n### Main\n\n``` java\npackage com.sean.Memento;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tGamer gamer=new Gamer(100);\n\t\tMemento memento=gamer.createMemento();\n\t\tfor(int i=0;i<100;i++){\n\t\t\tSystem.out.println(\"========\"+i);\n\t\t\tSystem.out.println(\"当前状态：\"+gamer);\n\t\t\tgamer.bet(); //进行游戏\n\t\t\tSystem.out.println(\"所持金钱为\"+gamer.getMoney()+\"元\");\n\t\t\tif(gamer.getMoney()>memento.getMoney()){\n\t\t\t\tSystem.out.println(\"（所持金钱增加许多，因此保存游戏当前状态）\");\n\t\t\t\tmemento=gamer.createMemento();\n\t\t\t}else if (gamer.getMoney()<memento.getMoney()/2) {\n\t\t\t\tSystem.out.println(\"（所持金钱减少许多，因此要恢复至以前状态）\");\n\t\t\t\tgamer.restoreMemento(memento);\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tThread.sleep(100);\n\t\t\t}catch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.println(\"\");\n\t\t}\n\t\t\n\t}\n\n}\n\n```\n## 个人理解\n该模式就是实现对象状态的恢复，而设置的。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Memento_Design_Pattern","published":1,"updated":"2018-02-12T10:36:55.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4j000qytcvbj78ed87","content":"<h1 id=\"Memento模式\"><a href=\"#Memento模式\" class=\"headerlink\" title=\"Memento模式\"></a>Memento模式</h1><p><strong>保存对象状态</strong></p>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Memento</td>\n<td>表示Gamer状态的类</td>\n</tr>\n<tr>\n<td>Gamer</td>\n<td>表示游戏主人公的类，他会生成Memento实例</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img data-src=\"/2018/02/12/Memento_Design_Pattern/Memento_Design_Pattern.png\" alt=\"Memento\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Memento类\"><a href=\"#Memento类\" class=\"headerlink\" title=\"Memento类\"></a>Memento类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.AbstractFactory.listfactory.ListLink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memento</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> money;</span><br><span class=\"line\">\tArrayList fruits;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMemento(<span class=\"keyword\">int</span> money)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.fruits=<span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addFruit</span><span class=\"params\">(String fruit)</span></span>&#123;</span><br><span class=\"line\">\t\tfruits.add(fruit);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\">List <span class=\"title\">getFruits</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (List) fruits.clone();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Gamer类\"><a href=\"#Gamer类\" class=\"headerlink\" title=\"Gamer类\"></a>Gamer类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Memento;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Gamer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> money;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List fruits=<span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Random random=<span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String[] fruitsname=&#123;<span class=\"string\">&quot;苹果&quot;</span>,<span class=\"string\">&quot;葡萄&quot;</span>,<span class=\"string\">&quot;香蕉&quot;</span>,<span class=\"string\">&quot;橘子&quot;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Gamer</span><span class=\"params\">(<span class=\"keyword\">int</span> money)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">bet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dice = random.nextInt(<span class=\"number\">6</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dice==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\tmoney+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金币增加了。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dice==<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\tmoney/=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金币减半。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dice==<span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">\t\t\tString f=getFruit();</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;获得的水果&quot;</span>+f+<span class=\"string\">&quot;)。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;什么都没发生。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Memento <span class=\"title\">createMemento</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tMemento m=<span class=\"keyword\">new</span> Memento(money);</span><br><span class=\"line\">\t\tIterator it=fruits.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tString f=(String)it.next();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(f.startsWith(<span class=\"string\">&quot;好吃的&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\t\tm.addFruit(f);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">restoreMemento</span><span class=\"params\">(Memento memento)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.fruits=memento.getFruits();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[money= &quot;</span>+money+<span class=\"string\">&quot;,fruits= &quot;</span>+fruits+<span class=\"string\">&quot;]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFruit</span><span class=\"params\">()</span></span>&#123; </span><br><span class=\"line\">\t\tString prefix=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(random.nextBoolean())&#123;</span><br><span class=\"line\">\t\t\tprefix=<span class=\"string\">&quot;好吃的&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> prefix+fruitsname[random.nextInt(fruitsname.length)];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Memento;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tGamer gamer=<span class=\"keyword\">new</span> Gamer(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\tMemento memento=gamer.createMemento();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;========&quot;</span>+i);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;当前状态：&quot;</span>+gamer);</span><br><span class=\"line\">\t\t\tgamer.bet(); <span class=\"comment\">//进行游戏</span></span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金钱为&quot;</span>+gamer.getMoney()+<span class=\"string\">&quot;元&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(gamer.getMoney()&gt;memento.getMoney())&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;（所持金钱增加许多，因此保存游戏当前状态）&quot;</span>);</span><br><span class=\"line\">\t\t\t\tmemento=gamer.createMemento();</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (gamer.getMoney()&lt;memento.getMoney()/<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;（所持金钱减少许多，因此要恢复至以前状态）&quot;</span>);</span><br><span class=\"line\">\t\t\t\tgamer.restoreMemento(memento);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>该模式就是实现对象状态的恢复，而设置的。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Memento模式\"><a href=\"#Memento模式\" class=\"headerlink\" title=\"Memento模式\"></a>Memento模式</h1><p><strong>保存对象状态</strong></p>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Memento</td>\n<td>表示Gamer状态的类</td>\n</tr>\n<tr>\n<td>Gamer</td>\n<td>表示游戏主人公的类，他会生成Memento实例</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>进行游戏的类。他会事先保存Memento的实例，之后会根据需要回复Gamer的状态</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"/2018/02/12/Memento_Design_Pattern/Memento_Design_Pattern.png\" alt=\"Memento\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Memento类\"><a href=\"#Memento类\" class=\"headerlink\" title=\"Memento类\"></a>Memento类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sean.AbstractFactory.listfactory.ListLink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Memento</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> money;</span><br><span class=\"line\">\tArrayList fruits;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tMemento(<span class=\"keyword\">int</span> money)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.fruits=<span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addFruit</span><span class=\"params\">(String fruit)</span></span>&#123;</span><br><span class=\"line\">\t\tfruits.add(fruit);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\">List <span class=\"title\">getFruits</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (List) fruits.clone();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Gamer类\"><a href=\"#Gamer类\" class=\"headerlink\" title=\"Gamer类\"></a>Gamer类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Memento;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Gamer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> money;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List fruits=<span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Random random=<span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String[] fruitsname=&#123;<span class=\"string\">&quot;苹果&quot;</span>,<span class=\"string\">&quot;葡萄&quot;</span>,<span class=\"string\">&quot;香蕉&quot;</span>,<span class=\"string\">&quot;橘子&quot;</span>&#125;;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Gamer</span><span class=\"params\">(<span class=\"keyword\">int</span> money)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> money;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">bet</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dice = random.nextInt(<span class=\"number\">6</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dice==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\tmoney+=<span class=\"number\">100</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金币增加了。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dice==<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\tmoney/=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金币减半。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dice==<span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">\t\t\tString f=getFruit();</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;获得的水果&quot;</span>+f+<span class=\"string\">&quot;)。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;什么都没发生。&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Memento <span class=\"title\">createMemento</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tMemento m=<span class=\"keyword\">new</span> Memento(money);</span><br><span class=\"line\">\t\tIterator it=fruits.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tString f=(String)it.next();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(f.startsWith(<span class=\"string\">&quot;好吃的&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\t\tm.addFruit(f);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> m;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">restoreMemento</span><span class=\"params\">(Memento memento)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.money=money;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.fruits=memento.getFruits();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[money= &quot;</span>+money+<span class=\"string\">&quot;,fruits= &quot;</span>+fruits+<span class=\"string\">&quot;]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">getFruit</span><span class=\"params\">()</span></span>&#123; </span><br><span class=\"line\">\t\tString prefix=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(random.nextBoolean())&#123;</span><br><span class=\"line\">\t\t\tprefix=<span class=\"string\">&quot;好吃的&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> prefix+fruitsname[random.nextInt(fruitsname.length)];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Memento;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tGamer gamer=<span class=\"keyword\">new</span> Gamer(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\tMemento memento=gamer.createMemento();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;========&quot;</span>+i);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;当前状态：&quot;</span>+gamer);</span><br><span class=\"line\">\t\t\tgamer.bet(); <span class=\"comment\">//进行游戏</span></span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;所持金钱为&quot;</span>+gamer.getMoney()+<span class=\"string\">&quot;元&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(gamer.getMoney()&gt;memento.getMoney())&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;（所持金钱增加许多，因此保存游戏当前状态）&quot;</span>);</span><br><span class=\"line\">\t\t\t\tmemento=gamer.createMemento();</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (gamer.getMoney()&lt;memento.getMoney()/<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">&quot;（所持金钱减少许多，因此要恢复至以前状态）&quot;</span>);</span><br><span class=\"line\">\t\t\t\tgamer.restoreMemento(memento);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"个人理解\"><a href=\"#个人理解\" class=\"headerlink\" title=\"个人理解\"></a>个人理解</h2><p>该模式就是实现对象状态的恢复，而设置的。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/12/Memento_Design_Pattern/Memento_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Mon Feb 12 2018 18:36:55 GMT+0800 (China Standard Time)","title":"Memento模式","path":"2018/02/12/Memento_Design_Pattern/","eyeCatchImage":"/2018/02/12/Memento_Design_Pattern/Memento_Design_Pattern.png","excerpt":"本文简要叙述了设计模式中的Memento模式。","date":{"_isAMomentObject":true,"_i":"2018-02-12T10:36:55.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-12T10:36:55.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Memento"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2999},{"title":"Myeclipse2017-ci9破解","date":"2018-02-06T20:33:50.000Z","comments":1,"description":"简要描述了Myeclipse2017ci9 破解过程。","_content":"\n\n# Myeclipse2017-ci9破解 windows版\n## 安装jdk\n安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用\n## 下载myeclipse2017ci9及破解文件\n[下载地址](https://pan.baidu.com/s/17KQFLTirCf1GggMz92Qlug) \n密码: 3wsu\n下载完成，进行安装步骤\n## 安装myeclipse\n1.点击安装文件出现下图 点击next\n![Step 1](Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG)\n2. 接受协议 点击next\n![Step 2](Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG)\n3.自己选择安装目录，一定要是空文件夹\n![Step 3](Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG)\n4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next\n![Step 4](Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG)\n5.静静的等待安装\n![Step 5](Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG)\n6.这一步非常重要 取消启动myeclipse 点击finish\n![Step 6](Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG)\n安装完成\n\n## 破解Myeclipse\n1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中\n![Step 7](Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG)\n![Step 8](Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG)\n![Step 9](Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG)\n\n\n2.点击crack.bat 启动破解文件\n![Step 10](Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG)\n\n3. 在Usercode任意输入 选择blue 双击 SystemId  在点击 active\n出现下面内容：\n![Step 11](Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG)\n\n\n4.点击Tools  选择 saveproperties \nok!\n\n5.启动Myeclipse\n![Step 12](Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG)\n\n## 查看是否激活成功\n1.点击help --- SubScription information\n![Step 13](Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG)\n\n### 破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\n","source":"_posts/Myeclipse2017ci9Crack.md","raw":"---\ntitle: Myeclipse2017-ci9破解\ndate: 2018/02/06 20:33:50\ncomments: true\ndescription: 简要描述了Myeclipse2017ci9 破解过程。\ntags:\n\t- crack\n\t- Myeclipse\ncategories:\n\t- soft\n---\n\n\n# Myeclipse2017-ci9破解 windows版\n## 安装jdk\n安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用\n## 下载myeclipse2017ci9及破解文件\n[下载地址](https://pan.baidu.com/s/17KQFLTirCf1GggMz92Qlug) \n密码: 3wsu\n下载完成，进行安装步骤\n## 安装myeclipse\n1.点击安装文件出现下图 点击next\n![Step 1](Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG)\n2. 接受协议 点击next\n![Step 2](Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG)\n3.自己选择安装目录，一定要是空文件夹\n![Step 3](Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG)\n4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next\n![Step 4](Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG)\n5.静静的等待安装\n![Step 5](Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG)\n6.这一步非常重要 取消启动myeclipse 点击finish\n![Step 6](Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG)\n安装完成\n\n## 破解Myeclipse\n1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中\n![Step 7](Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG)\n![Step 8](Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG)\n![Step 9](Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG)\n\n\n2.点击crack.bat 启动破解文件\n![Step 10](Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG)\n\n3. 在Usercode任意输入 选择blue 双击 SystemId  在点击 active\n出现下面内容：\n![Step 11](Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG)\n\n\n4.点击Tools  选择 saveproperties \nok!\n\n5.启动Myeclipse\n![Step 12](Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG)\n\n## 查看是否激活成功\n1.点击help --- SubScription information\n![Step 13](Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG)\n\n### 破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\n","slug":"Myeclipse2017ci9Crack","published":1,"updated":"2018-02-06T20:33:50.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4k000tytcv1a289dx5","content":"<h1 id=\"Myeclipse2017-ci9破解-windows版\"><a href=\"#Myeclipse2017-ci9破解-windows版\" class=\"headerlink\" title=\"Myeclipse2017-ci9破解 windows版\"></a>Myeclipse2017-ci9破解 windows版</h1><h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用</p>\n<h2 id=\"下载myeclipse2017ci9及破解文件\"><a href=\"#下载myeclipse2017ci9及破解文件\" class=\"headerlink\" title=\"下载myeclipse2017ci9及破解文件\"></a>下载myeclipse2017ci9及破解文件</h2><p><a href=\"https://pan.baidu.com/s/17KQFLTirCf1GggMz92Qlug\">下载地址</a><br>密码: 3wsu<br>下载完成，进行安装步骤</p>\n<h2 id=\"安装myeclipse\"><a href=\"#安装myeclipse\" class=\"headerlink\" title=\"安装myeclipse\"></a>安装myeclipse</h2><p>1.点击安装文件出现下图 点击next<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG\" alt=\"Step 1\"><br>2. 接受协议 点击next<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG\" alt=\"Step 2\"><br>3.自己选择安装目录，一定要是空文件夹<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG\" alt=\"Step 3\"><br>4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG\" alt=\"Step 4\"><br>5.静静的等待安装<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG\" alt=\"Step 5\"><br>6.这一步非常重要 取消启动myeclipse 点击finish<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG\" alt=\"Step 6\"><br>安装完成</p>\n<h2 id=\"破解Myeclipse\"><a href=\"#破解Myeclipse\" class=\"headerlink\" title=\"破解Myeclipse\"></a>破解Myeclipse</h2><p>1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG\" alt=\"Step 7\"><br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG\" alt=\"Step 8\"><br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG\" alt=\"Step 9\"></p>\n<p>2.点击crack.bat 启动破解文件<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG\" alt=\"Step 10\"></p>\n<ol start=\"3\">\n<li>在Usercode任意输入 选择blue 双击 SystemId  在点击 active<br>出现下面内容：<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG\" alt=\"Step 11\"></li>\n</ol>\n<p>4.点击Tools  选择 saveproperties<br>ok!</p>\n<p>5.启动Myeclipse<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG\" alt=\"Step 12\"></p>\n<h2 id=\"查看是否激活成功\"><a href=\"#查看是否激活成功\" class=\"headerlink\" title=\"查看是否激活成功\"></a>查看是否激活成功</h2><p>1.点击help — SubScription information<br><img data-src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG\" alt=\"Step 13\"></p>\n<h3 id=\"破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\"><a href=\"#破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\" class=\"headerlink\" title=\"破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\"></a>破解完成，请勿用于商业用途。喜欢请支持正版！！！！！</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Myeclipse2017-ci9破解-windows版\"><a href=\"#Myeclipse2017-ci9破解-windows版\" class=\"headerlink\" title=\"Myeclipse2017-ci9破解 windows版\"></a>Myeclipse2017-ci9破解 windows版</h1><h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>安装jdk时注意安装jdk8及以下版本，避免破解文件无法使用</p>\n<h2 id=\"下载myeclipse2017ci9及破解文件\"><a href=\"#下载myeclipse2017ci9及破解文件\" class=\"headerlink\" title=\"下载myeclipse2017ci9及破解文件\"></a>下载myeclipse2017ci9及破解文件</h2><p><a href=\"https://pan.baidu.com/s/17KQFLTirCf1GggMz92Qlug\">下载地址</a><br>密码: 3wsu<br>下载完成，进行安装步骤</p>\n<h2 id=\"安装myeclipse\"><a href=\"#安装myeclipse\" class=\"headerlink\" title=\"安装myeclipse\"></a>安装myeclipse</h2><p>1.点击安装文件出现下图 点击next<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG\" alt=\"Step 1\"><br>2. 接受协议 点击next<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG\" alt=\"Step 2\"><br>3.自己选择安装目录，一定要是空文件夹<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG\" alt=\"Step 3\"><br>4.根据自己电脑位数选择（目前大多数电脑都是64bit）点击next<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG\" alt=\"Step 4\"><br>5.静静的等待安装<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG\" alt=\"Step 5\"><br>6.这一步非常重要 取消启动myeclipse 点击finish<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG\" alt=\"Step 6\"><br>安装完成</p>\n<h2 id=\"破解Myeclipse\"><a href=\"#破解Myeclipse\" class=\"headerlink\" title=\"破解Myeclipse\"></a>破解Myeclipse</h2><p>1.将破解文件patch全部内容复制到 安装目录的plugins文件夹中<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG\" alt=\"Step 7\"><br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG\" alt=\"Step 8\"><br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG\" alt=\"Step 9\"></p>\n<p>2.点击crack.bat 启动破解文件<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG\" alt=\"Step 10\"></p>\n<ol start=\"3\">\n<li>在Usercode任意输入 选择blue 双击 SystemId  在点击 active<br>出现下面内容：<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG\" alt=\"Step 11\"></li>\n</ol>\n<p>4.点击Tools  选择 saveproperties<br>ok!</p>\n<p>5.启动Myeclipse<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG\" alt=\"Step 12\"></p>\n<h2 id=\"查看是否激活成功\"><a href=\"#查看是否激活成功\" class=\"headerlink\" title=\"查看是否激活成功\"></a>查看是否激活成功</h2><p>1.点击help — SubScription information<br><img src=\"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG\" alt=\"Step 13\"></p>\n<h3 id=\"破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\"><a href=\"#破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\" class=\"headerlink\" title=\"破解完成，请勿用于商业用途。喜欢请支持正版！！！！！\"></a>破解完成，请勿用于商业用途。喜欢请支持正版！！！！！</h3>","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG","popularPost_tmp_gaData":{"updated":"Wed Feb 07 2018 04:33:50 GMT+0800 (China Standard Time)","title":"Myeclipse2017-ci9破解","path":"2018/02/07/Myeclipse2017ci9Crack/","eyeCatchImage":"/2018/02/07/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG","excerpt":"简要描述了Myeclipse2017ci9 破解过程。","date":{"_isAMomentObject":true,"_i":"2018-02-06T20:33:50.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-06T20:33:50.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"soft","tags":["crack","Myeclipse"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":461},{"title":"Observe模式","date":"2018-02-12T12:38:23.000Z","comments":1,"description":"本文简要讲述了设计模式中的Observe模式。","_content":"\n# Observe模式\n在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。\n\n---\n\n## 类和接口的表\n| 名字 | 说明 |\n|--------|--------|\n| Observer | 表示观察者接口 |\n| NumberGenerator | 表示生成数值的对象的抽象类 |\n| RandomNumberGenerator | 生成随机数的类 |\n| DigitObserver | 表示以数字形式显示数值类 |\n| GraphObserver | 表示以简单的图形显示数值类 |\n| Main | 测试程序行为的类 |\n\n## 程序类图\n\n![Observer](Observe_Design_Pattern/Observe_Design_Pattern.png)\n\n## 代码\n### Observer接口(定义抽象方法)\n``` java\npackage com.sean.Observer;\n\npublic interface Observer {\n\tpublic abstract void update(NumberGenerator generator);\n}\n```\n\n### NumberGenerator抽象类\n``` java\npackage com.sean.Observer;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\npublic abstract class NumberGenerator {\n\tprivate ArrayList observers = new ArrayList();\n\tpublic void addObserver(Observer observer){\n\t\tobservers.add(observer);\n\t}\n\tpublic void deleteObserver(Observer observer){\n\t\tobservers.remove(observer);\n\t}\n\tpublic void notifyObservers(){\n\t\tIterator it=observers.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tObserver o=(Observer) it.next();\n\t\t\to.update(this);\n\t\t}\t\n\t}\n\tpublic abstract int getNumber();\n\tpublic abstract void exeute();\n}\n\n```\n\n###  DigitObserver具体的观察者\n\n``` java\npackage com.sean.Observer;\n\npublic class DigitObserver implements Observer {\n\t\n\tpublic void update(NumberGenerator generator) {\n\t\tSystem.out.println(\"DigitObserver：\"+generator.getNumber());\n\t\ttry{\n\t\t\tThread.sleep(100);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n\n```\n\n### GraphObserver具体的观察者\n\n``` java\npackage com.sean.Observer;\n\npublic class GraphObserver implements Observer {\n\n\tpublic void update(NumberGenerator generator) {\n\t\tSystem.out.println(\"GraphObserver:\");\n\t\tint count = generator.getNumber();\n\t\tfor(int i=0;i<count;i++){\n\t\t\tSystem.out.print(\"*\");\n\t\t}\n\t\tSystem.out.println(\"\");\n\t\ttry{\n\t\t\tThread.sleep(100);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n}\n\n```\n### RandomNumberGenerator具体的被观察对象 \n\n``` java\npackage com.sean.Observer;\n\nimport java.util.Random;\n\npublic class RandomNumberGenerator extends NumberGenerator {\n\tprivate Random random= new Random();\n\tprivate int number;\n\t@Override\n\tpublic int getNumber() {\n\t\t\n\t\treturn number;\n\t}\n\n\t@Override\n\tpublic void exeute() {\n\t\tfor(int i=0;i<20;i++){\n\t\t\tnumber=random.nextInt(50);\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n}\n\n```\n### 测试方法\n``` java\nackage com.sean.Observer;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tNumberGenerator generator=new RandomNumberGenerator();\n\t\tObserver observer1=new DigitObserver();\n\t\tObserver observer2=new GraphObserver();\n\t\tgenerator.addObserver(observer1);\n\t\tgenerator.addObserver(observer2);\n\t\tgenerator.exeute();\n\n\t}\n\n}\n\n```\n## 要点\nObserver角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。\n \n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Observe_Design_Pattern.md","raw":"---\ntitle: Observe模式\ndate: 2018/02/12 12:38:23\ncomments: true\ndescription: 本文简要讲述了设计模式中的Observe模式。\ntags:\n\t- Observe\ncategories:\n\t- DesignPattern\n---\n\n# Observe模式\n在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。\n\n---\n\n## 类和接口的表\n| 名字 | 说明 |\n|--------|--------|\n| Observer | 表示观察者接口 |\n| NumberGenerator | 表示生成数值的对象的抽象类 |\n| RandomNumberGenerator | 生成随机数的类 |\n| DigitObserver | 表示以数字形式显示数值类 |\n| GraphObserver | 表示以简单的图形显示数值类 |\n| Main | 测试程序行为的类 |\n\n## 程序类图\n\n![Observer](Observe_Design_Pattern/Observe_Design_Pattern.png)\n\n## 代码\n### Observer接口(定义抽象方法)\n``` java\npackage com.sean.Observer;\n\npublic interface Observer {\n\tpublic abstract void update(NumberGenerator generator);\n}\n```\n\n### NumberGenerator抽象类\n``` java\npackage com.sean.Observer;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\npublic abstract class NumberGenerator {\n\tprivate ArrayList observers = new ArrayList();\n\tpublic void addObserver(Observer observer){\n\t\tobservers.add(observer);\n\t}\n\tpublic void deleteObserver(Observer observer){\n\t\tobservers.remove(observer);\n\t}\n\tpublic void notifyObservers(){\n\t\tIterator it=observers.iterator();\n\t\twhile(it.hasNext()){\n\t\t\tObserver o=(Observer) it.next();\n\t\t\to.update(this);\n\t\t}\t\n\t}\n\tpublic abstract int getNumber();\n\tpublic abstract void exeute();\n}\n\n```\n\n###  DigitObserver具体的观察者\n\n``` java\npackage com.sean.Observer;\n\npublic class DigitObserver implements Observer {\n\t\n\tpublic void update(NumberGenerator generator) {\n\t\tSystem.out.println(\"DigitObserver：\"+generator.getNumber());\n\t\ttry{\n\t\t\tThread.sleep(100);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}\n\n```\n\n### GraphObserver具体的观察者\n\n``` java\npackage com.sean.Observer;\n\npublic class GraphObserver implements Observer {\n\n\tpublic void update(NumberGenerator generator) {\n\t\tSystem.out.println(\"GraphObserver:\");\n\t\tint count = generator.getNumber();\n\t\tfor(int i=0;i<count;i++){\n\t\t\tSystem.out.print(\"*\");\n\t\t}\n\t\tSystem.out.println(\"\");\n\t\ttry{\n\t\t\tThread.sleep(100);\n\t\t}catch(InterruptedException e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n}\n\n```\n### RandomNumberGenerator具体的被观察对象 \n\n``` java\npackage com.sean.Observer;\n\nimport java.util.Random;\n\npublic class RandomNumberGenerator extends NumberGenerator {\n\tprivate Random random= new Random();\n\tprivate int number;\n\t@Override\n\tpublic int getNumber() {\n\t\t\n\t\treturn number;\n\t}\n\n\t@Override\n\tpublic void exeute() {\n\t\tfor(int i=0;i<20;i++){\n\t\t\tnumber=random.nextInt(50);\n\t\t\tnotifyObservers();\n\t\t}\n\t}\n\n}\n\n```\n### 测试方法\n``` java\nackage com.sean.Observer;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tNumberGenerator generator=new RandomNumberGenerator();\n\t\tObserver observer1=new DigitObserver();\n\t\tObserver observer2=new GraphObserver();\n\t\tgenerator.addObserver(observer1);\n\t\tgenerator.addObserver(observer2);\n\t\tgenerator.exeute();\n\n\t}\n\n}\n\n```\n## 要点\nObserver角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。\n \n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Observe_Design_Pattern","published":1,"updated":"2018-02-12T12:38:23.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4m000xytcvg18lgddm","content":"<h1 id=\"Observe模式\"><a href=\"#Observe模式\" class=\"headerlink\" title=\"Observe模式\"></a>Observe模式</h1><p>在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。</p>\n<hr>\n<h2 id=\"类和接口的表\"><a href=\"#类和接口的表\" class=\"headerlink\" title=\"类和接口的表\"></a>类和接口的表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Observer</td>\n<td>表示观察者接口</td>\n</tr>\n<tr>\n<td>NumberGenerator</td>\n<td>表示生成数值的对象的抽象类</td>\n</tr>\n<tr>\n<td>RandomNumberGenerator</td>\n<td>生成随机数的类</td>\n</tr>\n<tr>\n<td>DigitObserver</td>\n<td>表示以数字形式显示数值类</td>\n</tr>\n<tr>\n<td>GraphObserver</td>\n<td>表示以简单的图形显示数值类</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"程序类图\"><a href=\"#程序类图\" class=\"headerlink\" title=\"程序类图\"></a>程序类图</h2><p><img data-src=\"/2018/02/12/Observe_Design_Pattern/Observe_Design_Pattern.png\" alt=\"Observer\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Observer接口-定义抽象方法\"><a href=\"#Observer接口-定义抽象方法\" class=\"headerlink\" title=\"Observer接口(定义抽象方法)\"></a>Observer接口(定义抽象方法)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NumberGenerator抽象类\"><a href=\"#NumberGenerator抽象类\" class=\"headerlink\" title=\"NumberGenerator抽象类\"></a>NumberGenerator抽象类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumberGenerator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList observers = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addObserver</span><span class=\"params\">(Observer observer)</span></span>&#123;</span><br><span class=\"line\">\t\tobservers.add(observer);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteObserver</span><span class=\"params\">(Observer observer)</span></span>&#123;</span><br><span class=\"line\">\t\tobservers.remove(observer);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">notifyObservers</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tIterator it=observers.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tObserver o=(Observer) it.next();</span><br><span class=\"line\">\t\t\to.update(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumber</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">exeute</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DigitObserver具体的观察者\"><a href=\"#DigitObserver具体的观察者\" class=\"headerlink\" title=\"DigitObserver具体的观察者\"></a>DigitObserver具体的观察者</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DigitObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;DigitObserver：&quot;</span>+generator.getNumber());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"GraphObserver具体的观察者\"><a href=\"#GraphObserver具体的观察者\" class=\"headerlink\" title=\"GraphObserver具体的观察者\"></a>GraphObserver具体的观察者</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GraphObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;GraphObserver:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count = generator.getNumber();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"RandomNumberGenerator具体的被观察对象\"><a href=\"#RandomNumberGenerator具体的被观察对象\" class=\"headerlink\" title=\"RandomNumberGenerator具体的被观察对象\"></a>RandomNumberGenerator具体的被观察对象</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RandomNumberGenerator</span> <span class=\"keyword\">extends</span> <span class=\"title\">NumberGenerator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Random random= <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumber</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> number;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exeute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tnumber=random.nextInt(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t\tnotifyObservers();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"测试方法\"><a href=\"#测试方法\" class=\"headerlink\" title=\"测试方法\"></a>测试方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ackage com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tNumberGenerator generator=<span class=\"keyword\">new</span> RandomNumberGenerator();</span><br><span class=\"line\">\t\tObserver observer1=<span class=\"keyword\">new</span> DigitObserver();</span><br><span class=\"line\">\t\tObserver observer2=<span class=\"keyword\">new</span> GraphObserver();</span><br><span class=\"line\">\t\tgenerator.addObserver(observer1);</span><br><span class=\"line\">\t\tgenerator.addObserver(observer2);</span><br><span class=\"line\">\t\tgenerator.exeute();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Observer角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Observe模式\"><a href=\"#Observe模式\" class=\"headerlink\" title=\"Observe模式\"></a>Observe模式</h1><p>在Observe模式中，当观察对象的状态发生变化，会通知给观察者。Observe模式适用于根据对象状态进行相应的处理场景。</p>\n<hr>\n<h2 id=\"类和接口的表\"><a href=\"#类和接口的表\" class=\"headerlink\" title=\"类和接口的表\"></a>类和接口的表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Observer</td>\n<td>表示观察者接口</td>\n</tr>\n<tr>\n<td>NumberGenerator</td>\n<td>表示生成数值的对象的抽象类</td>\n</tr>\n<tr>\n<td>RandomNumberGenerator</td>\n<td>生成随机数的类</td>\n</tr>\n<tr>\n<td>DigitObserver</td>\n<td>表示以数字形式显示数值类</td>\n</tr>\n<tr>\n<td>GraphObserver</td>\n<td>表示以简单的图形显示数值类</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"程序类图\"><a href=\"#程序类图\" class=\"headerlink\" title=\"程序类图\"></a>程序类图</h2><p><img src=\"/2018/02/12/Observe_Design_Pattern/Observe_Design_Pattern.png\" alt=\"Observer\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Observer接口-定义抽象方法\"><a href=\"#Observer接口-定义抽象方法\" class=\"headerlink\" title=\"Observer接口(定义抽象方法)\"></a>Observer接口(定义抽象方法)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NumberGenerator抽象类\"><a href=\"#NumberGenerator抽象类\" class=\"headerlink\" title=\"NumberGenerator抽象类\"></a>NumberGenerator抽象类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NumberGenerator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList observers = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addObserver</span><span class=\"params\">(Observer observer)</span></span>&#123;</span><br><span class=\"line\">\t\tobservers.add(observer);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteObserver</span><span class=\"params\">(Observer observer)</span></span>&#123;</span><br><span class=\"line\">\t\tobservers.remove(observer);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">notifyObservers</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tIterator it=observers.iterator();</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(it.hasNext())&#123;</span><br><span class=\"line\">\t\t\tObserver o=(Observer) it.next();</span><br><span class=\"line\">\t\t\to.update(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumber</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">exeute</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DigitObserver具体的观察者\"><a href=\"#DigitObserver具体的观察者\" class=\"headerlink\" title=\"DigitObserver具体的观察者\"></a>DigitObserver具体的观察者</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DigitObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;DigitObserver：&quot;</span>+generator.getNumber());</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"GraphObserver具体的观察者\"><a href=\"#GraphObserver具体的观察者\" class=\"headerlink\" title=\"GraphObserver具体的观察者\"></a>GraphObserver具体的观察者</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GraphObserver</span> <span class=\"keyword\">implements</span> <span class=\"title\">Observer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(NumberGenerator generator)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;GraphObserver:&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count = generator.getNumber();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"RandomNumberGenerator具体的被观察对象\"><a href=\"#RandomNumberGenerator具体的被观察对象\" class=\"headerlink\" title=\"RandomNumberGenerator具体的被观察对象\"></a>RandomNumberGenerator具体的被观察对象</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RandomNumberGenerator</span> <span class=\"keyword\">extends</span> <span class=\"title\">NumberGenerator</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Random random= <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> number;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumber</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> number;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">exeute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tnumber=random.nextInt(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t\t\tnotifyObservers();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"测试方法\"><a href=\"#测试方法\" class=\"headerlink\" title=\"测试方法\"></a>测试方法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ackage com.sean.Observer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tNumberGenerator generator=<span class=\"keyword\">new</span> RandomNumberGenerator();</span><br><span class=\"line\">\t\tObserver observer1=<span class=\"keyword\">new</span> DigitObserver();</span><br><span class=\"line\">\t\tObserver observer2=<span class=\"keyword\">new</span> GraphObserver();</span><br><span class=\"line\">\t\tgenerator.addObserver(observer1);</span><br><span class=\"line\">\t\tgenerator.addObserver(observer2);</span><br><span class=\"line\">\t\tgenerator.exeute();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Observer角色并非主动去观察，而是被动去观察，被动的接受观察对象的通知。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/12/Observe_Design_Pattern/Observe_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Mon Feb 12 2018 20:38:23 GMT+0800 (China Standard Time)","title":"Observe模式","path":"2018/02/12/Observe_Design_Pattern/","eyeCatchImage":"/2018/02/12/Observe_Design_Pattern/Observe_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的Observe模式。","date":{"_isAMomentObject":true,"_i":"2018-02-12T12:38:23.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-12T12:38:23.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Observe"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2586},{"title":"Proxy模式","date":"2018-02-13T20:39:35.000Z","comments":1,"description":"本文简要讲述了设计模式中的Proxy模式。","_content":"\n# Proxy模式\n\n**只在必要时生成实例**\n\n---\n\n## 类表\n\n| 名字 | 说明 |\n|--------|--------|\n| Printer | 表示带名字的打印机类(本人) |\n| Printable | Printer和PrinterProxy的共同接口 |\n| PrinterProxy | 表示带名字的打印机类(代理人) |\n| Main | 测试程序行为的类 |\n\n\n## 类图\n\n![Proxy](Proxy_Design_Pattern/Proxy_Design_Pattern.png)\n\n## 代码\n### Printable接口\n``` java\npackage com.sean.Proxy;\n\npublic interface Printable {\n\n\tpublic abstract void setPrinterName(String name);\n\tpublic abstract String getPrintName();\n\tpublic abstract void print(String string);\n}\n\n```\n### Printer\n``` java\npackage com.sean.Proxy;\n\npublic class Printer implements Printable {\n\tprivate String name;\n\tpublic Printer(){\n\t\t\n\t}\n\tpublic Printer(String name){\n\t\tthis.name=name;\n\t\theavyJob(\"正在生成Printer实例（\"+name+\")\");\n\t}\n\tpublic void setPrinterName(String name) {\n\t\tthis.name=name;\n\n\t}\n\n\tpublic String getPrintName() {\n\t\t\n\t\treturn name;\n\t}\n\n\tpublic void print(String string) {\n\t\tSystem.out.println(\"====\"+name+\"====\");\n\t\tSystem.out.println(string);\n\n\t}\n\tpublic void heavyJob(String msg){\n\t\tSystem.out.print(msg);\n\t\tfor(int i=0;i<5;i++){\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}catch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.print(\".\");\n\t\t}\n\t\tSystem.out.println(\"结束。\");\n\t}\n\n}\n\n```\n### PrinterProxy\n``` java\npackage com.sean.Proxy;\n\npublic class PrinterProxy implements Printable {\n\tprivate String name;\n\tprivate Printer real;\n\tpublic PrinterProxy(){\n\t\t\n\t}\n\tpublic PrinterProxy(String name){\n\t\tthis.name=name;\n\t}\n\tpublic synchronized void setPrinterName(String name) {\n\t\t\n\t\t\tif(real!=null){\n\t\t\t\treal.setPrinterName(name);\n\t\t\t}\n\t\t\tthis.name=name;\n\t}\n\n\tpublic String getPrintName() {\n\t\t\n\t\treturn name;\n\t}\n\n\tpublic void print(String string) {\n\t\trealize();\n\t\treal.print(string);\n\n\t}\n\tpublic synchronized void realize(){\n\t\tif(real==null){\n\t\t\treal=new Printer(name);\n\t\t}\n\t}\n\n}\n```\n### Main\n``` java\npackage com.sean.Proxy;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tPrintable p=new PrinterProxy(\"Alice\");\n\t\tSystem.out.println(\"现在的名字是\"+p.getPrintName()+\"。\");\n\t\tp.setPrinterName(\"Bob\");\n\t\tSystem.out.println(\"现在的名字是\"+p.getPrintName()+\"。\");\n\t\tp.print(\"Hello,world!\");\n\n\t}\n\n}\n```\n\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/Proxy_Design_Pattern.md","raw":"---\ntitle: Proxy模式\ndate: 2018/02/13 20:39:35\ncomments: true\ndescription: 本文简要讲述了设计模式中的Proxy模式。\ntags:\n\t- Proxy\ncategories:\n\t- DesignPattern\n---\n\n# Proxy模式\n\n**只在必要时生成实例**\n\n---\n\n## 类表\n\n| 名字 | 说明 |\n|--------|--------|\n| Printer | 表示带名字的打印机类(本人) |\n| Printable | Printer和PrinterProxy的共同接口 |\n| PrinterProxy | 表示带名字的打印机类(代理人) |\n| Main | 测试程序行为的类 |\n\n\n## 类图\n\n![Proxy](Proxy_Design_Pattern/Proxy_Design_Pattern.png)\n\n## 代码\n### Printable接口\n``` java\npackage com.sean.Proxy;\n\npublic interface Printable {\n\n\tpublic abstract void setPrinterName(String name);\n\tpublic abstract String getPrintName();\n\tpublic abstract void print(String string);\n}\n\n```\n### Printer\n``` java\npackage com.sean.Proxy;\n\npublic class Printer implements Printable {\n\tprivate String name;\n\tpublic Printer(){\n\t\t\n\t}\n\tpublic Printer(String name){\n\t\tthis.name=name;\n\t\theavyJob(\"正在生成Printer实例（\"+name+\")\");\n\t}\n\tpublic void setPrinterName(String name) {\n\t\tthis.name=name;\n\n\t}\n\n\tpublic String getPrintName() {\n\t\t\n\t\treturn name;\n\t}\n\n\tpublic void print(String string) {\n\t\tSystem.out.println(\"====\"+name+\"====\");\n\t\tSystem.out.println(string);\n\n\t}\n\tpublic void heavyJob(String msg){\n\t\tSystem.out.print(msg);\n\t\tfor(int i=0;i<5;i++){\n\t\t\ttry{\n\t\t\t\tThread.sleep(1000);\n\t\t\t}catch(InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.print(\".\");\n\t\t}\n\t\tSystem.out.println(\"结束。\");\n\t}\n\n}\n\n```\n### PrinterProxy\n``` java\npackage com.sean.Proxy;\n\npublic class PrinterProxy implements Printable {\n\tprivate String name;\n\tprivate Printer real;\n\tpublic PrinterProxy(){\n\t\t\n\t}\n\tpublic PrinterProxy(String name){\n\t\tthis.name=name;\n\t}\n\tpublic synchronized void setPrinterName(String name) {\n\t\t\n\t\t\tif(real!=null){\n\t\t\t\treal.setPrinterName(name);\n\t\t\t}\n\t\t\tthis.name=name;\n\t}\n\n\tpublic String getPrintName() {\n\t\t\n\t\treturn name;\n\t}\n\n\tpublic void print(String string) {\n\t\trealize();\n\t\treal.print(string);\n\n\t}\n\tpublic synchronized void realize(){\n\t\tif(real==null){\n\t\t\treal=new Printer(name);\n\t\t}\n\t}\n\n}\n```\n### Main\n``` java\npackage com.sean.Proxy;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tPrintable p=new PrinterProxy(\"Alice\");\n\t\tSystem.out.println(\"现在的名字是\"+p.getPrintName()+\"。\");\n\t\tp.setPrinterName(\"Bob\");\n\t\tSystem.out.println(\"现在的名字是\"+p.getPrintName()+\"。\");\n\t\tp.print(\"Hello,world!\");\n\n\t}\n\n}\n```\n\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"Proxy_Design_Pattern","published":1,"updated":"2018-02-13T20:39:35.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4n0010ytcv9ipr3uhd","content":"<h1 id=\"Proxy模式\"><a href=\"#Proxy模式\" class=\"headerlink\" title=\"Proxy模式\"></a>Proxy模式</h1><p><strong>只在必要时生成实例</strong></p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Printer</td>\n<td>表示带名字的打印机类(本人)</td>\n</tr>\n<tr>\n<td>Printable</td>\n<td>Printer和PrinterProxy的共同接口</td>\n</tr>\n<tr>\n<td>PrinterProxy</td>\n<td>表示带名字的打印机类(代理人)</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img data-src=\"/2018/02/14/Proxy_Design_Pattern/Proxy_Design_Pattern.png\" alt=\"Proxy\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Printable接口\"><a href=\"#Printable接口\" class=\"headerlink\" title=\"Printable接口\"></a>Printable接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Printer\"><a href=\"#Printer\" class=\"headerlink\" title=\"Printer\"></a>Printer</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Printer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Printer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Printer</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t\theavyJob(<span class=\"string\">&quot;正在生成Printer实例（&quot;</span>+name+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;====&quot;</span>+name+<span class=\"string\">&quot;====&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">heavyJob</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(msg);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束。&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"PrinterProxy\"><a href=\"#PrinterProxy\" class=\"headerlink\" title=\"PrinterProxy\"></a>PrinterProxy</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrinterProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Printer real;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrinterProxy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrinterProxy</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(real!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\treal.setPrinterName(name);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span> </span>&#123;</span><br><span class=\"line\">\t\trealize();</span><br><span class=\"line\">\t\treal.print(string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">realize</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(real==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\treal=<span class=\"keyword\">new</span> Printer(name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPrintable p=<span class=\"keyword\">new</span> PrinterProxy(<span class=\"string\">&quot;Alice&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class=\"string\">&quot;。&quot;</span>);</span><br><span class=\"line\">\t\tp.setPrinterName(<span class=\"string\">&quot;Bob&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class=\"string\">&quot;。&quot;</span>);</span><br><span class=\"line\">\t\tp.print(<span class=\"string\">&quot;Hello,world!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Proxy模式\"><a href=\"#Proxy模式\" class=\"headerlink\" title=\"Proxy模式\"></a>Proxy模式</h1><p><strong>只在必要时生成实例</strong></p>\n<hr>\n<h2 id=\"类表\"><a href=\"#类表\" class=\"headerlink\" title=\"类表\"></a>类表</h2><table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Printer</td>\n<td>表示带名字的打印机类(本人)</td>\n</tr>\n<tr>\n<td>Printable</td>\n<td>Printer和PrinterProxy的共同接口</td>\n</tr>\n<tr>\n<td>PrinterProxy</td>\n<td>表示带名字的打印机类(代理人)</td>\n</tr>\n<tr>\n<td>Main</td>\n<td>测试程序行为的类</td>\n</tr>\n</tbody></table>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"/2018/02/14/Proxy_Design_Pattern/Proxy_Design_Pattern.png\" alt=\"Proxy\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"Printable接口\"><a href=\"#Printable接口\" class=\"headerlink\" title=\"Printable接口\"></a>Printable接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Printer\"><a href=\"#Printer\" class=\"headerlink\" title=\"Printer\"></a>Printer</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Printer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Printer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Printer</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t\theavyJob(<span class=\"string\">&quot;正在生成Printer实例（&quot;</span>+name+<span class=\"string\">&quot;)&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;====&quot;</span>+name+<span class=\"string\">&quot;====&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">heavyJob</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(msg);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束。&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"PrinterProxy\"><a href=\"#PrinterProxy\" class=\"headerlink\" title=\"PrinterProxy\"></a>PrinterProxy</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PrinterProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Printable</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Printer real;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrinterProxy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PrinterProxy</span><span class=\"params\">(String name)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrinterName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(real!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\treal.setPrinterName(name);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPrintName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String string)</span> </span>&#123;</span><br><span class=\"line\">\t\trealize();</span><br><span class=\"line\">\t\treal.print(string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">realize</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(real==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\treal=<span class=\"keyword\">new</span> Printer(name);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.Proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPrintable p=<span class=\"keyword\">new</span> PrinterProxy(<span class=\"string\">&quot;Alice&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class=\"string\">&quot;。&quot;</span>);</span><br><span class=\"line\">\t\tp.setPrinterName(<span class=\"string\">&quot;Bob&quot;</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;现在的名字是&quot;</span>+p.getPrintName()+<span class=\"string\">&quot;。&quot;</span>);</span><br><span class=\"line\">\t\tp.print(<span class=\"string\">&quot;Hello,world!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/14/Proxy_Design_Pattern/Proxy_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Wed Feb 14 2018 04:39:35 GMT+0800 (China Standard Time)","title":"Proxy模式","path":"2018/02/14/Proxy_Design_Pattern/","eyeCatchImage":"/2018/02/14/Proxy_Design_Pattern/Proxy_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的Proxy模式。","date":{"_isAMomentObject":true,"_i":"2018-02-13T20:39:35.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-13T20:39:35.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["Proxy"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2186},{"title":"State模式","date":"2018-02-12T08:40:55.000Z","comments":1,"description":"本文简要讲述了设计模式中的State模式。","_content":"\n# State模式\n用类表示状态\n\n***\n## 类图\n有点复杂！但只有部分是自己写的，其他是java类库内的类。\n\n![State](State_Design_Pattern/State_Design_Pattern_complex.png)\n\n粗略简单一点的类图\n![State](State_Design_Pattern/State_Design_Pattern_simple.png)\n\n\n## 代码\n###  State\n``` java\npackage com.sean.State;\n\npublic interface State {\n\t\n\tpublic abstract void doClock(Context context,int hour);\n\tpublic abstract void doUse(Context context);\n\tpublic abstract void doAlarm(Context context);\n\tpublic abstract void doPhone(Context context);\n}\n```\n\n### NightState(具体的状态)\n\n``` java\npackage com.sean.State;\n\npublic class NightState implements State {\n\n\tprivate static NightState singleton = new NightState();\n\tprivate NightState(){\n\t\t\n\t}\n\tpublic static State getInstance(){\n\t\treturn singleton;\n\t}\n\tpublic void doClock(Context context, int hour) {\n\t\tif(9<=hour || hour<17){\n\t\t\tcontext.changeState(DayState.getInstance());\n\t\t}\n\n\t}\n\n\tpublic void doUse(Context context) {\n\t\t\n\t\tcontext.callSecurityCenter(\"紧急！晚上使用金库！\");\n\t}\n\n\tpublic void doAlarm(Context context) {\n\t\tcontext.callSecurityCenter(\"按下警铃（晚上）\");\n\n\t}\n\n\tpublic void doPhone(Context context) {\n\t\tcontext.callSecurityCenter(\"晚上通话录音\");\n\t}\n\tpublic String toString(){\n\t\treturn \"[晚上]\";\n\t}\n\n}\n\n```\n\n### DayState(具体的状态)\n``` java\npackage com.sean.State;\n\npublic class DayState implements State {\n\n\tprivate static DayState singleton = new DayState();\n\tprivate DayState(){\n\t\t\n\t}\n\tpublic static State getInstance(){\n\t\treturn singleton;\n\t}\n\tpublic void doClock(Context context, int hour) {\n\t\tif(hour<9 || 17<=hour){\n\t\t\tcontext.changeState(NightState.getInstance());\n\t\t}\n\t}\n\n\tpublic void doUse(Context context) {\n\t\tcontext.recordLog(\"使用金库（白天）\");\n\n\t}\n\n\tpublic void doAlarm(Context context) {\n\t\tcontext.callSecurityCenter(\"按下警铃（白天）\");\n\n\t}\n\n\tpublic void doPhone(Context context) {\n\t\tcontext.callSecurityCenter(\"正常通话（白天）\");\n\n\t}\n\t\n\tpublic String toString(){\n\t\treturn \"[白天]\";\n\t}\n}\n\n```\n### Context\n``` java\npackage com.sean.State;\n\npublic interface Context {\n\tpublic abstract void setClock(int hour);\n\tpublic abstract State changeState(State state);\n\tpublic abstract void callSecurityCenter(String msg);\n\tpublic abstract void recordLog(String msg);\n}\n\n```\n\n### SafeFrame\n``` java\npackage com.sean.State;\n\nimport java.awt.BorderLayout;\nimport java.awt.Button;\nimport java.awt.Color;\nimport java.awt.Frame;\nimport java.awt.Panel;\nimport java.awt.TextArea;\nimport java.awt.TextField;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class SafeFrame extends Frame implements ActionListener, Context {\n\t\n\tprivate TextField textClock = new TextField(60);\n\tprivate TextArea textScreen=new TextArea(10,60);\n\tprivate Button buttonUse=new Button(\"使用金库\");\n\tprivate Button buttonAlarm=new Button(\"按下警铃\");\n\tprivate Button buttonPhone=new Button(\"正常通话\");\n\tprivate Button buttonExit=new Button(\"结束\");\n\tprivate State state=DayState.getInstance();\n\t//构造函数\n\tpublic SafeFrame(String title){\n\t\tsuper(title);\n\t\tsetBackground(Color.lightGray);\n\t\tsetLayout(new BorderLayout());\n\t\t//配置textClock\n\t\tadd(textClock,BorderLayout.NORTH);\n\t\ttextClock.setEditable(false);\n\t\t//配置textScreen\n\t\tadd(textScreen,BorderLayout.CENTER);\n\t\ttextScreen.setEditable(false);\n\t\t//为界面添加按钮\n\t\tPanel panel=new Panel();\n\t\tpanel.add(buttonUse);\n\t\tpanel.add(buttonAlarm);\n\t\tpanel.add(buttonPhone);\n\t\tpanel.add(buttonExit);\n\t\t//配置界面\n\t\tadd(panel,BorderLayout.SOUTH);\n\t\t//显示\n\t\tpack();\n\t\tshow();\n\t\t//设置监听器\n\t\tbuttonUse.addActionListener(this);\n\t\tbuttonAlarm.addActionListener(this);\n\t\tbuttonPhone.addActionListener(this);\n\t\tbuttonExit.addActionListener(this);\n\t}\n\tpublic void setClock(int hour) {\n\t\tString clockstring=\"现在时间是:\";\n\t\tif(hour<10){\n\t\t\tclockstring+=\"0\"+hour+\":00\";\n\t\t}else {\n\t\t\tclockstring+=hour+\":00\";\n\t\t}\n\t\tSystem.out.println(clockstring);\n\t\ttextClock.setText(clockstring);\n\t\tstate.doClock(this, hour);\n\t}\n\n\tpublic State changeState(State state) {\n        System.out.println(\"从\"+this.state+\"状态变为了\"+state+\"状态\");\n\t\tthis.state=state;\t\n\t\treturn state;\n\t}\n\n\tpublic void callSecurityCenter(String msg) {\n\t\ttextScreen.append(\"Call!\"+msg+\"\\n\");\n\n\t}\n\n\tpublic void recordLog(String msg) {\n\t\ttextScreen.append(\"record ... \"+msg+\"\\n\");\n\n\t}\n\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tSystem.out.println(e.toString());\n\t\tif(e.getSource()==buttonUse){\n\t\t\tstate.doUse(this);\n\t\t}else if (e.getSource()==buttonAlarm) {\n\t\t\tstate.doAlarm(this);\n\t\t}else if (e.getSource()==buttonPhone) {\n\t\t\tstate.doPhone(this);\n\t\t}else if (e.getSource()== buttonExit) {\n\t\t\tSystem.exit(0);\n\t\t}else {\n\t\t\tSystem.out.println(\"?\");\n\t\t}\n\n\t}\n\n}\n\n```\n\n### Main\n\n``` java\npackage com.sean.State;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tSafeFrame frame=new SafeFrame(\"state module\");\n\t\twhile(true){\n\t\t\tfor(int hour=0;hour<24;hour++){\n\t\t\t\tframe.setClock(hour);\t//设置时间\n\t\t\t\ttry{\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}catch(InterruptedException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n```\n## 要点\n采用分而治之方针。\n**定义接口，声明抽象方法**\n**定义多个类，实现具体的方法**\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/State_Design_Pattern.md","raw":"---\ntitle: State模式\ndate: 2018/02/12 8:40:55\ncomments: true\ndescription: 本文简要讲述了设计模式中的State模式。\ntags:\n\t- state\ncategories:\n\t- DesignPattern\n---\n\n# State模式\n用类表示状态\n\n***\n## 类图\n有点复杂！但只有部分是自己写的，其他是java类库内的类。\n\n![State](State_Design_Pattern/State_Design_Pattern_complex.png)\n\n粗略简单一点的类图\n![State](State_Design_Pattern/State_Design_Pattern_simple.png)\n\n\n## 代码\n###  State\n``` java\npackage com.sean.State;\n\npublic interface State {\n\t\n\tpublic abstract void doClock(Context context,int hour);\n\tpublic abstract void doUse(Context context);\n\tpublic abstract void doAlarm(Context context);\n\tpublic abstract void doPhone(Context context);\n}\n```\n\n### NightState(具体的状态)\n\n``` java\npackage com.sean.State;\n\npublic class NightState implements State {\n\n\tprivate static NightState singleton = new NightState();\n\tprivate NightState(){\n\t\t\n\t}\n\tpublic static State getInstance(){\n\t\treturn singleton;\n\t}\n\tpublic void doClock(Context context, int hour) {\n\t\tif(9<=hour || hour<17){\n\t\t\tcontext.changeState(DayState.getInstance());\n\t\t}\n\n\t}\n\n\tpublic void doUse(Context context) {\n\t\t\n\t\tcontext.callSecurityCenter(\"紧急！晚上使用金库！\");\n\t}\n\n\tpublic void doAlarm(Context context) {\n\t\tcontext.callSecurityCenter(\"按下警铃（晚上）\");\n\n\t}\n\n\tpublic void doPhone(Context context) {\n\t\tcontext.callSecurityCenter(\"晚上通话录音\");\n\t}\n\tpublic String toString(){\n\t\treturn \"[晚上]\";\n\t}\n\n}\n\n```\n\n### DayState(具体的状态)\n``` java\npackage com.sean.State;\n\npublic class DayState implements State {\n\n\tprivate static DayState singleton = new DayState();\n\tprivate DayState(){\n\t\t\n\t}\n\tpublic static State getInstance(){\n\t\treturn singleton;\n\t}\n\tpublic void doClock(Context context, int hour) {\n\t\tif(hour<9 || 17<=hour){\n\t\t\tcontext.changeState(NightState.getInstance());\n\t\t}\n\t}\n\n\tpublic void doUse(Context context) {\n\t\tcontext.recordLog(\"使用金库（白天）\");\n\n\t}\n\n\tpublic void doAlarm(Context context) {\n\t\tcontext.callSecurityCenter(\"按下警铃（白天）\");\n\n\t}\n\n\tpublic void doPhone(Context context) {\n\t\tcontext.callSecurityCenter(\"正常通话（白天）\");\n\n\t}\n\t\n\tpublic String toString(){\n\t\treturn \"[白天]\";\n\t}\n}\n\n```\n### Context\n``` java\npackage com.sean.State;\n\npublic interface Context {\n\tpublic abstract void setClock(int hour);\n\tpublic abstract State changeState(State state);\n\tpublic abstract void callSecurityCenter(String msg);\n\tpublic abstract void recordLog(String msg);\n}\n\n```\n\n### SafeFrame\n``` java\npackage com.sean.State;\n\nimport java.awt.BorderLayout;\nimport java.awt.Button;\nimport java.awt.Color;\nimport java.awt.Frame;\nimport java.awt.Panel;\nimport java.awt.TextArea;\nimport java.awt.TextField;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class SafeFrame extends Frame implements ActionListener, Context {\n\t\n\tprivate TextField textClock = new TextField(60);\n\tprivate TextArea textScreen=new TextArea(10,60);\n\tprivate Button buttonUse=new Button(\"使用金库\");\n\tprivate Button buttonAlarm=new Button(\"按下警铃\");\n\tprivate Button buttonPhone=new Button(\"正常通话\");\n\tprivate Button buttonExit=new Button(\"结束\");\n\tprivate State state=DayState.getInstance();\n\t//构造函数\n\tpublic SafeFrame(String title){\n\t\tsuper(title);\n\t\tsetBackground(Color.lightGray);\n\t\tsetLayout(new BorderLayout());\n\t\t//配置textClock\n\t\tadd(textClock,BorderLayout.NORTH);\n\t\ttextClock.setEditable(false);\n\t\t//配置textScreen\n\t\tadd(textScreen,BorderLayout.CENTER);\n\t\ttextScreen.setEditable(false);\n\t\t//为界面添加按钮\n\t\tPanel panel=new Panel();\n\t\tpanel.add(buttonUse);\n\t\tpanel.add(buttonAlarm);\n\t\tpanel.add(buttonPhone);\n\t\tpanel.add(buttonExit);\n\t\t//配置界面\n\t\tadd(panel,BorderLayout.SOUTH);\n\t\t//显示\n\t\tpack();\n\t\tshow();\n\t\t//设置监听器\n\t\tbuttonUse.addActionListener(this);\n\t\tbuttonAlarm.addActionListener(this);\n\t\tbuttonPhone.addActionListener(this);\n\t\tbuttonExit.addActionListener(this);\n\t}\n\tpublic void setClock(int hour) {\n\t\tString clockstring=\"现在时间是:\";\n\t\tif(hour<10){\n\t\t\tclockstring+=\"0\"+hour+\":00\";\n\t\t}else {\n\t\t\tclockstring+=hour+\":00\";\n\t\t}\n\t\tSystem.out.println(clockstring);\n\t\ttextClock.setText(clockstring);\n\t\tstate.doClock(this, hour);\n\t}\n\n\tpublic State changeState(State state) {\n        System.out.println(\"从\"+this.state+\"状态变为了\"+state+\"状态\");\n\t\tthis.state=state;\t\n\t\treturn state;\n\t}\n\n\tpublic void callSecurityCenter(String msg) {\n\t\ttextScreen.append(\"Call!\"+msg+\"\\n\");\n\n\t}\n\n\tpublic void recordLog(String msg) {\n\t\ttextScreen.append(\"record ... \"+msg+\"\\n\");\n\n\t}\n\n\tpublic void actionPerformed(ActionEvent e) {\n\t\tSystem.out.println(e.toString());\n\t\tif(e.getSource()==buttonUse){\n\t\t\tstate.doUse(this);\n\t\t}else if (e.getSource()==buttonAlarm) {\n\t\t\tstate.doAlarm(this);\n\t\t}else if (e.getSource()==buttonPhone) {\n\t\t\tstate.doPhone(this);\n\t\t}else if (e.getSource()== buttonExit) {\n\t\t\tSystem.exit(0);\n\t\t}else {\n\t\t\tSystem.out.println(\"?\");\n\t\t}\n\n\t}\n\n}\n\n```\n\n### Main\n\n``` java\npackage com.sean.State;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tSafeFrame frame=new SafeFrame(\"state module\");\n\t\twhile(true){\n\t\t\tfor(int hour=0;hour<24;hour++){\n\t\t\t\tframe.setClock(hour);\t//设置时间\n\t\t\t\ttry{\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}catch(InterruptedException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n```\n## 要点\n采用分而治之方针。\n**定义接口，声明抽象方法**\n**定义多个类，实现具体的方法**\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"State_Design_Pattern","published":1,"updated":"2018-02-12T08:40:55.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4o0013ytcv1e6y4bvs","content":"<h1 id=\"State模式\"><a href=\"#State模式\" class=\"headerlink\" title=\"State模式\"></a>State模式</h1><p>用类表示状态</p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>有点复杂！但只有部分是自己写的，其他是java类库内的类。</p>\n<p><img data-src=\"/2018/02/12/State_Design_Pattern/State_Design_Pattern_complex.png\" alt=\"State\"></p>\n<p>粗略简单一点的类图<br><img data-src=\"/2018/02/12/State_Design_Pattern/State_Design_Pattern_simple.png\" alt=\"State\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"State\"></a>State</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context,<span class=\"keyword\">int</span> hour)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NightState-具体的状态\"><a href=\"#NightState-具体的状态\" class=\"headerlink\" title=\"NightState(具体的状态)\"></a>NightState(具体的状态)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NightState</span> <span class=\"keyword\">implements</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> NightState singleton = <span class=\"keyword\">new</span> NightState();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NightState</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> State <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"number\">9</span>&lt;=hour || hour&lt;<span class=\"number\">17</span>)&#123;</span><br><span class=\"line\">\t\t\tcontext.changeState(DayState.getInstance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;紧急！晚上使用金库！&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;按下警铃（晚上）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;晚上通话录音&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[晚上]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DayState-具体的状态\"><a href=\"#DayState-具体的状态\" class=\"headerlink\" title=\"DayState(具体的状态)\"></a>DayState(具体的状态)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayState</span> <span class=\"keyword\">implements</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DayState singleton = <span class=\"keyword\">new</span> DayState();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">DayState</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> State <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(hour&lt;<span class=\"number\">9</span> || <span class=\"number\">17</span>&lt;=hour)&#123;</span><br><span class=\"line\">\t\t\tcontext.changeState(NightState.getInstance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.recordLog(<span class=\"string\">&quot;使用金库（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;按下警铃（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;正常通话（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[白天]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Context</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setClock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> State <span class=\"title\">changeState</span><span class=\"params\">(State state)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">callSecurityCenter</span><span class=\"params\">(String msg)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">recordLog</span><span class=\"params\">(String msg)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"SafeFrame\"><a href=\"#SafeFrame\" class=\"headerlink\" title=\"SafeFrame\"></a>SafeFrame</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Frame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Panel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SafeFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">Frame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">Context</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> TextField textClock = <span class=\"keyword\">new</span> TextField(<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> TextArea textScreen=<span class=\"keyword\">new</span> TextArea(<span class=\"number\">10</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonUse=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;使用金库&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonAlarm=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;按下警铃&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonPhone=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;正常通话&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonExit=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> State state=DayState.getInstance();</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SafeFrame</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\tsetBackground(Color.lightGray);</span><br><span class=\"line\">\t\tsetLayout(<span class=\"keyword\">new</span> BorderLayout());</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置textClock</span></span><br><span class=\"line\">\t\tadd(textClock,BorderLayout.NORTH);</span><br><span class=\"line\">\t\ttextClock.setEditable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置textScreen</span></span><br><span class=\"line\">\t\tadd(textScreen,BorderLayout.CENTER);</span><br><span class=\"line\">\t\ttextScreen.setEditable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//为界面添加按钮</span></span><br><span class=\"line\">\t\tPanel panel=<span class=\"keyword\">new</span> Panel();</span><br><span class=\"line\">\t\tpanel.add(buttonUse);</span><br><span class=\"line\">\t\tpanel.add(buttonAlarm);</span><br><span class=\"line\">\t\tpanel.add(buttonPhone);</span><br><span class=\"line\">\t\tpanel.add(buttonExit);</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置界面</span></span><br><span class=\"line\">\t\tadd(panel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置监听器</span></span><br><span class=\"line\">\t\tbuttonUse.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonAlarm.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonPhone.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonExit.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setClock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\tString clockstring=<span class=\"string\">&quot;现在时间是:&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(hour&lt;<span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">\t\t\tclockstring+=<span class=\"string\">&quot;0&quot;</span>+hour+<span class=\"string\">&quot;:00&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tclockstring+=hour+<span class=\"string\">&quot;:00&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(clockstring);</span><br><span class=\"line\">\t\ttextClock.setText(clockstring);</span><br><span class=\"line\">\t\tstate.doClock(<span class=\"keyword\">this</span>, hour);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> State <span class=\"title\">changeState</span><span class=\"params\">(State state)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;从&quot;</span>+<span class=\"keyword\">this</span>.state+<span class=\"string\">&quot;状态变为了&quot;</span>+state+<span class=\"string\">&quot;状态&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.state=state;\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> state;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">callSecurityCenter</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">\t\ttextScreen.append(<span class=\"string\">&quot;Call!&quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">recordLog</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">\t\ttextScreen.append(<span class=\"string\">&quot;record ... &quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(e.toString());</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(e.getSource()==buttonUse)&#123;</span><br><span class=\"line\">\t\t\tstate.doUse(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()==buttonAlarm) &#123;</span><br><span class=\"line\">\t\t\tstate.doAlarm(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()==buttonPhone) &#123;</span><br><span class=\"line\">\t\t\tstate.doPhone(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()== buttonExit) &#123;</span><br><span class=\"line\">\t\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;?&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSafeFrame frame=<span class=\"keyword\">new</span> SafeFrame(<span class=\"string\">&quot;state module&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> hour=<span class=\"number\">0</span>;hour&lt;<span class=\"number\">24</span>;hour++)&#123;</span><br><span class=\"line\">\t\t\t\tframe.setClock(hour);\t<span class=\"comment\">//设置时间</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>采用分而治之方针。<br><strong>定义接口，声明抽象方法</strong><br><strong>定义多个类，实现具体的方法</strong></p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"State模式\"><a href=\"#State模式\" class=\"headerlink\" title=\"State模式\"></a>State模式</h1><p>用类表示状态</p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p>有点复杂！但只有部分是自己写的，其他是java类库内的类。</p>\n<p><img src=\"/2018/02/12/State_Design_Pattern/State_Design_Pattern_complex.png\" alt=\"State\"></p>\n<p>粗略简单一点的类图<br><img src=\"/2018/02/12/State_Design_Pattern/State_Design_Pattern_simple.png\" alt=\"State\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"State\"></a>State</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context,<span class=\"keyword\">int</span> hour)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"NightState-具体的状态\"><a href=\"#NightState-具体的状态\" class=\"headerlink\" title=\"NightState(具体的状态)\"></a>NightState(具体的状态)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NightState</span> <span class=\"keyword\">implements</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> NightState singleton = <span class=\"keyword\">new</span> NightState();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">NightState</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> State <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"number\">9</span>&lt;=hour || hour&lt;<span class=\"number\">17</span>)&#123;</span><br><span class=\"line\">\t\t\tcontext.changeState(DayState.getInstance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;紧急！晚上使用金库！&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;按下警铃（晚上）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;晚上通话录音&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[晚上]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"DayState-具体的状态\"><a href=\"#DayState-具体的状态\" class=\"headerlink\" title=\"DayState(具体的状态)\"></a>DayState(具体的状态)</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DayState</span> <span class=\"keyword\">implements</span> <span class=\"title\">State</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DayState singleton = <span class=\"keyword\">new</span> DayState();</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">DayState</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> State <span class=\"title\">getInstance</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> singleton;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doClock</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(hour&lt;<span class=\"number\">9</span> || <span class=\"number\">17</span>&lt;=hour)&#123;</span><br><span class=\"line\">\t\t\tcontext.changeState(NightState.getInstance());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doUse</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.recordLog(<span class=\"string\">&quot;使用金库（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doAlarm</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;按下警铃（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPhone</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">\t\tcontext.callSecurityCenter(<span class=\"string\">&quot;正常通话（白天）&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;[白天]&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Context</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">setClock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> State <span class=\"title\">changeState</span><span class=\"params\">(State state)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">callSecurityCenter</span><span class=\"params\">(String msg)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">recordLog</span><span class=\"params\">(String msg)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"SafeFrame\"><a href=\"#SafeFrame\" class=\"headerlink\" title=\"SafeFrame\"></a>SafeFrame</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.BorderLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Color;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Frame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Panel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextArea;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.TextField;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SafeFrame</span> <span class=\"keyword\">extends</span> <span class=\"title\">Frame</span> <span class=\"keyword\">implements</span> <span class=\"title\">ActionListener</span>, <span class=\"title\">Context</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> TextField textClock = <span class=\"keyword\">new</span> TextField(<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> TextArea textScreen=<span class=\"keyword\">new</span> TextArea(<span class=\"number\">10</span>,<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonUse=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;使用金库&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonAlarm=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;按下警铃&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonPhone=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;正常通话&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Button buttonExit=<span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> State state=DayState.getInstance();</span><br><span class=\"line\">\t<span class=\"comment\">//构造函数</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SafeFrame</span><span class=\"params\">(String title)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title);</span><br><span class=\"line\">\t\tsetBackground(Color.lightGray);</span><br><span class=\"line\">\t\tsetLayout(<span class=\"keyword\">new</span> BorderLayout());</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置textClock</span></span><br><span class=\"line\">\t\tadd(textClock,BorderLayout.NORTH);</span><br><span class=\"line\">\t\ttextClock.setEditable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置textScreen</span></span><br><span class=\"line\">\t\tadd(textScreen,BorderLayout.CENTER);</span><br><span class=\"line\">\t\ttextScreen.setEditable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//为界面添加按钮</span></span><br><span class=\"line\">\t\tPanel panel=<span class=\"keyword\">new</span> Panel();</span><br><span class=\"line\">\t\tpanel.add(buttonUse);</span><br><span class=\"line\">\t\tpanel.add(buttonAlarm);</span><br><span class=\"line\">\t\tpanel.add(buttonPhone);</span><br><span class=\"line\">\t\tpanel.add(buttonExit);</span><br><span class=\"line\">\t\t<span class=\"comment\">//配置界面</span></span><br><span class=\"line\">\t\tadd(panel,BorderLayout.SOUTH);</span><br><span class=\"line\">\t\t<span class=\"comment\">//显示</span></span><br><span class=\"line\">\t\tpack();</span><br><span class=\"line\">\t\tshow();</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置监听器</span></span><br><span class=\"line\">\t\tbuttonUse.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonAlarm.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonPhone.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\tbuttonExit.addActionListener(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setClock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour)</span> </span>&#123;</span><br><span class=\"line\">\t\tString clockstring=<span class=\"string\">&quot;现在时间是:&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(hour&lt;<span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">\t\t\tclockstring+=<span class=\"string\">&quot;0&quot;</span>+hour+<span class=\"string\">&quot;:00&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tclockstring+=hour+<span class=\"string\">&quot;:00&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(clockstring);</span><br><span class=\"line\">\t\ttextClock.setText(clockstring);</span><br><span class=\"line\">\t\tstate.doClock(<span class=\"keyword\">this</span>, hour);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> State <span class=\"title\">changeState</span><span class=\"params\">(State state)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;从&quot;</span>+<span class=\"keyword\">this</span>.state+<span class=\"string\">&quot;状态变为了&quot;</span>+state+<span class=\"string\">&quot;状态&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.state=state;\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> state;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">callSecurityCenter</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">\t\ttextScreen.append(<span class=\"string\">&quot;Call!&quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">recordLog</span><span class=\"params\">(String msg)</span> </span>&#123;</span><br><span class=\"line\">\t\ttextScreen.append(<span class=\"string\">&quot;record ... &quot;</span>+msg+<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(e.toString());</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(e.getSource()==buttonUse)&#123;</span><br><span class=\"line\">\t\t\tstate.doUse(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()==buttonAlarm) &#123;</span><br><span class=\"line\">\t\t\tstate.doAlarm(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()==buttonPhone) &#123;</span><br><span class=\"line\">\t\t\tstate.doPhone(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e.getSource()== buttonExit) &#123;</span><br><span class=\"line\">\t\t\tSystem.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;?&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.State;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@param</span> args</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSafeFrame frame=<span class=\"keyword\">new</span> SafeFrame(<span class=\"string\">&quot;state module&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> hour=<span class=\"number\">0</span>;hour&lt;<span class=\"number\">24</span>;hour++)&#123;</span><br><span class=\"line\">\t\t\t\tframe.setClock(hour);\t<span class=\"comment\">//设置时间</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t\t\tThread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">catch</span>(InterruptedException e)&#123;</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>采用分而治之方针。<br><strong>定义接口，声明抽象方法</strong><br><strong>定义多个类，实现具体的方法</strong></p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/12/State_Design_Pattern/State_Design_Pattern_complex.png","popularPost_tmp_gaData":{"updated":"Mon Feb 12 2018 16:40:55 GMT+0800 (China Standard Time)","title":"State模式","path":"2018/02/12/State_Design_Pattern/","eyeCatchImage":"/2018/02/12/State_Design_Pattern/State_Design_Pattern_complex.png","excerpt":"本文简要讲述了设计模式中的State模式。","date":{"_isAMomentObject":true,"_i":"2018-02-12T08:40:55.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-12T08:40:55.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["state"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":5022},{"title":"TemplateMethod模式","date":"2018-02-13T14:42:07.000Z","comments":1,"description":"本文简要讲述了设计模式中的TemplateMethod模式。","_content":"\n\n# TemplateMethod模式\n将具体处理交给子类\n带有模板功能的模式。\n在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。\n在抽象类阶段确定处理的流程非常重要。\n\n---\n\n## 类图\n\n![TemplateMethod](TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png)\n\n## 代码\n\n### AbstractDisplay\n\n``` java\npackage com.sean.TemplateMethod;\n/**\n * 抽象类中可有具体的方法实现\n * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）\n * @author sean\n *\n */\npublic abstract class AbstractDisplay {\n\t//修改修饰符可以改变抽象类方法的访问权限问题\n\tpublic abstract void open();\n\tpublic abstract void print();\n\tpublic abstract void close();\n\tpublic final void display(){\n\t\topen();\n\t\tfor(int i=0;i<5;i++){\n\t\t\tprint();\n\t\t}\n\t\tclose();\n\t}\n}\n\n```\n\n### CharDisplay\n``` java\npackage com.sean.TemplateMethod;\n\npublic class CharDisplay extends AbstractDisplay {\n\tprivate char ch;\n\tpublic CharDisplay(char ch){\n\t\tthis.ch=ch;\n\t}\n\t@Override\n\tpublic void open() {\n\t\tSystem.out.print(\"<<\");\n\n\t}\n\n\t@Override\n\tpublic void print() {\n\t\tSystem.out.print(ch);\n\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tSystem.out.println(\">>\");\n\n\t}\n\n}\n\n```\n\n### StringDisplay\n``` java\npackage com.sean.TemplateMethod;\n\npublic class StringDisplay extends AbstractDisplay {\n\tprivate String string;\n\tprivate int width;\n\tpublic StringDisplay(String string){\n\t\tthis.string=string;\n\t\tthis.width=string.getBytes().length;\n\t}\n\t@Override\n\tpublic void open() {\n\t\tprintLine();\n\t}\n\n\t@Override\n\tpublic void print() {\n\t\tSystem.out.println(\"|\"+string+\"|\");\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tprintLine();\n\n\t}\n\t\n\tprivate void printLine(){\n\t\tSystem.out.print(\"+\");\n\t\tfor(int i=0;i<width;i++){\n\t\t\tSystem.out.print(\"-\");\n\t\t}\n\t\tSystem.out.println(\"+\");\n\t}\n\n}\n\n```\n\n### Main\n``` java\npackage com.sean.TemplateMethod;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tAbstractDisplay d1=new CharDisplay('H');\n\t\tAbstractDisplay d2=new StringDisplay(\"Hello,world\");\n\t\td1.display();\n\t\td2.display();\n\n\t}\n\n}\n\n```\n\n## 要点\n\nTemplate Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","source":"_posts/TemplateMethod_Design_Pattern.md","raw":"---\ntitle: TemplateMethod模式\ndate: 2018/02/13 14:42:07\ncomments: true\ndescription: 本文简要讲述了设计模式中的TemplateMethod模式。\ntags:\n\t- TemplateMethod\ncategories:\n\t- DesignPattern\n---\n\n\n# TemplateMethod模式\n将具体处理交给子类\n带有模板功能的模式。\n在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。\n在抽象类阶段确定处理的流程非常重要。\n\n---\n\n## 类图\n\n![TemplateMethod](TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png)\n\n## 代码\n\n### AbstractDisplay\n\n``` java\npackage com.sean.TemplateMethod;\n/**\n * 抽象类中可有具体的方法实现\n * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）\n * @author sean\n *\n */\npublic abstract class AbstractDisplay {\n\t//修改修饰符可以改变抽象类方法的访问权限问题\n\tpublic abstract void open();\n\tpublic abstract void print();\n\tpublic abstract void close();\n\tpublic final void display(){\n\t\topen();\n\t\tfor(int i=0;i<5;i++){\n\t\t\tprint();\n\t\t}\n\t\tclose();\n\t}\n}\n\n```\n\n### CharDisplay\n``` java\npackage com.sean.TemplateMethod;\n\npublic class CharDisplay extends AbstractDisplay {\n\tprivate char ch;\n\tpublic CharDisplay(char ch){\n\t\tthis.ch=ch;\n\t}\n\t@Override\n\tpublic void open() {\n\t\tSystem.out.print(\"<<\");\n\n\t}\n\n\t@Override\n\tpublic void print() {\n\t\tSystem.out.print(ch);\n\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tSystem.out.println(\">>\");\n\n\t}\n\n}\n\n```\n\n### StringDisplay\n``` java\npackage com.sean.TemplateMethod;\n\npublic class StringDisplay extends AbstractDisplay {\n\tprivate String string;\n\tprivate int width;\n\tpublic StringDisplay(String string){\n\t\tthis.string=string;\n\t\tthis.width=string.getBytes().length;\n\t}\n\t@Override\n\tpublic void open() {\n\t\tprintLine();\n\t}\n\n\t@Override\n\tpublic void print() {\n\t\tSystem.out.println(\"|\"+string+\"|\");\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tprintLine();\n\n\t}\n\t\n\tprivate void printLine(){\n\t\tSystem.out.print(\"+\");\n\t\tfor(int i=0;i<width;i++){\n\t\t\tSystem.out.print(\"-\");\n\t\t}\n\t\tSystem.out.println(\"+\");\n\t}\n\n}\n\n```\n\n### Main\n``` java\npackage com.sean.TemplateMethod;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tAbstractDisplay d1=new CharDisplay('H');\n\t\tAbstractDisplay d2=new StringDisplay(\"Hello,world\");\n\t\td1.display();\n\t\td2.display();\n\n\t}\n\n}\n\n```\n\n## 要点\n\nTemplate Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。\n\n## 参照\n> 《图解设计模式》\n\n\n写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。\n程序类图使用idea 生成的\n","slug":"TemplateMethod_Design_Pattern","published":1,"updated":"2018-02-13T14:42:07.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4p0017ytcvdx8p0eu1","content":"<h1 id=\"TemplateMethod模式\"><a href=\"#TemplateMethod模式\" class=\"headerlink\" title=\"TemplateMethod模式\"></a>TemplateMethod模式</h1><p>将具体处理交给子类<br>带有模板功能的模式。<br>在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。<br>在抽象类阶段确定处理的流程非常重要。</p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img data-src=\"/2018/02/13/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png\" alt=\"TemplateMethod\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"AbstractDisplay\"><a href=\"#AbstractDisplay\" class=\"headerlink\" title=\"AbstractDisplay\"></a>AbstractDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象类中可有具体的方法实现</span></span><br><span class=\"line\"><span class=\"comment\"> * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sean</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//修改修饰符可以改变抽象类方法的访问权限问题</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">display</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\topen();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tprint();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tclose();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"CharDisplay\"><a href=\"#CharDisplay\" class=\"headerlink\" title=\"CharDisplay\"></a>CharDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CharDisplay</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CharDisplay</span><span class=\"params\">(<span class=\"keyword\">char</span> ch)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.ch=ch;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">&quot;&lt;&lt;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(ch);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;&gt;&gt;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"StringDisplay\"><a href=\"#StringDisplay\" class=\"headerlink\" title=\"StringDisplay\"></a>StringDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringDisplay</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StringDisplay</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.width=string.getBytes().length;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tprintLine();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;|&quot;</span>+string+<span class=\"string\">&quot;|&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tprintLine();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">printLine</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;width;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tAbstractDisplay d1=<span class=\"keyword\">new</span> CharDisplay(<span class=\"string\">&#x27;H&#x27;</span>);</span><br><span class=\"line\">\t\tAbstractDisplay d2=<span class=\"keyword\">new</span> StringDisplay(<span class=\"string\">&quot;Hello,world&quot;</span>);</span><br><span class=\"line\">\t\td1.display();</span><br><span class=\"line\">\t\td2.display();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Template Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"TemplateMethod模式\"><a href=\"#TemplateMethod模式\" class=\"headerlink\" title=\"TemplateMethod模式\"></a>TemplateMethod模式</h1><p>将具体处理交给子类<br>带有模板功能的模式。<br>在父类中定义处理流程的框架，在子类中实现具体处理的模式就称为TemplateMethod模式。<br>在抽象类阶段确定处理的流程非常重要。</p>\n<hr>\n<h2 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h2><p><img src=\"/2018/02/13/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png\" alt=\"TemplateMethod\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"AbstractDisplay\"><a href=\"#AbstractDisplay\" class=\"headerlink\" title=\"AbstractDisplay\"></a>AbstractDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 抽象类中可有具体的方法实现</span></span><br><span class=\"line\"><span class=\"comment\"> * 但是如果用接口是不行的（原因：接口不能有具体的方法实现）</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> sean</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//修改修饰符可以改变抽象类方法的访问权限问题</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">display</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\topen();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">\t\t\tprint();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tclose();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"CharDisplay\"><a href=\"#CharDisplay\" class=\"headerlink\" title=\"CharDisplay\"></a>CharDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CharDisplay</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CharDisplay</span><span class=\"params\">(<span class=\"keyword\">char</span> ch)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.ch=ch;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">&quot;&lt;&lt;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(ch);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;&gt;&gt;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"StringDisplay\"><a href=\"#StringDisplay\" class=\"headerlink\" title=\"StringDisplay\"></a>StringDisplay</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StringDisplay</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractDisplay</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String string;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">StringDisplay</span><span class=\"params\">(String string)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.string=string;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.width=string.getBytes().length;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">open</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tprintLine();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;|&quot;</span>+string+<span class=\"string\">&quot;|&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tprintLine();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">printLine</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;width;i++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;-&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;+&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.sean.TemplateMethod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tAbstractDisplay d1=<span class=\"keyword\">new</span> CharDisplay(<span class=\"string\">&#x27;H&#x27;</span>);</span><br><span class=\"line\">\t\tAbstractDisplay d2=<span class=\"keyword\">new</span> StringDisplay(<span class=\"string\">&quot;Hello,world&quot;</span>);</span><br><span class=\"line\">\t\td1.display();</span><br><span class=\"line\">\t\td2.display();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>Template Method模式中，父类与子类是紧密联系，共同工作的。在子类中实现父类的抽象方法。</p>\n<h2 id=\"参照\"><a href=\"#参照\" class=\"headerlink\" title=\"参照\"></a>参照</h2><blockquote>\n<p>《图解设计模式》</p>\n</blockquote>\n<p>写这个只是为了加深自己对设计模式的理解，如不明白，可以看 《图解设计模式》。<br>程序类图使用idea 生成的</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2018/02/13/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png","popularPost_tmp_gaData":{"updated":"Tue Feb 13 2018 22:42:07 GMT+0800 (China Standard Time)","title":"TemplateMethod模式","path":"2018/02/13/TemplateMethod_Design_Pattern/","eyeCatchImage":"/2018/02/13/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png","excerpt":"本文简要讲述了设计模式中的TemplateMethod模式。","date":{"_isAMomentObject":true,"_i":"2018-02-13T14:42:07.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-13T14:42:07.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"DesignPattern","tags":["TemplateMethod"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1933},{"title":"搭建hexo和github遇到问题","comments":0,"date":"2018-02-06T15:59:44.000Z","description":"本文描述了自己搭建hexo所遇到的问题。","_content":"\n# 搭建hexo和github遇到问题\n学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！\n\n---\n\n## 安装hexo问题\n安装hexo我是在网上找教程安装的：\n1.安装node.js(去官网下载windows版的安装包) [node.js官网](https://nodejs.org)\n2.安装git  [git下载地址](https://git-scm.com/downloads/)\n3.申请github账号 [github](https://github.com/) 这里自己注册\n设置user.name user.email\n\n``` bash\ngit config --global user.name \"你的GitHub用户名\"\ngit config --global user.email \"你的GitHub注册邮箱\"\n```\n                 \n4.生成ssh密匙\n\n```bash\nssh-keygen -t rsa -C \"你的GitHub注册邮箱\"\n```\n          \n一路回车就OK了！\n此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。\n上传公匙添加到github上 \n***记住是id_rsa.pub内容复制到github上***\n\n5.安装hexo \n\n```bash\nnpm install hexo-cli g\n```\n\n建立一个文件夹hexo\n\n```bash\nmkdir hexo \n```\n初始化hexo文件夹\n\n```bash\nhexo init hexo\n```\n\n安装hexo插件(都安装吧!)\n\n```bash\nnpm install hexo-server --save\nnpm install hexo-admin --save\nnpm install hexo-generator-archive --save\nnpm install hexo-generator-feed --save\nnpm install hexo-generator-search --save\nnpm install hexo-generator-tag --save\nnpm install hexo-deployer-git --save\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-category --save\n```\n\n6.本地使用hexo\n\n生成静态页面\n``` bash\nhexo generate\n```\n\n\n开启本地服务器(可以使用全名 hexo server)\n```bash\nhexo s \n```\n\n在浏览器输入 **[http://localhost:4000/](http://localhost:4000/)** 就可以在本地访问blog\n\n7.hexo部署到github上\n \n先在github上创建一个仓库 名字：   github用户名.github.io\n这个创库的命名规则不能弄错了！！！！！！\n\n修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改\n``` \n# Deployment 注释\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  # 类型\n  type: git\n  # 仓库\n  repo: git@github.com:用户名/用户名.github.io.git\n  # 分支\n  branch: master\n```\n记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)\n还有一种方式是把repo 修改为下面\n```  bash\n repo: https://github.com/用户名/用户名.github.io\n```\n由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github\n\n输入下面的命令将hexo博客部署到github中：\n``` bash\n# 清空静态页面\nhexo clean\n# 生成静态页面\nhexo generate\n# 部署 \nhexo deploy\n```\n这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。\n\n***\n## hexo替换主题\n我使用的next主题\n1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo\n``` bash\n#自己切换自己的博客目录\n$ cd hexo\n# 执行下面命令\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n2.修改博客配置文件 /hexo/_config.yml 如下：\n``` \n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\n#以前的选项为     theme: landscape\ntheme: next\n```\n3.修改主题配置文件      /hexo/themes/next/_config.yml\n## menu修改\n找到下面内容\n```\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\nmenu:\n  home: / || home\n  #about: /about/ || user\n  tags: /tags/ || tags\n  #categories: /categories/ || th\n  #archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n去掉 # 就可以多一个菜单栏 比如去掉 \n``` \nmenu:\n  home: / || home\n  #about: /about/ || user\n  tags: /tags/ || tags\n  categories: /categories/ || th\n  #archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n虽然在首页能看见这个菜单，但是是不能使用\n点击菜单 categories 会返回 can't get /categories/ 错误信息\n首先要安装categories对应插件\n``` bash\n$ npm install hexo-generator-category --save\n```\n再在gitbash输入（hexo目录下）\n``` bash\n$ hexo new page categories\n```\n在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md\n``` \n---\ntitle: categories\ndate: 2018-1-22 12:39:04\ntype: \"categories\"\ncomments: false\n---\n```\n在/hexo/source/_post 目录建立 test.md 内容如下\n``` \n---\ntitle: test\ncategories:\n  - Testing\n---\n```\n注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！\n***\n## 赞赏功能问题\n在添加赞赏功能是替换了图片不能出现赞赏功能\nnext赞赏功能启用\n在主题配置文件 找到如下内容  并修改如下：\n```\n# Reward\nreward_comment: Donate\nwechatpay: /images/wechatpay.png\nalipay: /images/alipay.jpg\n#bitcoin: /images/bitcoin.png\n```  \n自己图片位置在 Hexo/themes/next/source image文件内\n修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找\n\n# Automatically Excerpt. Not recommend.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: false\n  length: 150\n```\n修改如下:\n```\n# Automatically Excerpt. Not recommend.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: true\n  length: 150\n```\n在执行\n``` bash\n$ hexo clean && hexo generate &&  hexo s \n```\n这下应该可以！\n***\n## 本地搜索配置\n1.hexo配置文件(/hexo/_config.yml)添加\n```\n#search\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n2.安装插件\n``` bash\n $ npm install hexo-generator-search --save\n $ npm install hexo-generator-searchdb --save\n```\n3.修改 主题配置文件(/hexo/themes/next/_config.yml)\n```\n# Local search\n# Dependencies: https://github.com/flashlab/hexo-generator-search\nlocal_search:\n  enable: false\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n修改为\n```\n# Local search\n# Dependencies: https://github.com/flashlab/hexo-generator-search\nlocal_search:\n  enable: true\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n\n## 参考文档\n[next参考文档](http://theme-next.iissnan.com/)\n[hexo参考文档](https://hexo.io/zh-cn/docs/)\n\n没事就多看看官方文档，应该能解决问题的！加油！\n","source":"_posts/build_hexo_problem.md","raw":"---\ntitle: 搭建hexo和github遇到问题\ncomments: false\ndate: 2018/02/06 15:59:44\ndescription: 本文描述了自己搭建hexo所遇到的问题。\n\ntags:\n\t- Hexo\ncategories:\n\t- Hexo\n---\n\n# 搭建hexo和github遇到问题\n学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！\n\n---\n\n## 安装hexo问题\n安装hexo我是在网上找教程安装的：\n1.安装node.js(去官网下载windows版的安装包) [node.js官网](https://nodejs.org)\n2.安装git  [git下载地址](https://git-scm.com/downloads/)\n3.申请github账号 [github](https://github.com/) 这里自己注册\n设置user.name user.email\n\n``` bash\ngit config --global user.name \"你的GitHub用户名\"\ngit config --global user.email \"你的GitHub注册邮箱\"\n```\n                 \n4.生成ssh密匙\n\n```bash\nssh-keygen -t rsa -C \"你的GitHub注册邮箱\"\n```\n          \n一路回车就OK了！\n此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。\n上传公匙添加到github上 \n***记住是id_rsa.pub内容复制到github上***\n\n5.安装hexo \n\n```bash\nnpm install hexo-cli g\n```\n\n建立一个文件夹hexo\n\n```bash\nmkdir hexo \n```\n初始化hexo文件夹\n\n```bash\nhexo init hexo\n```\n\n安装hexo插件(都安装吧!)\n\n```bash\nnpm install hexo-server --save\nnpm install hexo-admin --save\nnpm install hexo-generator-archive --save\nnpm install hexo-generator-feed --save\nnpm install hexo-generator-search --save\nnpm install hexo-generator-tag --save\nnpm install hexo-deployer-git --save\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-category --save\n```\n\n6.本地使用hexo\n\n生成静态页面\n``` bash\nhexo generate\n```\n\n\n开启本地服务器(可以使用全名 hexo server)\n```bash\nhexo s \n```\n\n在浏览器输入 **[http://localhost:4000/](http://localhost:4000/)** 就可以在本地访问blog\n\n7.hexo部署到github上\n \n先在github上创建一个仓库 名字：   github用户名.github.io\n这个创库的命名规则不能弄错了！！！！！！\n\n修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改\n``` \n# Deployment 注释\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  # 类型\n  type: git\n  # 仓库\n  repo: git@github.com:用户名/用户名.github.io.git\n  # 分支\n  branch: master\n```\n记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)\n还有一种方式是把repo 修改为下面\n```  bash\n repo: https://github.com/用户名/用户名.github.io\n```\n由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github\n\n输入下面的命令将hexo博客部署到github中：\n``` bash\n# 清空静态页面\nhexo clean\n# 生成静态页面\nhexo generate\n# 部署 \nhexo deploy\n```\n这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。\n\n***\n## hexo替换主题\n我使用的next主题\n1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo\n``` bash\n#自己切换自己的博客目录\n$ cd hexo\n# 执行下面命令\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n2.修改博客配置文件 /hexo/_config.yml 如下：\n``` \n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\n#以前的选项为     theme: landscape\ntheme: next\n```\n3.修改主题配置文件      /hexo/themes/next/_config.yml\n## menu修改\n找到下面内容\n```\n# ---------------------------------------------------------------\n# Menu Settings\n# ---------------------------------------------------------------\nmenu:\n  home: / || home\n  #about: /about/ || user\n  tags: /tags/ || tags\n  #categories: /categories/ || th\n  #archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n去掉 # 就可以多一个菜单栏 比如去掉 \n``` \nmenu:\n  home: / || home\n  #about: /about/ || user\n  tags: /tags/ || tags\n  categories: /categories/ || th\n  #archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n虽然在首页能看见这个菜单，但是是不能使用\n点击菜单 categories 会返回 can't get /categories/ 错误信息\n首先要安装categories对应插件\n``` bash\n$ npm install hexo-generator-category --save\n```\n再在gitbash输入（hexo目录下）\n``` bash\n$ hexo new page categories\n```\n在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md\n``` \n---\ntitle: categories\ndate: 2018-1-22 12:39:04\ntype: \"categories\"\ncomments: false\n---\n```\n在/hexo/source/_post 目录建立 test.md 内容如下\n``` \n---\ntitle: test\ncategories:\n  - Testing\n---\n```\n注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！\n***\n## 赞赏功能问题\n在添加赞赏功能是替换了图片不能出现赞赏功能\nnext赞赏功能启用\n在主题配置文件 找到如下内容  并修改如下：\n```\n# Reward\nreward_comment: Donate\nwechatpay: /images/wechatpay.png\nalipay: /images/alipay.jpg\n#bitcoin: /images/bitcoin.png\n```  \n自己图片位置在 Hexo/themes/next/source image文件内\n修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找\n\n# Automatically Excerpt. Not recommend.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: false\n  length: 150\n```\n修改如下:\n```\n# Automatically Excerpt. Not recommend.\n# Please use <!-- more --> in the post to control excerpt accurately.\nauto_excerpt:\n  enable: true\n  length: 150\n```\n在执行\n``` bash\n$ hexo clean && hexo generate &&  hexo s \n```\n这下应该可以！\n***\n## 本地搜索配置\n1.hexo配置文件(/hexo/_config.yml)添加\n```\n#search\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n2.安装插件\n``` bash\n $ npm install hexo-generator-search --save\n $ npm install hexo-generator-searchdb --save\n```\n3.修改 主题配置文件(/hexo/themes/next/_config.yml)\n```\n# Local search\n# Dependencies: https://github.com/flashlab/hexo-generator-search\nlocal_search:\n  enable: false\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n修改为\n```\n# Local search\n# Dependencies: https://github.com/flashlab/hexo-generator-search\nlocal_search:\n  enable: true\n  # if auto, trigger search by changing input\n  # if manual, trigger search by pressing enter key or search button\n  trigger: auto\n  # show top n results per article, show all results by setting to -1\n  top_n_per_article: 1\n```\n\n## 参考文档\n[next参考文档](http://theme-next.iissnan.com/)\n[hexo参考文档](https://hexo.io/zh-cn/docs/)\n\n没事就多看看官方文档，应该能解决问题的！加油！\n","slug":"build_hexo_problem","published":1,"updated":"2018-02-06T15:59:44.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4r001aytcv19i0b8o9","content":"<h1 id=\"搭建hexo和github遇到问题\"><a href=\"#搭建hexo和github遇到问题\" class=\"headerlink\" title=\"搭建hexo和github遇到问题\"></a>搭建hexo和github遇到问题</h1><p>学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！</p>\n<hr>\n<h2 id=\"安装hexo问题\"><a href=\"#安装hexo问题\" class=\"headerlink\" title=\"安装hexo问题\"></a>安装hexo问题</h2><p>安装hexo我是在网上找教程安装的：<br>1.安装node.js(去官网下载windows版的安装包) <a href=\"https://nodejs.org/\">node.js官网</a><br>2.安装git  <a href=\"https://git-scm.com/downloads/\">git下载地址</a><br>3.申请github账号 <a href=\"https://github.com/\">github</a> 这里自己注册<br>设置user.name user.email</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;你的GitHub用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>4.生成ssh密匙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>一路回车就OK了！<br>此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。<br>上传公匙添加到github上<br><strong><em>记住是id_rsa.pub内容复制到github上</em></strong></p>\n<p>5.安装hexo </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli g</span><br></pre></td></tr></table></figure>\n<p>建立一个文件夹hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo </span><br></pre></td></tr></table></figure>\n<p>初始化hexo文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init hexo</span><br></pre></td></tr></table></figure>\n<p>安装hexo插件(都安装吧!)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-admin --save</span><br><span class=\"line\">npm install hexo-generator-archive --save</span><br><span class=\"line\">npm install hexo-generator-feed --save</span><br><span class=\"line\">npm install hexo-generator-search --save</span><br><span class=\"line\">npm install hexo-generator-tag --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure>\n<p>6.本地使用hexo</p>\n<p>生成静态页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>开启本地服务器(可以使用全名 hexo server)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s </span><br></pre></td></tr></table></figure>\n<p>在浏览器输入 <strong><a href=\"http://localhost:4000/\">http://localhost:4000/</a></strong> 就可以在本地访问blog</p>\n<p>7.hexo部署到github上</p>\n<p>先在github上创建一个仓库 名字：   github用户名.github.io<br>这个创库的命名规则不能弄错了！！！！！！</p>\n<p>修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment 注释</span><br><span class=\"line\">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  # 类型</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  # 仓库</span><br><span class=\"line\">  repo: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class=\"line\">  # 分支</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)<br>还有一种方式是把repo 修改为下面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repo: https://github.com/用户名/用户名.github.io</span><br></pre></td></tr></table></figure>\n<p>由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github</p>\n<p>输入下面的命令将hexo博客部署到github中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清空静态页面</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"comment\"># 生成静态页面</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"><span class=\"comment\"># 部署 </span></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。</p>\n<hr>\n<h2 id=\"hexo替换主题\"><a href=\"#hexo替换主题\" class=\"headerlink\" title=\"hexo替换主题\"></a>hexo替换主题</h2><p>我使用的next主题<br>1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#自己切换自己的博客目录</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo</span><br><span class=\"line\"><span class=\"comment\"># 执行下面命令</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>2.修改博客配置文件 /hexo/_config.yml 如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class=\"line\">## Themes: http:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class=\"line\">#以前的选项为     theme: landscape</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>3.修改主题配置文件      /hexo/themes/next/_config.yml</p>\n<h2 id=\"menu修改\"><a href=\"#menu修改\" class=\"headerlink\" title=\"menu修改\"></a>menu修改</h2><p>找到下面内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"># Menu Settings</span><br><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: &#x2F; || home</span><br><span class=\"line\">  #about: &#x2F;about&#x2F; || user</span><br><span class=\"line\">  tags: &#x2F;tags&#x2F; || tags</span><br><span class=\"line\">  #categories: &#x2F;categories&#x2F; || th</span><br><span class=\"line\">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class=\"line\">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class=\"line\">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>\n<p>去掉 # 就可以多一个菜单栏 比如去掉 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: &#x2F; || home</span><br><span class=\"line\">  #about: &#x2F;about&#x2F; || user</span><br><span class=\"line\">  tags: &#x2F;tags&#x2F; || tags</span><br><span class=\"line\">  categories: &#x2F;categories&#x2F; || th</span><br><span class=\"line\">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class=\"line\">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class=\"line\">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>\n<p>虽然在首页能看见这个菜单，但是是不能使用<br>点击菜单 categories 会返回 can’t get /categories/ 错误信息<br>首先要安装categories对应插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure>\n<p>再在gitbash输入（hexo目录下）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2018-1-22 12:39:04</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>在/hexo/source/_post 目录建立 test.md 内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: test</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - Testing</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！</p>\n<hr>\n<h2 id=\"赞赏功能问题\"><a href=\"#赞赏功能问题\" class=\"headerlink\" title=\"赞赏功能问题\"></a>赞赏功能问题</h2><p>在添加赞赏功能是替换了图片不能出现赞赏功能<br>next赞赏功能启用<br>在主题配置文件 找到如下内容  并修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Reward</span><br><span class=\"line\">reward_comment: Donate</span><br><span class=\"line\">wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class=\"line\">alipay: &#x2F;images&#x2F;alipay.jpg</span><br><span class=\"line\">#bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class=\"line\">&#96;&#96;&#96;  </span><br><span class=\"line\">自己图片位置在 Hexo&#x2F;themes&#x2F;next&#x2F;source image文件内</span><br><span class=\"line\">修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找</span><br><span class=\"line\"></span><br><span class=\"line\"># Automatically Excerpt. Not recommend.</span><br><span class=\"line\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  length: 150</span><br></pre></td></tr></table></figure>\n<p>修改如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Automatically Excerpt. Not recommend.</span><br><span class=\"line\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  length: 150</span><br></pre></td></tr></table></figure>\n<p>在执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean &amp;&amp; hexo generate &amp;&amp;  hexo s </span><br></pre></td></tr></table></figure>\n<p>这下应该可以！</p>\n<hr>\n<h2 id=\"本地搜索配置\"><a href=\"#本地搜索配置\" class=\"headerlink\" title=\"本地搜索配置\"></a>本地搜索配置</h2><p>1.hexo配置文件(/hexo/_config.yml)添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<p>2.安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-search --save</span><br><span class=\"line\">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>3.修改 主题配置文件(/hexo/themes/next/_config.yml)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  # if auto, trigger search by changing input</span><br><span class=\"line\">  # if manual, trigger search by pressing enter key or search button</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  # show top n results per article, show all results by setting to -1</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # if auto, trigger search by changing input</span><br><span class=\"line\">  # if manual, trigger search by pressing enter key or search button</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  # show top n results per article, show all results by setting to -1</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"http://theme-next.iissnan.com/\">next参考文档</a><br><a href=\"https://hexo.io/zh-cn/docs/\">hexo参考文档</a></p>\n<p>没事就多看看官方文档，应该能解决问题的！加油！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"搭建hexo和github遇到问题\"><a href=\"#搭建hexo和github遇到问题\" class=\"headerlink\" title=\"搭建hexo和github遇到问题\"></a>搭建hexo和github遇到问题</h1><p>学习一样新事物，总是要经历磕磕碰碰，才能有所成长！脚踏实地，一步一个脚印，走好每一步，不要给自己留遗憾！</p>\n<hr>\n<h2 id=\"安装hexo问题\"><a href=\"#安装hexo问题\" class=\"headerlink\" title=\"安装hexo问题\"></a>安装hexo问题</h2><p>安装hexo我是在网上找教程安装的：<br>1.安装node.js(去官网下载windows版的安装包) <a href=\"https://nodejs.org/\">node.js官网</a><br>2.安装git  <a href=\"https://git-scm.com/downloads/\">git下载地址</a><br>3.申请github账号 <a href=\"https://github.com/\">github</a> 这里自己注册<br>设置user.name user.email</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;你的GitHub用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>4.生成ssh密匙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>一路回车就OK了！<br>此时，在用户文件夹下就会有一个新的文件夹.ssh，里面有刚刚创建的ssh密钥文件id_rsa和id_rsa.pub。<br>上传公匙添加到github上<br><strong><em>记住是id_rsa.pub内容复制到github上</em></strong></p>\n<p>5.安装hexo </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli g</span><br></pre></td></tr></table></figure>\n<p>建立一个文件夹hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hexo </span><br></pre></td></tr></table></figure>\n<p>初始化hexo文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init hexo</span><br></pre></td></tr></table></figure>\n<p>安装hexo插件(都安装吧!)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-admin --save</span><br><span class=\"line\">npm install hexo-generator-archive --save</span><br><span class=\"line\">npm install hexo-generator-feed --save</span><br><span class=\"line\">npm install hexo-generator-search --save</span><br><span class=\"line\">npm install hexo-generator-tag --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure>\n<p>6.本地使用hexo</p>\n<p>生成静态页面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>开启本地服务器(可以使用全名 hexo server)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s </span><br></pre></td></tr></table></figure>\n<p>在浏览器输入 <strong><a href=\"http://localhost:4000/\">http://localhost:4000/</a></strong> 就可以在本地访问blog</p>\n<p>7.hexo部署到github上</p>\n<p>先在github上创建一个仓库 名字：   github用户名.github.io<br>这个创库的命名规则不能弄错了！！！！！！</p>\n<p>修改博客配置文件(hexo/_config.yml)，在文件里找到下面内容并修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment 注释</span><br><span class=\"line\">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  # 类型</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  # 仓库</span><br><span class=\"line\">  repo: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class=\"line\">  # 分支</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>记得一定要修改成自己的用户名！！！！ 这种方式使用ssh链接(前提是你添加了公钥到github)<br>还有一种方式是把repo 修改为下面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repo: https://github.com/用户名/用户名.github.io</span><br></pre></td></tr></table></figure>\n<p>由于我用得两个github账号，建立hexo博客是换了一个新的账号 使用这种方式总是报 403 错误 我是改用ssh链接github</p>\n<p>输入下面的命令将hexo博客部署到github中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清空静态页面</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"comment\"># 生成静态页面</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"><span class=\"comment\"># 部署 </span></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>这里有一点建议：发布时最好连续执行这三个命令，以免部署到github的hexo为以前的，就相当于刷新一下缓存。</p>\n<hr>\n<h2 id=\"hexo替换主题\"><a href=\"#hexo替换主题\" class=\"headerlink\" title=\"hexo替换主题\"></a>hexo替换主题</h2><p>我使用的next主题<br>1.打开git bash 并切换到你的博客目录下 比如我的博客目录是 /hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#自己切换自己的博客目录</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> hexo</span><br><span class=\"line\"><span class=\"comment\"># 执行下面命令</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>2.修改博客配置文件 /hexo/_config.yml 如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class=\"line\">## Themes: http:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class=\"line\">#以前的选项为     theme: landscape</span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>3.修改主题配置文件      /hexo/themes/next/_config.yml</p>\n<h2 id=\"menu修改\"><a href=\"#menu修改\" class=\"headerlink\" title=\"menu修改\"></a>menu修改</h2><p>找到下面内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\"># Menu Settings</span><br><span class=\"line\"># ---------------------------------------------------------------</span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: &#x2F; || home</span><br><span class=\"line\">  #about: &#x2F;about&#x2F; || user</span><br><span class=\"line\">  tags: &#x2F;tags&#x2F; || tags</span><br><span class=\"line\">  #categories: &#x2F;categories&#x2F; || th</span><br><span class=\"line\">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class=\"line\">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class=\"line\">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>\n<p>去掉 # 就可以多一个菜单栏 比如去掉 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: &#x2F; || home</span><br><span class=\"line\">  #about: &#x2F;about&#x2F; || user</span><br><span class=\"line\">  tags: &#x2F;tags&#x2F; || tags</span><br><span class=\"line\">  categories: &#x2F;categories&#x2F; || th</span><br><span class=\"line\">  #archives: &#x2F;archives&#x2F; || archive</span><br><span class=\"line\">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class=\"line\">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>\n<p>虽然在首页能看见这个菜单，但是是不能使用<br>点击菜单 categories 会返回 can’t get /categories/ 错误信息<br>首先要安装categories对应插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure>\n<p>再在gitbash输入（hexo目录下）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>在/hexo/source 目录下发现多的一个categories文件夹 进入 编辑 index.md</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2018-1-22 12:39:04</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">comments: false</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>在/hexo/source/_post 目录建立 test.md 内容如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: test</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - Testing</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>注意空格！！！！注意空格！！！！注意空格！！！！注意空格！！！！</p>\n<hr>\n<h2 id=\"赞赏功能问题\"><a href=\"#赞赏功能问题\" class=\"headerlink\" title=\"赞赏功能问题\"></a>赞赏功能问题</h2><p>在添加赞赏功能是替换了图片不能出现赞赏功能<br>next赞赏功能启用<br>在主题配置文件 找到如下内容  并修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Reward</span><br><span class=\"line\">reward_comment: Donate</span><br><span class=\"line\">wechatpay: &#x2F;images&#x2F;wechatpay.png</span><br><span class=\"line\">alipay: &#x2F;images&#x2F;alipay.jpg</span><br><span class=\"line\">#bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class=\"line\">&#96;&#96;&#96;  </span><br><span class=\"line\">自己图片位置在 Hexo&#x2F;themes&#x2F;next&#x2F;source image文件内</span><br><span class=\"line\">修改成这样过后但是还是不能显示赞赏功能。至少我是这样，经过百度终于解决了。在主题配置文件查找</span><br><span class=\"line\"></span><br><span class=\"line\"># Automatically Excerpt. Not recommend.</span><br><span class=\"line\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  length: 150</span><br></pre></td></tr></table></figure>\n<p>修改如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Automatically Excerpt. Not recommend.</span><br><span class=\"line\"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class=\"line\">auto_excerpt:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  length: 150</span><br></pre></td></tr></table></figure>\n<p>在执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean &amp;&amp; hexo generate &amp;&amp;  hexo s </span><br></pre></td></tr></table></figure>\n<p>这下应该可以！</p>\n<hr>\n<h2 id=\"本地搜索配置\"><a href=\"#本地搜索配置\" class=\"headerlink\" title=\"本地搜索配置\"></a>本地搜索配置</h2><p>1.hexo配置文件(/hexo/_config.yml)添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<p>2.安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-search --save</span><br><span class=\"line\">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>3.修改 主题配置文件(/hexo/themes/next/_config.yml)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: false</span><br><span class=\"line\">  # if auto, trigger search by changing input</span><br><span class=\"line\">  # if manual, trigger search by pressing enter key or search button</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  # show top n results per article, show all results by setting to -1</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # if auto, trigger search by changing input</span><br><span class=\"line\">  # if manual, trigger search by pressing enter key or search button</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  # show top n results per article, show all results by setting to -1</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"http://theme-next.iissnan.com/\">next参考文档</a><br><a href=\"https://hexo.io/zh-cn/docs/\">hexo参考文档</a></p>\n<p>没事就多看看官方文档，应该能解决问题的！加油！</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Feb 06 2018 23:59:44 GMT+0800 (China Standard Time)","title":"搭建hexo和github遇到问题","path":"2018/02/06/build_hexo_problem/","eyeCatchImage":null,"excerpt":"本文描述了自己搭建hexo所遇到的问题。","date":{"_isAMomentObject":true,"_i":"2018-02-06T15:59:44.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-06T15:59:44.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Hexo","tags":["Hexo"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":4593},{"title":"Hello! Hexo","date":"2018-02-05T20:45:10.000Z","comments":1,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello! Hexo\ndate: 2018/02/05 20:45:10\ncomments: true\ntags:\n\t- officeWord\ncategories:\n\t- Hexo\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-02-05T20:45:10.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4t001dytcvd9yc1tq0","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Feb 06 2018 04:45:10 GMT+0800 (China Standard Time)","title":"Hello! Hexo","path":"2018/02/06/hello-world/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2018-02-05T20:45:10.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-05T20:45:10.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Hexo","tags":["officeWord"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":367},{"title":"matlab函数类型","date":"2018-02-25T20:47:45.000Z","comments":1,"description":"本文主要讲了matlab函数的类型，分别简要讲述了 主函数、子函数、嵌套函数、私有函数、重载函数、匿名函数、内联函数和函数句柄。","_content":"\n# matlab 函数类型\n\n## 主函数\n主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。\n\n## 子函数\n主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也\n采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函\n数的先后顺序和调用的先后顺序无关。\n在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，\n可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。\n\n## 嵌套函数\n在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。\n每个用function定义的函数都必须用end语句结束。\n嵌套函数也有自己的工作区。注意变量作用范围。\n\n## 私有函数\n私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。\n函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。\n**私有函数只能被其父目录内的脚本或函数调用。**\n\n## 重载函数\n在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。\n\n## 匿名函数\n匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。\n创建匿名函数的标准格式\n\n>  fhandle=@(arglist) expression\n\n其中，`expression`通常为一个简单的MATLAB变量表达式实现函数功能。\n`arglist` 为此匿名函数的输入参数列表。\n\n\n## 内联函数\n内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。\n调用格式：\n>  funName=inline(expr)\n\n`funName`为所定义的内联函数名称\n`expr`为表达式对应的字符串。\n\n\n## 函数句柄\n\n函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 **functions()**来获取信息。\n创建函数句柄使用 `@` ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。\n","source":"_posts/matlab_function_type.md","raw":"---\ntitle: matlab函数类型\ndate: 2018/02/25 20:47:45\ncomments: true\ndescription: 本文主要讲了matlab函数的类型，分别简要讲述了 主函数、子函数、嵌套函数、私有函数、重载函数、匿名函数、内联函数和函数句柄。\ntags:\n\t- function\ncategories:\n\t- matlab\n---\n\n# matlab 函数类型\n\n## 主函数\n主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。\n\n## 子函数\n主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也\n采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函\n数的先后顺序和调用的先后顺序无关。\n在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，\n可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。\n\n## 嵌套函数\n在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。\n每个用function定义的函数都必须用end语句结束。\n嵌套函数也有自己的工作区。注意变量作用范围。\n\n## 私有函数\n私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。\n函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。\n**私有函数只能被其父目录内的脚本或函数调用。**\n\n## 重载函数\n在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。\n\n## 匿名函数\n匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。\n创建匿名函数的标准格式\n\n>  fhandle=@(arglist) expression\n\n其中，`expression`通常为一个简单的MATLAB变量表达式实现函数功能。\n`arglist` 为此匿名函数的输入参数列表。\n\n\n## 内联函数\n内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。\n调用格式：\n>  funName=inline(expr)\n\n`funName`为所定义的内联函数名称\n`expr`为表达式对应的字符串。\n\n\n## 函数句柄\n\n函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 **functions()**来获取信息。\n创建函数句柄使用 `@` ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。\n","slug":"matlab_function_type","published":1,"updated":"2018-02-25T20:47:45.000Z","layout":"post","photos":[],"link":"","_id":"ckkma2a4v001gytcvd8en5ftb","content":"<h1 id=\"matlab-函数类型\"><a href=\"#matlab-函数类型\" class=\"headerlink\" title=\"matlab 函数类型\"></a>matlab 函数类型</h1><h2 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h2><p>主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。</p>\n<h2 id=\"子函数\"><a href=\"#子函数\" class=\"headerlink\" title=\"子函数\"></a>子函数</h2><p>主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也<br>采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函<br>数的先后顺序和调用的先后顺序无关。<br>在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，<br>可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。</p>\n<h2 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h2><p>在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。<br>每个用function定义的函数都必须用end语句结束。<br>嵌套函数也有自己的工作区。注意变量作用范围。</p>\n<h2 id=\"私有函数\"><a href=\"#私有函数\" class=\"headerlink\" title=\"私有函数\"></a>私有函数</h2><p>私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。<br>函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。<br><strong>私有函数只能被其父目录内的脚本或函数调用。</strong></p>\n<h2 id=\"重载函数\"><a href=\"#重载函数\" class=\"headerlink\" title=\"重载函数\"></a>重载函数</h2><p>在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。</p>\n<h2 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h2><p>匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。<br>创建匿名函数的标准格式</p>\n<blockquote>\n<p> fhandle=@(arglist) expression</p>\n</blockquote>\n<p>其中，<code>expression</code>通常为一个简单的MATLAB变量表达式实现函数功能。<br><code>arglist</code> 为此匿名函数的输入参数列表。</p>\n<h2 id=\"内联函数\"><a href=\"#内联函数\" class=\"headerlink\" title=\"内联函数\"></a>内联函数</h2><p>内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。<br>调用格式：</p>\n<blockquote>\n<p> funName=inline(expr)</p>\n</blockquote>\n<p><code>funName</code>为所定义的内联函数名称<br><code>expr</code>为表达式对应的字符串。</p>\n<h2 id=\"函数句柄\"><a href=\"#函数句柄\" class=\"headerlink\" title=\"函数句柄\"></a>函数句柄</h2><p>函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 **functions()**来获取信息。<br>创建函数句柄使用 <code>@</code> ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"matlab-函数类型\"><a href=\"#matlab-函数类型\" class=\"headerlink\" title=\"matlab 函数类型\"></a>matlab 函数类型</h1><h2 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h2><p>主函数在结构上与其他函数没有什么区别，之所以叫主函数，就是因为他在M文件中坐了第一把交椅，其他函数都排在他的后面。按惯例他与M文件同名，在命令窗口或者其他函数中调用这个函数，都是引用M文件名。</p>\n<h2 id=\"子函数\"><a href=\"#子函数\" class=\"headerlink\" title=\"子函数\"></a>子函数</h2><p>主函数之后编写的函数为子函数。在函数M文件中,只有一个主函数，但是可以有多个子函数。所有的子函数也<br>采用function进行定义。如果主函数中包含子函数，则每个采用function定义的函数必须采用end结束。各个子函<br>数的先后顺序和调用的先后顺序无关。<br>在主函数进行函数调用时，首先查找该函数文件中的子函数，如果有同名的子函数，则调用该子函数。因此，<br>可以编写同名的子函数实现函数的重载。子函数只能被同一文件的主函数或其他子函数调用。</p>\n<h2 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h2><p>在函数内部，还可以定义一个或者多个函数称为函数的嵌套。在函数的内部定义的函数称为嵌套函数。可以进行多层嵌套。<br>每个用function定义的函数都必须用end语句结束。<br>嵌套函数也有自己的工作区。注意变量作用范围。</p>\n<h2 id=\"私有函数\"><a href=\"#私有函数\" class=\"headerlink\" title=\"私有函数\"></a>私有函数</h2><p>私有函数要保存在该目录的private文件夹下,具有有限的访问权限。私有函数的编写和普通函数的编写没有什么区别。<br>函数M文件可以直接调用私有函数。该函数M文件所在的目录下直接有一个private目录，私有函数就保存在该目录下。<br><strong>私有函数只能被其父目录内的脚本或函数调用。</strong></p>\n<h2 id=\"重载函数\"><a href=\"#重载函数\" class=\"headerlink\" title=\"重载函数\"></a>重载函数</h2><p>在MATLAB中有很多都是重载函数，重载函数具有相同的函数名，但是参数类型或个数不同。当用户在调用函数时，MATLAB会根据实际参数类型和个数来选择其中一个。在MATLAB中重载函数保存在不同的目录下。</p>\n<h2 id=\"匿名函数\"><a href=\"#匿名函数\" class=\"headerlink\" title=\"匿名函数\"></a>匿名函数</h2><p>匿名函数通常是很简单的函数。匿名函数是面向命令行的函数形式，它通常只有一句很简单的声明语句组成。<br>创建匿名函数的标准格式</p>\n<blockquote>\n<p> fhandle=@(arglist) expression</p>\n</blockquote>\n<p>其中，<code>expression</code>通常为一个简单的MATLAB变量表达式实现函数功能。<br><code>arglist</code> 为此匿名函数的输入参数列表。</p>\n<h2 id=\"内联函数\"><a href=\"#内联函数\" class=\"headerlink\" title=\"内联函数\"></a>内联函数</h2><p>内联函数是MATLAB比较简单的函数之一。其适用于表达式较为简单的函数。<br>调用格式：</p>\n<blockquote>\n<p> funName=inline(expr)</p>\n</blockquote>\n<p><code>funName</code>为所定义的内联函数名称<br><code>expr</code>为表达式对应的字符串。</p>\n<h2 id=\"函数句柄\"><a href=\"#函数句柄\" class=\"headerlink\" title=\"函数句柄\"></a>函数句柄</h2><p>函数句柄是一种特殊的函数类型，它提供了间接调用函数的方法，类似于C语言中的指针，只是这里只指向函数。函数句柄包含了该函数的函数名和类型等信息，可以通过函数 **functions()**来获取信息。<br>创建函数句柄使用 <code>@</code> ，可以使用函数句柄调用其他函数，也可以将函数句柄存储在数据结构中，方便以后使用。当使用函数句柄调用函数时，MATLAB会立即执行，不会进行文件收缩。当多次调用一个函数文件时，可以节约大量的搜索时间，从而提高函数的执行效率。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Mon Feb 26 2018 04:47:45 GMT+0800 (China Standard Time)","title":"matlab函数类型","path":"2018/02/26/matlab_function_type/","eyeCatchImage":null,"excerpt":"本文主要讲了matlab函数的类型，分别简要讲述了 主函数、子函数、嵌套函数、私有函数、重载函数、匿名函数、内联函数和函数句柄。","date":{"_isAMomentObject":true,"_i":"2018-02-25T20:47:45.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-02-25T20:47:45.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"matlab","tags":["function"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1147},{"title":"Matlab Live Editor 编辑器简单使用","comment":true,"date":"2021-02-02T14:21:13.000Z","description":"本文对matlab自带的Live Editor 编辑器使用做简单介绍！ 以及自己的一些使用习惯！","mathjax":true,"_content":"\n# Matlab Live Editor 基本介绍 #\n\nMatlab [Live Editor](https://www.mathworks.com/products/matlab/live-editor.html) 是 matlab R2016a 引入的新matlab实时编辑器，也就是说 **Matlab R2016a**的版本都可以使用live editor。官方给出你可以用 R2014b,R2015a和R2015b打开live script. 使用live editor最好使用高版本的Matlab。我用的R2017b是基本没有问题的。\n\n下面是matlab官方给的 live script 解释。翻译一下：live script可以把代码和代码运行的结果保存在一个文件，更强大的功能可以处理文本格式，可以插入公式、插入图片添加超链接等。简单的说更像一个笔记本，功能更强大，使用更方便，比以前的m文件方便多了。个人使用也感受到m文件在各个平台存在中文乱码问题，但是live script不存在中文乱码问题。更多live editor技巧和功能请继续阅读下文。\n> you can create live scripts that show output together with the code that produced it. Add formatted text, equations, images, and hyperlinks to enhance your narrative, and share the live script with others as an interactive document.\n\n---\n\n$E=mc^2$\n\n# Matlab Live Editor 基本使用 #\n\n## 创建 live script ##\n\n创建live script文件有两种方法，一种是鼠标点点点，另一种当然是键盘敲敲敲。\n\n1. 鼠标点点点方法\n   - 首先点击菜单栏 **HOME**,然后在matlab左上角点击 **New Live Script** \n   - 首先点击菜单栏 **HOME**,也可以点击 **New**, 下拉菜单选择 **Live Script**。\n\n   ![点点点创建live script](Matlab-Live-Editor-Introduction/creat_live_editor_click.gif)\n\n2. 键盘敲敲敲方法\n   在matlab的Command窗口输入命令`edit filename.mlx`\n\n   ![键盘敲敲敲方法](Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif)\n\n## Live Editor 简单使用 ##\n   \n1. live Editor使用演示, 请看gif图，编程使用和m文件基本相同，主要有自动补全功能，可以防止自己输入代码出错。\n   \n   ![Live Editor 演示](Matlab-Live-Editor-Introduction/simple_use_live_editor.gif) \n\n2. 两种显示代码运行结果的方式\n\n   ![显示运行结果](Matlab-Live-Editor-Introduction/show_result_live_editor.gif)\n\n3. 运行代码\n   可以点击 **Run All** 该mlx 文件的代码全部运行。也可以仅仅运行当前节的代码，点击 **Run Section**,运行当前节的代码，可以点击单击live editor左侧边栏。\n   \n   ![运行代码](Matlab-Live-Editor-Introduction/run_code_live_editor.gif)\n\n4. 代码分节\n   上面讲了代码的分节运行，那么怎么分节呢？ 可以点击Live editor **Section Break**, 或者快捷键`Ctrl+Alt+Enter`,解放你的鼠标！\n   \n   ![分节操作](Matlab-Live-Editor-Introduction/break_section_live_editor.gif)\n\n5. 运行图片放大\n   \n   ![放大作图](Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif)\n\n6. 插入文本\n   live editor可以插入文本，并有一定的格式化功能，可以把matlab代码写成文档的形式。首先你要切换到文本模式，当然可以鼠标点点点，也可以快捷键`Alt+Enter`,可以再按一次快捷键切换到code模式。\n   \n   ![切换到文本模式](Matlab-Live-Editor-Introduction/insert_text_live_editor.gif)\n\n   ![切换到code模式](Matlab-Live-Editor-Introduction/change_code_live_editor.gif)\n\n7. 文本格式化\n   live editor文泵格式化的功能是有限的，不像 MS word 功能强大，但是基本满足需求。还是值得使用的。可以用鼠标点点点实现格式化，我更偏爱用快捷键方式，速度更快。只要你把鼠标悬浮在每个功能上面，就会自动显示对应功能快捷键。下图演示基本的文本操作。\n\n   ![文本格式化操作演示](Matlab-Live-Editor-Introduction/text_format_live_editor.gif)\n\n8. 插入图片和超链接\n   Matlab live editor 插入图片和超链接十分方便，简单。 首先在matlab菜单栏选择 **INSERT**, 然后点击 **Image** **Hyperlink**\n\n   ![插入图片和超链接](Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif)\n\n9. 插入公式\n   插入公式是一个特别方便的功能，尤其是支持Latex公式，且可以实时预览公式。快捷键插入公式可以提高你的编辑效率，比如`Ctrl+ALt+G`,Latex模式的公式输入。\n\n   ![插入公式](Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif)\n\n10. 清除显示结果\n    有时可能结果出错，想清除live script运行结果。操作如下。\n    ![清楚结果](Matlab-Live-Editor-Introduction/clear_output_live_editor.gif)\n\n11. 保存为其他文件\n    你可以把mlx文件另存为m文件，也可以保存为pdf文件等等。最舒适的pdf文件，可以分享给其他人。pdf文件基本不存在格式问题，具有较好的格式兼容性。\n    ![保存为其他文件](Matlab-Live-Editor-Introduction/save_as_live_editor.gif)\n\n# 更多技巧 #\n更多使用技巧可以使用 `doc live editor`来查找！ 相当有用，以上内容全部通过这个帮助文档学习！\n\n![获取更多内容](Matlab-Live-Editor-Introduction/more_tech_live_editor.gif)\n\n\n","source":"_posts/Matlab-Live-Editor-Introduction.md","raw":"---\ntitle: Matlab Live Editor 编辑器简单使用\ncomment: true\ndate: 2021-02-02 14:21:13\ndescription: 本文对matlab自带的Live Editor 编辑器使用做简单介绍！ 以及自己的一些使用习惯！\nmathjax: true\ntags:\n  - matlab live editor \ncategories:\n  - matlab\n\n---\n\n# Matlab Live Editor 基本介绍 #\n\nMatlab [Live Editor](https://www.mathworks.com/products/matlab/live-editor.html) 是 matlab R2016a 引入的新matlab实时编辑器，也就是说 **Matlab R2016a**的版本都可以使用live editor。官方给出你可以用 R2014b,R2015a和R2015b打开live script. 使用live editor最好使用高版本的Matlab。我用的R2017b是基本没有问题的。\n\n下面是matlab官方给的 live script 解释。翻译一下：live script可以把代码和代码运行的结果保存在一个文件，更强大的功能可以处理文本格式，可以插入公式、插入图片添加超链接等。简单的说更像一个笔记本，功能更强大，使用更方便，比以前的m文件方便多了。个人使用也感受到m文件在各个平台存在中文乱码问题，但是live script不存在中文乱码问题。更多live editor技巧和功能请继续阅读下文。\n> you can create live scripts that show output together with the code that produced it. Add formatted text, equations, images, and hyperlinks to enhance your narrative, and share the live script with others as an interactive document.\n\n---\n\n$E=mc^2$\n\n# Matlab Live Editor 基本使用 #\n\n## 创建 live script ##\n\n创建live script文件有两种方法，一种是鼠标点点点，另一种当然是键盘敲敲敲。\n\n1. 鼠标点点点方法\n   - 首先点击菜单栏 **HOME**,然后在matlab左上角点击 **New Live Script** \n   - 首先点击菜单栏 **HOME**,也可以点击 **New**, 下拉菜单选择 **Live Script**。\n\n   ![点点点创建live script](Matlab-Live-Editor-Introduction/creat_live_editor_click.gif)\n\n2. 键盘敲敲敲方法\n   在matlab的Command窗口输入命令`edit filename.mlx`\n\n   ![键盘敲敲敲方法](Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif)\n\n## Live Editor 简单使用 ##\n   \n1. live Editor使用演示, 请看gif图，编程使用和m文件基本相同，主要有自动补全功能，可以防止自己输入代码出错。\n   \n   ![Live Editor 演示](Matlab-Live-Editor-Introduction/simple_use_live_editor.gif) \n\n2. 两种显示代码运行结果的方式\n\n   ![显示运行结果](Matlab-Live-Editor-Introduction/show_result_live_editor.gif)\n\n3. 运行代码\n   可以点击 **Run All** 该mlx 文件的代码全部运行。也可以仅仅运行当前节的代码，点击 **Run Section**,运行当前节的代码，可以点击单击live editor左侧边栏。\n   \n   ![运行代码](Matlab-Live-Editor-Introduction/run_code_live_editor.gif)\n\n4. 代码分节\n   上面讲了代码的分节运行，那么怎么分节呢？ 可以点击Live editor **Section Break**, 或者快捷键`Ctrl+Alt+Enter`,解放你的鼠标！\n   \n   ![分节操作](Matlab-Live-Editor-Introduction/break_section_live_editor.gif)\n\n5. 运行图片放大\n   \n   ![放大作图](Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif)\n\n6. 插入文本\n   live editor可以插入文本，并有一定的格式化功能，可以把matlab代码写成文档的形式。首先你要切换到文本模式，当然可以鼠标点点点，也可以快捷键`Alt+Enter`,可以再按一次快捷键切换到code模式。\n   \n   ![切换到文本模式](Matlab-Live-Editor-Introduction/insert_text_live_editor.gif)\n\n   ![切换到code模式](Matlab-Live-Editor-Introduction/change_code_live_editor.gif)\n\n7. 文本格式化\n   live editor文泵格式化的功能是有限的，不像 MS word 功能强大，但是基本满足需求。还是值得使用的。可以用鼠标点点点实现格式化，我更偏爱用快捷键方式，速度更快。只要你把鼠标悬浮在每个功能上面，就会自动显示对应功能快捷键。下图演示基本的文本操作。\n\n   ![文本格式化操作演示](Matlab-Live-Editor-Introduction/text_format_live_editor.gif)\n\n8. 插入图片和超链接\n   Matlab live editor 插入图片和超链接十分方便，简单。 首先在matlab菜单栏选择 **INSERT**, 然后点击 **Image** **Hyperlink**\n\n   ![插入图片和超链接](Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif)\n\n9. 插入公式\n   插入公式是一个特别方便的功能，尤其是支持Latex公式，且可以实时预览公式。快捷键插入公式可以提高你的编辑效率，比如`Ctrl+ALt+G`,Latex模式的公式输入。\n\n   ![插入公式](Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif)\n\n10. 清除显示结果\n    有时可能结果出错，想清除live script运行结果。操作如下。\n    ![清楚结果](Matlab-Live-Editor-Introduction/clear_output_live_editor.gif)\n\n11. 保存为其他文件\n    你可以把mlx文件另存为m文件，也可以保存为pdf文件等等。最舒适的pdf文件，可以分享给其他人。pdf文件基本不存在格式问题，具有较好的格式兼容性。\n    ![保存为其他文件](Matlab-Live-Editor-Introduction/save_as_live_editor.gif)\n\n# 更多技巧 #\n更多使用技巧可以使用 `doc live editor`来查找！ 相当有用，以上内容全部通过这个帮助文档学习！\n\n![获取更多内容](Matlab-Live-Editor-Introduction/more_tech_live_editor.gif)\n\n\n","slug":"Matlab-Live-Editor-Introduction","published":1,"updated":"2021-02-02T14:21:13.000Z","_id":"ckknsqcc900006tcv1ytphbew","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"matlab-live-editor-基本介绍\">Matlab Live Editor 基本介绍</h1>\n<p>Matlab <a href=\"https://www.mathworks.com/products/matlab/live-editor.html\">Live Editor</a> 是 matlab R2016a 引入的新matlab实时编辑器，也就是说 <strong>Matlab R2016a</strong>的版本都可以使用live editor。官方给出你可以用 R2014b,R2015a和R2015b打开live script. 使用live editor最好使用高版本的Matlab。我用的R2017b是基本没有问题的。</p>\n<p>下面是matlab官方给的 live script 解释。翻译一下：live script可以把代码和代码运行的结果保存在一个文件，更强大的功能可以处理文本格式，可以插入公式、插入图片添加超链接等。简单的说更像一个笔记本，功能更强大，使用更方便，比以前的m文件方便多了。个人使用也感受到m文件在各个平台存在中文乱码问题，但是live script不存在中文乱码问题。更多live editor技巧和功能请继续阅读下文。 &gt; you can create live scripts that show output together with the code that produced it. Add formatted text, equations, images, and hyperlinks to enhance your narrative, and share the live script with others as an interactive document.</p>\n<hr>\n<p><span class=\"math inline\">\\(E=mc^2\\)</span></p>\n<h1 id=\"matlab-live-editor-基本使用\">Matlab Live Editor 基本使用</h1>\n<h2 id=\"创建-live-script\">创建 live script</h2>\n<p>创建live script文件有两种方法，一种是鼠标点点点，另一种当然是键盘敲敲敲。</p>\n<ol type=\"1\">\n<li>鼠标点点点方法\n<ul>\n<li>首先点击菜单栏 <strong>HOME</strong>,然后在matlab左上角点击 <strong>New Live Script</strong></li>\n<li>首先点击菜单栏 <strong>HOME</strong>,也可以点击 <strong>New</strong>, 下拉菜单选择 <strong>Live Script</strong>。</li>\n</ul>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif\" alt=\"点点点创建live script\"><figcaption>点点点创建live script</figcaption>\n</figure></li>\n<li><p>键盘敲敲敲方法 在matlab的Command窗口输入命令<code>edit filename.mlx</code></p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif\" alt=\"键盘敲敲敲方法\"><figcaption>键盘敲敲敲方法</figcaption>\n</figure></li>\n</ol>\n<h2 id=\"live-editor-简单使用\">Live Editor 简单使用</h2>\n<ol type=\"1\">\n<li><p>live Editor使用演示, 请看gif图，编程使用和m文件基本相同，主要有自动补全功能，可以防止自己输入代码出错。</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif\" alt=\"Live Editor 演示\"><figcaption>Live Editor 演示</figcaption>\n</figure></li>\n<li><p>两种显示代码运行结果的方式</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/show_result_live_editor.gif\" alt=\"显示运行结果\"><figcaption>显示运行结果</figcaption>\n</figure></li>\n<li><p>运行代码 可以点击 <strong>Run All</strong> 该mlx 文件的代码全部运行。也可以仅仅运行当前节的代码，点击 <strong>Run Section</strong>,运行当前节的代码，可以点击单击live editor左侧边栏。</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/run_code_live_editor.gif\" alt=\"运行代码\"><figcaption>运行代码</figcaption>\n</figure></li>\n<li><p>代码分节 上面讲了代码的分节运行，那么怎么分节呢？ 可以点击Live editor <strong>Section Break</strong>, 或者快捷键<code>Ctrl+Alt+Enter</code>,解放你的鼠标！</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/break_section_live_editor.gif\" alt=\"分节操作\"><figcaption>分节操作</figcaption>\n</figure></li>\n<li><p>运行图片放大</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif\" alt=\"放大作图\"><figcaption>放大作图</figcaption>\n</figure></li>\n<li><p>插入文本 live editor可以插入文本，并有一定的格式化功能，可以把matlab代码写成文档的形式。首先你要切换到文本模式，当然可以鼠标点点点，也可以快捷键<code>Alt+Enter</code>,可以再按一次快捷键切换到code模式。</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif\" alt=\"切换到文本模式\"><figcaption>切换到文本模式</figcaption>\n</figure>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/change_code_live_editor.gif\" alt=\"切换到code模式\"><figcaption>切换到code模式</figcaption>\n</figure></li>\n<li><p>文本格式化 live editor文泵格式化的功能是有限的，不像 MS word 功能强大，但是基本满足需求。还是值得使用的。可以用鼠标点点点实现格式化，我更偏爱用快捷键方式，速度更快。只要你把鼠标悬浮在每个功能上面，就会自动显示对应功能快捷键。下图演示基本的文本操作。</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/text_format_live_editor.gif\" alt=\"文本格式化操作演示\"><figcaption>文本格式化操作演示</figcaption>\n</figure></li>\n<li><p>插入图片和超链接 Matlab live editor 插入图片和超链接十分方便，简单。 首先在matlab菜单栏选择 <strong>INSERT</strong>, 然后点击 <strong>Image</strong> <strong>Hyperlink</strong></p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif\" alt=\"插入图片和超链接\"><figcaption>插入图片和超链接</figcaption>\n</figure></li>\n<li><p>插入公式 插入公式是一个特别方便的功能，尤其是支持Latex公式，且可以实时预览公式。快捷键插入公式可以提高你的编辑效率，比如<code>Ctrl+ALt+G</code>,Latex模式的公式输入。</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif\" alt=\"插入公式\"><figcaption>插入公式</figcaption>\n</figure></li>\n<li><p>清除显示结果 有时可能结果出错，想清除live script运行结果。操作如下。 <img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif\" alt=\"清楚结果\"></p></li>\n<li><p>保存为其他文件 你可以把mlx文件另存为m文件，也可以保存为pdf文件等等。最舒适的pdf文件，可以分享给其他人。pdf文件基本不存在格式问题，具有较好的格式兼容性。 <img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/save_as_live_editor.gif\" alt=\"保存为其他文件\"></p></li>\n</ol>\n<h1 id=\"更多技巧\">更多技巧</h1>\n<p>更多使用技巧可以使用 <code>doc live editor</code>来查找！ 相当有用，以上内容全部通过这个帮助文档学习！</p>\n<figure>\n<img data-src=\"/2021/02/02/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif\" alt=\"获取更多内容\"><figcaption>获取更多内容</figcaption>\n</figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"matlab-live-editor-基本介绍\">Matlab Live Editor 基本介绍</h1>\n<p>Matlab <a href=\"https://www.mathworks.com/products/matlab/live-editor.html\">Live Editor</a> 是 matlab R2016a 引入的新matlab实时编辑器，也就是说 <strong>Matlab R2016a</strong>的版本都可以使用live editor。官方给出你可以用 R2014b,R2015a和R2015b打开live script. 使用live editor最好使用高版本的Matlab。我用的R2017b是基本没有问题的。</p>\n<p>下面是matlab官方给的 live script 解释。翻译一下：live script可以把代码和代码运行的结果保存在一个文件，更强大的功能可以处理文本格式，可以插入公式、插入图片添加超链接等。简单的说更像一个笔记本，功能更强大，使用更方便，比以前的m文件方便多了。个人使用也感受到m文件在各个平台存在中文乱码问题，但是live script不存在中文乱码问题。更多live editor技巧和功能请继续阅读下文。 &gt; you can create live scripts that show output together with the code that produced it. Add formatted text, equations, images, and hyperlinks to enhance your narrative, and share the live script with others as an interactive document.</p>\n<hr>\n<p><span class=\"math inline\">\\(E=mc^2\\)</span></p>\n<h1 id=\"matlab-live-editor-基本使用\">Matlab Live Editor 基本使用</h1>\n<h2 id=\"创建-live-script\">创建 live script</h2>\n<p>创建live script文件有两种方法，一种是鼠标点点点，另一种当然是键盘敲敲敲。</p>\n<ol type=\"1\">\n<li>鼠标点点点方法\n<ul>\n<li>首先点击菜单栏 <strong>HOME</strong>,然后在matlab左上角点击 <strong>New Live Script</strong></li>\n<li>首先点击菜单栏 <strong>HOME</strong>,也可以点击 <strong>New</strong>, 下拉菜单选择 <strong>Live Script</strong>。</li>\n</ul>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif\" alt=\"点点点创建live script\"><figcaption>点点点创建live script</figcaption>\n</figure></li>\n<li><p>键盘敲敲敲方法 在matlab的Command窗口输入命令<code>edit filename.mlx</code></p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif\" alt=\"键盘敲敲敲方法\"><figcaption>键盘敲敲敲方法</figcaption>\n</figure></li>\n</ol>\n<h2 id=\"live-editor-简单使用\">Live Editor 简单使用</h2>\n<ol type=\"1\">\n<li><p>live Editor使用演示, 请看gif图，编程使用和m文件基本相同，主要有自动补全功能，可以防止自己输入代码出错。</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif\" alt=\"Live Editor 演示\"><figcaption>Live Editor 演示</figcaption>\n</figure></li>\n<li><p>两种显示代码运行结果的方式</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/show_result_live_editor.gif\" alt=\"显示运行结果\"><figcaption>显示运行结果</figcaption>\n</figure></li>\n<li><p>运行代码 可以点击 <strong>Run All</strong> 该mlx 文件的代码全部运行。也可以仅仅运行当前节的代码，点击 <strong>Run Section</strong>,运行当前节的代码，可以点击单击live editor左侧边栏。</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/run_code_live_editor.gif\" alt=\"运行代码\"><figcaption>运行代码</figcaption>\n</figure></li>\n<li><p>代码分节 上面讲了代码的分节运行，那么怎么分节呢？ 可以点击Live editor <strong>Section Break</strong>, 或者快捷键<code>Ctrl+Alt+Enter</code>,解放你的鼠标！</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/break_section_live_editor.gif\" alt=\"分节操作\"><figcaption>分节操作</figcaption>\n</figure></li>\n<li><p>运行图片放大</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif\" alt=\"放大作图\"><figcaption>放大作图</figcaption>\n</figure></li>\n<li><p>插入文本 live editor可以插入文本，并有一定的格式化功能，可以把matlab代码写成文档的形式。首先你要切换到文本模式，当然可以鼠标点点点，也可以快捷键<code>Alt+Enter</code>,可以再按一次快捷键切换到code模式。</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif\" alt=\"切换到文本模式\"><figcaption>切换到文本模式</figcaption>\n</figure>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/change_code_live_editor.gif\" alt=\"切换到code模式\"><figcaption>切换到code模式</figcaption>\n</figure></li>\n<li><p>文本格式化 live editor文泵格式化的功能是有限的，不像 MS word 功能强大，但是基本满足需求。还是值得使用的。可以用鼠标点点点实现格式化，我更偏爱用快捷键方式，速度更快。只要你把鼠标悬浮在每个功能上面，就会自动显示对应功能快捷键。下图演示基本的文本操作。</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/text_format_live_editor.gif\" alt=\"文本格式化操作演示\"><figcaption>文本格式化操作演示</figcaption>\n</figure></li>\n<li><p>插入图片和超链接 Matlab live editor 插入图片和超链接十分方便，简单。 首先在matlab菜单栏选择 <strong>INSERT</strong>, 然后点击 <strong>Image</strong> <strong>Hyperlink</strong></p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif\" alt=\"插入图片和超链接\"><figcaption>插入图片和超链接</figcaption>\n</figure></li>\n<li><p>插入公式 插入公式是一个特别方便的功能，尤其是支持Latex公式，且可以实时预览公式。快捷键插入公式可以提高你的编辑效率，比如<code>Ctrl+ALt+G</code>,Latex模式的公式输入。</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif\" alt=\"插入公式\"><figcaption>插入公式</figcaption>\n</figure></li>\n<li><p>清除显示结果 有时可能结果出错，想清除live script运行结果。操作如下。 <img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif\" alt=\"清楚结果\"></p></li>\n<li><p>保存为其他文件 你可以把mlx文件另存为m文件，也可以保存为pdf文件等等。最舒适的pdf文件，可以分享给其他人。pdf文件基本不存在格式问题，具有较好的格式兼容性。 <img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/save_as_live_editor.gif\" alt=\"保存为其他文件\"></p></li>\n</ol>\n<h1 id=\"更多技巧\">更多技巧</h1>\n<p>更多使用技巧可以使用 <code>doc live editor</code>来查找！ 相当有用，以上内容全部通过这个帮助文档学习！</p>\n<figure>\n<img src=\"/2021/02/02/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif\" alt=\"获取更多内容\"><figcaption>获取更多内容</figcaption>\n</figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif","popularPost_tmp_gaData":{"updated":"Tue Feb 02 2021 22:21:13 GMT+0800 (China Standard Time)","title":"Matlab Live Editor 编辑器简单使用","path":"2021/02/02/Matlab-Live-Editor-Introduction/","eyeCatchImage":"/2021/02/02/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif","excerpt":"本文对matlab自带的Live Editor 编辑器使用做简单介绍！ 以及自己的一些使用习惯！","date":{"_isAMomentObject":true,"_i":"2021-02-02T14:21:13.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2021-02-02T14:21:13.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"matlab","tags":["matlab live editor"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1725}],"PostAsset":[{"_id":"source/_posts/Adapter_Design_Pattern/Adapter_Design_Pattern.png","slug":"Adapter_Design_Pattern.png","post":"ckkma2a3x0001ytcv7uudh5ce","modified":0,"renderable":0},{"_id":"source/_posts/Adapter_Design_Pattern/Adapter_Design_Pattern_proxy.png","slug":"Adapter_Design_Pattern_proxy.png","post":"ckkma2a3x0001ytcv7uudh5ce","modified":0,"renderable":0},{"_id":"source/_posts/Command_Design_Pattern/Command_Design_Pattern_Detail.png","slug":"Command_Design_Pattern_Detail.png","post":"ckkma2a400003ytcvezx7ht30","modified":0,"renderable":0},{"_id":"source/_posts/Command_Design_Pattern/Command_Design_Pattern_Simple.png","slug":"Command_Design_Pattern_Simple.png","post":"ckkma2a400003ytcvezx7ht30","modified":0,"renderable":0},{"_id":"source/_posts/Facade_Design_Pattern/Facade_Design_Pattern.png","slug":"Facade_Design_Pattern.png","post":"ckkma2a430007ytcv0fph2s90","modified":0,"renderable":0},{"_id":"source/_posts/FactoryMethod_Design_Pattern/FactoryMethod_Design_Pattern.png","slug":"FactoryMethod_Design_Pattern.png","post":"ckkma2a450009ytcv6zyx4cmd","modified":0,"renderable":0},{"_id":"source/_posts/Flyweight_Design_Pattern/flyweight_uml_fig.png","slug":"flyweight_uml_fig.png","post":"ckkma2a46000aytcvh8cd3br2","modified":0,"renderable":0},{"_id":"source/_posts/Iterator_Design_Pattern/Iterator_Design_Pattern.png","slug":"Iterator_Design_Pattern.png","post":"ckkma2a48000eytcv585t1e0z","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/Linux_Distribution.jpg","slug":"Linux_Distribution.jpg","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/apt_install_vim.gif","slug":"apt_install_vim.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/cd_ls.gif","slug":"cd_ls.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/ls_al.gif","slug":"ls_al.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/ls_help.gif","slug":"ls_help.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/man_ls.gif","slug":"man_ls.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/softwareStore.png","slug":"softwareStore.png","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/terminal.png","slug":"terminal.png","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/top.gif","slug":"top.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/vi-vim-cheat-sheet.gif","slug":"vi-vim-cheat-sheet.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/vim_txt.gif","slug":"vim_txt.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Linux_Introduction/vimtutor.gif","slug":"vimtutor.gif","post":"ckkma2a4d000jytcvh98m0czl","modified":0,"renderable":0},{"_id":"source/_posts/Mediator_Design_Pattern/Mediator_Design_Pattern.png","slug":"Mediator_Design_Pattern.png","post":"ckkma2a4e000mytcvewqlbqno","modified":0,"renderable":0},{"_id":"source/_posts/Memento_Design_Pattern/Memento_Design_Pattern.png","slug":"Memento_Design_Pattern.png","post":"ckkma2a4j000qytcvbj78ed87","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep1.PNG","slug":"MyeclipseCrackStep1.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep10.PNG","slug":"MyeclipseCrackStep10.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep11.PNG","slug":"MyeclipseCrackStep11.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep12.PNG","slug":"MyeclipseCrackStep12.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep13.PNG","slug":"MyeclipseCrackStep13.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep2.PNG","slug":"MyeclipseCrackStep2.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep3.PNG","slug":"MyeclipseCrackStep3.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep4.PNG","slug":"MyeclipseCrackStep4.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep5.PNG","slug":"MyeclipseCrackStep5.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep6.PNG","slug":"MyeclipseCrackStep6.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep7.PNG","slug":"MyeclipseCrackStep7.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep8.PNG","slug":"MyeclipseCrackStep8.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Myeclipse2017ci9Crack/MyeclipseCrackStep9.PNG","slug":"MyeclipseCrackStep9.PNG","post":"ckkma2a4k000tytcv1a289dx5","modified":0,"renderable":0},{"_id":"source/_posts/Observe_Design_Pattern/Observe_Design_Pattern.png","slug":"Observe_Design_Pattern.png","post":"ckkma2a4m000xytcvg18lgddm","modified":0,"renderable":0},{"_id":"source/_posts/Proxy_Design_Pattern/Proxy_Design_Pattern.png","slug":"Proxy_Design_Pattern.png","post":"ckkma2a4n0010ytcv9ipr3uhd","modified":0,"renderable":0},{"_id":"source/_posts/State_Design_Pattern/State_Design_Pattern_complex.png","slug":"State_Design_Pattern_complex.png","post":"ckkma2a4o0013ytcv1e6y4bvs","modified":0,"renderable":0},{"_id":"source/_posts/State_Design_Pattern/State_Design_Pattern_simple.png","slug":"State_Design_Pattern_simple.png","post":"ckkma2a4o0013ytcv1e6y4bvs","modified":0,"renderable":0},{"_id":"source/_posts/TemplateMethod_Design_Pattern/TemplateMethod_Design_Pattern.png","slug":"TemplateMethod_Design_Pattern.png","post":"ckkma2a4p0017ytcvdx8p0eu1","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/break_section_live_editor.gif","slug":"break_section_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/change_code_live_editor.gif","slug":"change_code_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/clear_output_live_editor.gif","slug":"clear_output_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/creat_live_editor_click.gif","slug":"creat_live_editor_click.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/creat_live_editor_cmd.gif","slug":"creat_live_editor_cmd.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_equation_live_editor.gif","slug":"insert_equation_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_pic_hyperlink_live_editor.gif","slug":"insert_pic_hyperlink_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/insert_text_live_editor.gif","slug":"insert_text_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/more_tech_live_editor.gif","slug":"more_tech_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/run_code_live_editor.gif","slug":"run_code_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/save_as_live_editor.gif","slug":"save_as_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/show_result_live_editor.gif","slug":"show_result_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/simple_use_live_editor.gif","slug":"simple_use_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/text_format_live_editor.gif","slug":"text_format_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0},{"_id":"source/_posts/Matlab-Live-Editor-Introduction/zoom_fig_live_editor.gif","slug":"zoom_fig_live_editor.gif","post":"ckknsqcc900006tcv1ytphbew","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckkma2a450009ytcv6zyx4cmd","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4b000gytcvazk49xyu"},{"post_id":"ckkma2a3x0001ytcv7uudh5ce","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4d000kytcv6m4j0ms9"},{"post_id":"ckkma2a46000aytcvh8cd3br2","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4f000nytcvd0t250r9"},{"post_id":"ckkma2a48000eytcv585t1e0z","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4k000rytcv289d6p88"},{"post_id":"ckkma2a400003ytcvezx7ht30","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4l000uytcvhpqn5tcw"},{"post_id":"ckkma2a430007ytcv0fph2s90","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4m000yytcv9mbm0h4y"},{"post_id":"ckkma2a4e000mytcvewqlbqno","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4n0011ytcv2mm1et9n"},{"post_id":"ckkma2a4j000qytcvbj78ed87","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4o0014ytcv5noxaew2"},{"post_id":"ckkma2a4m000xytcvg18lgddm","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4q0018ytcv8m05cv81"},{"post_id":"ckkma2a4d000jytcvh98m0czl","category_id":"ckkma2a4l000vytcvg2bl0beh","_id":"ckkma2a4s001bytcvf7xwa2ey"},{"post_id":"ckkma2a4n0010ytcv9ipr3uhd","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4v001eytcv5ltm04ng"},{"post_id":"ckkma2a4o0013ytcv1e6y4bvs","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4v001hytcv4ryr1ssz"},{"post_id":"ckkma2a4b000fytcv98ff6d22","category_id":"ckkma2a4f000oytcvbu1ufbj3","_id":"ckkma2a4w001kytcv5vuef346"},{"post_id":"ckkma2a4b000fytcv98ff6d22","category_id":"ckkma2a4n0012ytcv3ia87nos","_id":"ckkma2a4w001mytcv9d10c837"},{"post_id":"ckkma2a4p0017ytcvdx8p0eu1","category_id":"ckkma2a410004ytcvaj196qzy","_id":"ckkma2a4x001pytcvhp1edwpi"},{"post_id":"ckkma2a4k000tytcv1a289dx5","category_id":"ckkma2a4q0019ytcvgd8u8sin","_id":"ckkma2a4x001rytcvc22yd606"},{"post_id":"ckkma2a4r001aytcv19i0b8o9","category_id":"ckkma2a4w001iytcv42ul1ybw","_id":"ckkma2a4y001tytcv55ik41w1"},{"post_id":"ckkma2a4t001dytcvd9yc1tq0","category_id":"ckkma2a4w001iytcv42ul1ybw","_id":"ckkma2a4y001wytcva8evhxe9"},{"post_id":"ckkma2a4v001gytcvd8en5ftb","category_id":"ckkma2a4x001sytcv29eh2ibt","_id":"ckkma2a4y001zytcvhu13br8j"},{"post_id":"ckknsqcc900006tcv1ytphbew","category_id":"ckkma2a4x001sytcv29eh2ibt","_id":"ckknsqcci00026tcvh7lq98qr"}],"PostTag":[{"post_id":"ckkma2a3x0001ytcv7uudh5ce","tag_id":"ckkma2a420005ytcvcnk44ybr","_id":"ckkma2a48000dytcvcvo366a4"},{"post_id":"ckkma2a400003ytcvezx7ht30","tag_id":"ckkma2a46000cytcv84w28etn","_id":"ckkma2a4e000lytcvem5actot"},{"post_id":"ckkma2a430007ytcv0fph2s90","tag_id":"ckkma2a4c000iytcv4ttpdkeb","_id":"ckkma2a4k000sytcv3few6tj3"},{"post_id":"ckkma2a450009ytcv6zyx4cmd","tag_id":"ckkma2a4g000pytcvfip2ad6o","_id":"ckkma2a4m000zytcv0ch3hfok"},{"post_id":"ckkma2a46000aytcvh8cd3br2","tag_id":"ckkma2a4l000wytcvd66odsry","_id":"ckkma2a4p0016ytcv7hcqe8ws"},{"post_id":"ckkma2a48000eytcv585t1e0z","tag_id":"ckkma2a4p0015ytcvaojm1tp4","_id":"ckkma2a4v001fytcv5cca576k"},{"post_id":"ckkma2a4b000fytcv98ff6d22","tag_id":"ckkma2a4t001cytcv31q608oi","_id":"ckkma2a4w001lytcv0k6z20sg"},{"post_id":"ckkma2a4d000jytcvh98m0czl","tag_id":"ckkma2a4w001jytcv9todfvsj","_id":"ckkma2a4x001qytcv6rl65v9v"},{"post_id":"ckkma2a4e000mytcvewqlbqno","tag_id":"ckkma2a4x001oytcv04refmlk","_id":"ckkma2a4y001vytcv1rchhvca"},{"post_id":"ckkma2a4j000qytcvbj78ed87","tag_id":"ckkma2a4y001uytcv43woflg8","_id":"ckkma2a4y001yytcv5br3flr3"},{"post_id":"ckkma2a4k000tytcv1a289dx5","tag_id":"ckkma2a4y001xytcvgiqhakje","_id":"ckkma2a4z0022ytcv4qvg21ks"},{"post_id":"ckkma2a4k000tytcv1a289dx5","tag_id":"ckkma2a4y0020ytcv5hqv9qnf","_id":"ckkma2a4z0023ytcv887dauz4"},{"post_id":"ckkma2a4m000xytcvg18lgddm","tag_id":"ckkma2a4z0021ytcv1cnj73cx","_id":"ckkma2a4z0025ytcvf3nz8lj3"},{"post_id":"ckkma2a4n0010ytcv9ipr3uhd","tag_id":"ckkma2a4z0024ytcvd9of3k0q","_id":"ckkma2a510027ytcv51dt4jx6"},{"post_id":"ckkma2a4o0013ytcv1e6y4bvs","tag_id":"ckkma2a510026ytcv52zwau2c","_id":"ckkma2a510029ytcvgcuv9zxu"},{"post_id":"ckkma2a4p0017ytcvdx8p0eu1","tag_id":"ckkma2a510028ytcv26en7qt7","_id":"ckkma2a52002bytcvfs6l28vo"},{"post_id":"ckkma2a4r001aytcv19i0b8o9","tag_id":"ckkma2a51002aytcvc8g56xn4","_id":"ckkma2a52002dytcv7qhn4a97"},{"post_id":"ckkma2a4t001dytcvd9yc1tq0","tag_id":"ckkma2a52002cytcvdox5e4ri","_id":"ckkma2a52002fytcvgybfcxp8"},{"post_id":"ckkma2a4v001gytcvd8en5ftb","tag_id":"ckkma2a52002eytcv4had21ia","_id":"ckkma2a52002gytcvgl07hv7g"},{"post_id":"ckknsqcc900006tcv1ytphbew","tag_id":"ckknsqccc00016tcv843x0i3e","_id":"ckknsqccj00036tcvb362dmpu"}],"Tag":[{"name":"Adapter","_id":"ckkma2a420005ytcvcnk44ybr"},{"name":"Command","_id":"ckkma2a46000cytcv84w28etn"},{"name":"Facade","_id":"ckkma2a4c000iytcv4ttpdkeb"},{"name":"FactoryMethod","_id":"ckkma2a4g000pytcvfip2ad6o"},{"name":"Flyweight","_id":"ckkma2a4l000wytcvd66odsry"},{"name":"Iterator","_id":"ckkma2a4p0015ytcvaojm1tp4"},{"name":"tags","_id":"ckkma2a4t001cytcv31q608oi"},{"name":"linux","_id":"ckkma2a4w001jytcv9todfvsj"},{"name":"Mediator","_id":"ckkma2a4x001oytcv04refmlk"},{"name":"Memento","_id":"ckkma2a4y001uytcv43woflg8"},{"name":"crack","_id":"ckkma2a4y001xytcvgiqhakje"},{"name":"Myeclipse","_id":"ckkma2a4y0020ytcv5hqv9qnf"},{"name":"Observe","_id":"ckkma2a4z0021ytcv1cnj73cx"},{"name":"Proxy","_id":"ckkma2a4z0024ytcvd9of3k0q"},{"name":"state","_id":"ckkma2a510026ytcv52zwau2c"},{"name":"TemplateMethod","_id":"ckkma2a510028ytcv26en7qt7"},{"name":"Hexo","_id":"ckkma2a51002aytcvc8g56xn4"},{"name":"officeWord","_id":"ckkma2a52002cytcvdox5e4ri"},{"name":"function","_id":"ckkma2a52002eytcv4had21ia"},{"name":"matlab live editor","_id":"ckknsqccc00016tcv843x0i3e"}]}}